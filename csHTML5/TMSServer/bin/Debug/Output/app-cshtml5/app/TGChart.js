/* Generated by JSIL v0.8.2 build 30177. See http://jsil.org/ for more information. */ 
'use strict';
var $asm_TGChart = JSIL.DeclareAssembly("TGChart, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("CSHTML5");
JSIL.DeclareNamespace("CSHTML5.Extensions");
JSIL.DeclareNamespace("CSHTML5.Extensions.Plotly");
/* class CSHTML5.Extensions.Plotly.Annotation */ 

(function Annotation$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_TGChart.CSHTML5.Extensions.Plotly.Font)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_mscorlib.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm_mscorlib.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm_mscorlib.System.Object)) ();
  };

  function Annotation__ctor () {
    this.Annotation$ShowArrow$value = true;
  };

  function Annotation_get_Font () {
    return this.Annotation$Font$value;
  };

  function Annotation_get_ShowArrow () {
    return this.Annotation$ShowArrow$value;
  };

  function Annotation_get_Text () {
    return this.Annotation$Text$value;
  };

  function Annotation_get_X () {
    return this.Annotation$X$value;
  };

  function Annotation_get_Xanchor () {
    return this.Annotation$Xanchor$value;
  };

  function Annotation_get_Y () {
    return this.Annotation$Y$value;
  };

  function Annotation_get_Yanchor () {
    return this.Annotation$Yanchor$value;
  };

  function Annotation_set_Font (value) {
    this.Annotation$Font$value = value;
  };

  function Annotation_set_ShowArrow (value) {
    this.Annotation$ShowArrow$value = value;
  };

  function Annotation_set_Text (value) {
    this.Annotation$Text$value = value;
  };

  function Annotation_set_X (value) {
    this.Annotation$X$value = value;
  };

  function Annotation_set_Xanchor (value) {
    this.Annotation$Xanchor$value = value;
  };

  function Annotation_set_Y (value) {
    this.Annotation$Y$value = value;
  };

  function Annotation_set_Yanchor (value) {
    this.Annotation$Yanchor$value = value;
  };

  function Annotation_ToJavaScriptObject () {
    var obj = ([]);
    if (this.Annotation$X$value !== null) {
      obj['x'] = this.Annotation$X$value;;
    }
    if (this.Annotation$Y$value !== null) {
      obj['y'] = this.Annotation$Y$value;;
    }
    if (!$T02()['IsNullOrEmpty'](this.Annotation$Text$value)) {
      obj['text'] = this.Annotation$Text$value;;
    }
    if (!$T02()['IsNullOrEmpty'](this.Annotation$Xanchor$value)) {
      obj['xanchor'] = this.Annotation$Xanchor$value;;
    }
    if (!$T02()['IsNullOrEmpty'](this.Annotation$Yanchor$value)) {
      obj['yanchor'] = this.Annotation$Yanchor$value;;
    }
    obj['showarrow'] = this.Annotation$ShowArrow$value;;
    if (this.Annotation$Font$value !== null) {
      obj['font'] = (this.Annotation$Font$value)['ToJavaScriptObject']();;
    }
    return obj;
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Object"), 
      Name: "CSHTML5.Extensions.Plotly.Annotation", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Annotation__ctor
    );

    $.Method({Static:false, Public:true }, "get_Font", 
      JSIL.MethodSignature.Return($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Font")), 
      Annotation_get_Font
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ShowArrow", 
      JSIL.MethodSignature.Return($.Boolean), 
      Annotation_get_ShowArrow
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Text", 
      JSIL.MethodSignature.Return($.String), 
      Annotation_get_Text
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_X", 
      JSIL.MethodSignature.Return($.Object), 
      Annotation_get_X
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Xanchor", 
      JSIL.MethodSignature.Return($.String), 
      Annotation_get_Xanchor
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Y", 
      JSIL.MethodSignature.Return($.Object), 
      Annotation_get_Y
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Yanchor", 
      JSIL.MethodSignature.Return($.String), 
      Annotation_get_Yanchor
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Font", 
      JSIL.MethodSignature.Action($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Font")), 
      Annotation_set_Font
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ShowArrow", 
      JSIL.MethodSignature.Action($.Boolean), 
      Annotation_set_ShowArrow
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Text", 
      JSIL.MethodSignature.Action($.String), 
      Annotation_set_Text
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_X", 
      JSIL.MethodSignature.Action($.Object), 
      Annotation_set_X
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Xanchor", 
      JSIL.MethodSignature.Action($.String), 
      Annotation_set_Xanchor
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Y", 
      JSIL.MethodSignature.Action($.Object), 
      Annotation_set_Y
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Yanchor", 
      JSIL.MethodSignature.Action($.String), 
      Annotation_set_Yanchor
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "ToJavaScriptObject", 
      JSIL.MethodSignature.Return($.Object), 
      Annotation_ToJavaScriptObject
    );

    $['Field']({Static:false, Public:false}, "Annotation$X$value", $.Object)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Annotation$Y$value", $.Object)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Annotation$Text$value", $.String)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Annotation$Xanchor$value", $.String)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Annotation$Yanchor$value", $.String)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Annotation$ShowArrow$value", $.Boolean)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Annotation$Font$value", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Font"))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "X", $.Object);

    $.Property({Static:false, Public:true }, "Y", $.Object);

    $.Property({Static:false, Public:true }, "Text", $.String);

    $.Property({Static:false, Public:true }, "Xanchor", $.String);

    $.Property({Static:false, Public:true }, "Yanchor", $.String);

    $.Property({Static:false, Public:true }, "ShowArrow", $.Boolean);

    $.Property({Static:false, Public:true }, "Font", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Font"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class CSHTML5.Extensions.Plotly.Axis */ 

(function Axis$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_mscorlib.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_TGChart.CSHTML5.Extensions.Plotly.Font)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm_mscorlib.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm_mscorlib.System.Boolean)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm_mscorlib.System.Object)) ();
  };

  function Axis__ctor () {
    this.Axis$Tickangle$value = 0;
    this.Axis$ZeroLine$value = true;
    this.Axis$GrigWidth$value = 1;
  };

  function Axis_get_GrigWidth () {
    return this.Axis$GrigWidth$value;
  };

  function Axis_get_Tickangle () {
    return this.Axis$Tickangle$value;
  };

  function Axis_get_TickFont () {
    return this.Axis$TickFont$value;
  };

  function Axis_get_Title () {
    return this.Axis$Title$value;
  };

  function Axis_get_TitleFont () {
    return this.Axis$TitleFont$value;
  };

  function Axis_get_ZeroLine () {
    return this.Axis$ZeroLine$value;
  };

  function Axis_set_GrigWidth (value) {
    this.Axis$GrigWidth$value = (value | 0);
  };

  function Axis_set_Tickangle (value) {
    this.Axis$Tickangle$value = (value | 0);
  };

  function Axis_set_TickFont (value) {
    this.Axis$TickFont$value = value;
  };

  function Axis_set_Title (value) {
    this.Axis$Title$value = value;
  };

  function Axis_set_TitleFont (value) {
    this.Axis$TitleFont$value = value;
  };

  function Axis_set_ZeroLine (value) {
    this.Axis$ZeroLine$value = value;
  };

  function Axis_ToJavascriptObject () {
    var obj = ([]);
    if (this.Axis$Title$value !== null) {
      obj['title'] = this.Axis$Title$value;;
    }
    obj['tickangle'] = this.Axis$Tickangle$value;;
    obj['zeroline'] = this.Axis$ZeroLine$value;;
    obj['grigwidth'] = this.Axis$GrigWidth$value;;
    if (this.Axis$TickFont$value !== null) {
      obj['tickfont'] = (this.Axis$TickFont$value)['ToJavaScriptObject']();;
    }
    if (this.Axis$TitleFont$value !== null) {
      obj['titlefont'] = (this.Axis$TitleFont$value)['ToJavaScriptObject']();;
    }
    return obj;
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Object"), 
      Name: "CSHTML5.Extensions.Plotly.Axis", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Axis__ctor
    );

    $.Method({Static:false, Public:true }, "get_GrigWidth", 
      JSIL.MethodSignature.Return($.Int32), 
      Axis_get_GrigWidth
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Tickangle", 
      JSIL.MethodSignature.Return($.Int32), 
      Axis_get_Tickangle
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TickFont", 
      JSIL.MethodSignature.Return($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Font")), 
      Axis_get_TickFont
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Title", 
      JSIL.MethodSignature.Return($.String), 
      Axis_get_Title
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TitleFont", 
      JSIL.MethodSignature.Return($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Font")), 
      Axis_get_TitleFont
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ZeroLine", 
      JSIL.MethodSignature.Return($.Boolean), 
      Axis_get_ZeroLine
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_GrigWidth", 
      JSIL.MethodSignature.Action($.Int32), 
      Axis_set_GrigWidth
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Tickangle", 
      JSIL.MethodSignature.Action($.Int32), 
      Axis_set_Tickangle
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_TickFont", 
      JSIL.MethodSignature.Action($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Font")), 
      Axis_set_TickFont
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Title", 
      JSIL.MethodSignature.Action($.String), 
      Axis_set_Title
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_TitleFont", 
      JSIL.MethodSignature.Action($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Font")), 
      Axis_set_TitleFont
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ZeroLine", 
      JSIL.MethodSignature.Action($.Boolean), 
      Axis_set_ZeroLine
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "ToJavascriptObject", 
      JSIL.MethodSignature.Return($.Object), 
      Axis_ToJavascriptObject
    );

    $['Field']({Static:false, Public:false}, "Axis$Title$value", $.String)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Axis$Tickangle$value", $.Int32)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Axis$ZeroLine$value", $.Boolean)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Axis$GrigWidth$value", $.Int32)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Axis$TickFont$value", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Font"))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Axis$TitleFont$value", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Font"))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "Title", $.String);

    $.Property({Static:false, Public:true }, "Tickangle", $.Int32);

    $.Property({Static:false, Public:true }, "ZeroLine", $.Boolean);

    $.Property({Static:false, Public:true }, "GrigWidth", $.Int32);

    $.Property({Static:false, Public:true }, "TickFont", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Font"));

    $.Property({Static:false, Public:true }, "TitleFont", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Font"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum CSHTML5.Extensions.Plotly.BarMode */ 

JSIL.MakeEnum(
  {
    FullName: "CSHTML5.Extensions.Plotly.BarMode", 
    BaseType: $asm_mscorlib.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Overlay: 0, 
    Stack: 1, 
    Group: 2, 
    Relative: 3, 
  }
);

/* class CSHTML5.Extensions.Plotly.ChartControl */ 

(function ChartControl$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_CSharpXamlForHtml5.Windows.UI.Xaml.Controls.Canvas)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_TGChart.CSHTML5.Extensions.Plotly.Data)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm_TGChart.CSHTML5.Extensions.Plotly.Layout)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm_TGChart.CSHTML5.Extensions.Plotly.ChartControl_$lInitialize$gd__0)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm_mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm_mscorlib.System.Object)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm_CSharpXamlForHtml5.CSHTML5.Interop)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm_mscorlib.System.Guid)) ();
  };

  function ChartControl__ctor () {
    $T00().prototype['_ctor'].call(this);
    this.ChartControl$Data$value = new ($T01())();
    this.ChartControl$Layout$value = new ($T02())();
  };

  function ChartControl_get_Data () {
    return this.ChartControl$Data$value;
  };

  function ChartControl_get_Layout () {
    return this.ChartControl$Layout$value;
  };

  function ChartControl_Initialize () {
    var $lInitialize$gd__ = new JSIL.BoxedVariable(new ($T03())());
    $lInitialize$gd__.get().$l$gt__builder = $T04()['Create']()['MemberwiseClone']();
    $lInitialize$gd__.get().$l$g1__state = -1;
    var $l$gt__builder = $lInitialize$gd__.get().$l$gt__builder['MemberwiseClone']();
    $l$gt__builder['Start$b1']($T03())(/* ref */ $lInitialize$gd__);
    return ($lInitialize$gd__.get().$l$gt__builder)['get_Task']();
  };

  function ChartControl_Render () {
    var div = $T06()['GetDiv'](this);
    if (!div.id) { div.id = $T07()['NewGuid']()['MemberwiseClone']()['toString']() };
    var obj = (this.ChartControl$Data$value)['ToJavaScriptObject']();
    var obj2 = (this.ChartControl$Layout$value)['ToJavaScriptObject']();
    
                Plotly.newPlot(div.id, obj, obj2);
                ;
  };

  function ChartControl_set_Data (value) {
    this.ChartControl$Data$value = value;
  };

  function ChartControl_set_Layout (value) {
    this.ChartControl$Layout$value = value;
  };

  JSIL.MakeType({
      BaseType: $asm_CSharpXamlForHtml5.TypeRef("Windows.UI.Xaml.Controls.Canvas"), 
      Name: "CSHTML5.Extensions.Plotly.ChartControl", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ChartControl__ctor
    );

    $.Method({Static:false, Public:true }, "get_Data", 
      JSIL.MethodSignature.Return($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Data")), 
      ChartControl_get_Data
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Layout", 
      JSIL.MethodSignature.Return($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Layout")), 
      ChartControl_get_Layout
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "Initialize", 
      JSIL.MethodSignature.Return($asm_mscorlib.TypeRef("System.Threading.Tasks.Task")), 
      ChartControl_Initialize
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.AsyncStateMachineAttribute"), function () { return [$asm_TGChart.CSHTML5.Extensions.Plotly.ChartControl_$lInitialize$gd__0.__Type__]; })
      .Attribute($asm_mscorlib.TypeRef("System.Diagnostics.DebuggerStepThroughAttribute"));

    $.Method({Static:false, Public:true }, "Render", 
      JSIL.MethodSignature.Void, 
      ChartControl_Render
    );

    $.Method({Static:false, Public:true }, "set_Data", 
      JSIL.MethodSignature.Action($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Data")), 
      ChartControl_set_Data
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Layout", 
      JSIL.MethodSignature.Action($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Layout")), 
      ChartControl_set_Layout
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $['Field']({Static:true , Public:false}, "JSLibraryWasLoaded", $.Boolean); 
    $['Field']({Static:false, Public:false}, "ChartControl$Data$value", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Data"))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "ChartControl$Layout$value", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Layout"))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "Data", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Data"));

    $.Property({Static:false, Public:true }, "Layout", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Layout"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct CSHTML5.Extensions.Plotly.ChartControl+<Initialize>d__0 */ 

(function $lInitialize$gd__0$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_mscorlib.System.Exception)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_mscorlib.System.Runtime.CompilerServices.TaskAwaiter$b1.Of($asm_mscorlib.System.Object))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm_TGChart.CSHTML5.Extensions.Plotly.ChartControl)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm_mscorlib.System.Threading.Tasks.Task$b1.Of($asm_mscorlib.System.Object))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm_CSharpXamlForHtml5.CSHTML5.Interop)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm_mscorlib.System.Runtime.CompilerServices.AsyncTaskMethodBuilder)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm_mscorlib.System.Runtime.CompilerServices.IAsyncStateMachine)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.TaskAwaiter`1", [$asm_mscorlib.TypeRef("System.Object")]), null))) ();
  };

  function $lInitialize$gd__0_MoveNext ($exception) {
    var taskAwaiter = new JSIL.BoxedVariable(null);
    try {

      var $label0 = 0;
    $labelgroup0: 
      while (true) {
        switch ($label0) {
          case 0: /* $entry0 */ 
            switch (this.$l$g1__state) {
              case -3: 
                break $labelgroup0;

              case 0: 
                taskAwaiter.set(this.$l$gu__$awaiter1);
                this.$l$gu__$awaiter1 = new ($T01())();
                this.$l$g1__state = -1;
                $label0 = 1 /* goto IL_A2 */ ;
                continue $labelgroup0;

              case 1: 
                taskAwaiter.set(this.$l$gu__$awaiter1);
                this.$l$gu__$awaiter1 = new ($T01())();
                this.$l$g1__state = -1;
                $label0 = 2 /* goto IL_10D */ ;
                continue $labelgroup0;

            }
            if ($T02().JSLibraryWasLoaded) {
              break $labelgroup0;
            }
            taskAwaiter.set($S00().Call($T03().prototype, "GetAwaiter", null, $T04()['LoadJavaScriptFile']("ms-appx:///TGChart.ChartControl/typedarray.js")));
            if (!(taskAwaiter.get())['get_IsCompleted']()) {
              this.$l$g1__state = 0;
              this.$l$gu__$awaiter1 = taskAwaiter.get();
              (this.$l$gt__builder)['AwaitUnsafeOnCompleted$b2']($T01(), $thisType)(/* ref */ taskAwaiter, new JSIL.BoxedVariable(this));
              return;
            }

            $label0 = 1 /* goto IL_A2 */ ;
            continue $labelgroup0;
          case 1: /* IL_A2 */ 
            (taskAwaiter.get())['GetResult']();
            taskAwaiter.set(new ($T01())());
            taskAwaiter.set($S00().Call($T03().prototype, "GetAwaiter", null, $T04()['LoadJavaScriptFile']("ms-appx:///TGChart.ChartControl/plotly.min.js")));
            if (!(taskAwaiter.get())['get_IsCompleted']()) {
              this.$l$g1__state = 1;
              this.$l$gu__$awaiter1 = taskAwaiter.get();
              (this.$l$gt__builder)['AwaitUnsafeOnCompleted$b2']($T01(), $thisType)(/* ref */ taskAwaiter, new JSIL.BoxedVariable(this));
              return;
            }

            $label0 = 2 /* goto IL_10D */ ;
            continue $labelgroup0;
          case 2: /* IL_10D */ 
            (taskAwaiter.get())['GetResult']();
            taskAwaiter.set(new ($T01())());
            $T02().JSLibraryWasLoaded = true;
            break $labelgroup0;

        }
      }
    } catch ($exception) {
      this.$l$g1__state = -2;
      (this.$l$gt__builder)['SetException']($exception);
      return;
    }
    this.$l$g1__state = -2;
    (this.$l$gt__builder)['SetResult']();
  };

  function $lInitialize$gd__0_SetStateMachine (param0) {
    (this.$l$gt__builder)['SetStateMachine'](param0);
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.ValueType"), 
      Name: "CSHTML5.Extensions.Plotly.ChartControl+<Initialize>d__0", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Void, 
      $lInitialize$gd__0_MoveNext
    )
      .Overrides($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.IAsyncStateMachine"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "SetStateMachine", 
      JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.IAsyncStateMachine")), 
      $lInitialize$gd__0_SetStateMachine
    )
      .Overrides($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.IAsyncStateMachine"), "SetStateMachine")
      .Attribute($asm_mscorlib.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $['Field']({Static:false, Public:true }, "$l$g1__state", $.Int32); 
    $['Field']({Static:false, Public:true }, "$l$gt__builder", $asm_mscorlib.TypeRef("System.Runtime.CompilerServices.AsyncTaskMethodBuilder")); 
    $['Field']({Static:false, Public:false}, "$l$gu__$awaiter1", $asm_mscorlib.TypeRef("System.Runtime.CompilerServices.TaskAwaiter`1", [$.Object])); 
    $['Field']({Static:false, Public:false}, "$l$gt__stack", $.Object); 
    $.ImplementInterfaces(
      /* 0 */ $asm_mscorlib.TypeRef("System.Runtime.CompilerServices.IAsyncStateMachine")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class CSHTML5.Extensions.Plotly.Data */ 

(function Data$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_mscorlib.System.Collections.Generic.List$b1.Of($asm_TGChart.CSHTML5.Extensions.Plotly.Trace))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_mscorlib.System.Object)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm_TGChart.CSHTML5.Extensions.Plotly.Trace)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Trace")]), null))) ();
  };

  function Data__ctor () {
    this.Data$Traces$value = $S00().Construct();
  };

  function Data_get_Traces () {
    return this.Data$Traces$value;
  };

  function Data_set_Traces (value) {
    this.Data$Traces$value = value;
  };

  function Data_ToJavaScriptObject () {
    var $temp00;
    var obj = ([]);

    for (var a$0 = this.Data$Traces$value._items, i$0 = 0, l$0 = (this.Data$Traces$value._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      var obj2 = current['ToJavaScriptObject']();
      obj.push(obj2);
    }
    return obj;
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Object"), 
      Name: "CSHTML5.Extensions.Plotly.Data", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Data__ctor
    );

    $.Method({Static:false, Public:true }, "get_Traces", 
      JSIL.MethodSignature.Return($asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Trace")])), 
      Data_get_Traces
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Traces", 
      JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Trace")])), 
      Data_set_Traces
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "ToJavaScriptObject", 
      JSIL.MethodSignature.Return($.Object), 
      Data_ToJavaScriptObject
    );

    $['Field']({Static:false, Public:false}, "Data$Traces$value", $asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Trace")]))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "Traces", $asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Trace")]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class CSHTML5.Extensions.Plotly.Domain */ 

(function Domain$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_mscorlib.System.Collections.Generic.List$b1.Of($asm_mscorlib.System.Double))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_mscorlib.System.Object)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm_mscorlib.System.Double)) ();
  };

  function Domain__ctor () {
  };

  function Domain_get_X () {
    return this.Domain$X$value;
  };

  function Domain_get_Y () {
    return this.Domain$Y$value;
  };

  function Domain_set_X (value) {
    this.Domain$X$value = value;
  };

  function Domain_set_Y (value) {
    this.Domain$Y$value = value;
  };

  function Domain_ToJavaScriptObject () {
    var $temp00, $temp01;
    var obj = ([]);
    if (this.Domain$X$value !== null) {
      var obj2 = ([]);

      for (var a$0 = this.Domain$X$value._items, i$0 = 0, l$0 = (this.Domain$X$value._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var num = a$0[i$0];
        obj2.push(num);;
      }
      obj['x'] = obj2;;
    }
    if (this.Domain$Y$value !== null) {
      var obj3 = ([]);

      for (var a$1 = this.Domain$Y$value._items, i$1 = 0, l$1 = (this.Domain$Y$value._size | 0); i$1 < l$1; ($temp01 = i$1, 
          i$1 = ((i$1 + 1) | 0), 
          $temp01)) {
        num = a$1[i$1];
        obj3.push(num);;
      }
      obj['y'] = obj3;;
    }
    return obj;
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Object"), 
      Name: "CSHTML5.Extensions.Plotly.Domain", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Domain__ctor
    );

    $.Method({Static:false, Public:true }, "get_X", 
      JSIL.MethodSignature.Return($asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.Double])), 
      Domain_get_X
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Y", 
      JSIL.MethodSignature.Return($asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.Double])), 
      Domain_get_Y
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_X", 
      JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.Double])), 
      Domain_set_X
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Y", 
      JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.Double])), 
      Domain_set_Y
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "ToJavaScriptObject", 
      JSIL.MethodSignature.Return($.Object), 
      Domain_ToJavaScriptObject
    );

    $['Field']({Static:false, Public:false}, "Domain$X$value", $asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.Double]))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Domain$Y$value", $asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.Double]))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "X", $asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.Double]));

    $.Property({Static:false, Public:true }, "Y", $asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.Double]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class CSHTML5.Extensions.Plotly.Font */ 

(function Font$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_mscorlib.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_mscorlib.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm_mscorlib.System.Object)) ();
  };

  function Font__ctor () {
    this.Font$Size$value = 14;
  };

  function Font_get_Color () {
    return this.Font$Color$value;
  };

  function Font_get_Family () {
    return this.Font$Family$value;
  };

  function Font_get_Size () {
    return this.Font$Size$value;
  };

  function Font_set_Color (value) {
    this.Font$Color$value = value;
  };

  function Font_set_Family (value) {
    this.Font$Family$value = value;
  };

  function Font_set_Size (value) {
    this.Font$Size$value = (value | 0);
  };

  function Font_ToJavaScriptObject () {
    var obj = ([]);
    if (!$T00()['IsNullOrEmpty'](this.Font$Family$value)) {
      obj['family'] = this.Font$Family$value;;
    }
    obj['size'] = this.Font$Size$value;;
    if (!$T00()['IsNullOrEmpty'](this.Font$Color$value)) {
      obj['color'] = this.Font$Color$value;;
    }
    return obj;
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Object"), 
      Name: "CSHTML5.Extensions.Plotly.Font", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Font__ctor
    );

    $.Method({Static:false, Public:true }, "get_Color", 
      JSIL.MethodSignature.Return($.String), 
      Font_get_Color
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Family", 
      JSIL.MethodSignature.Return($.String), 
      Font_get_Family
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Size", 
      JSIL.MethodSignature.Return($.Int32), 
      Font_get_Size
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Color", 
      JSIL.MethodSignature.Action($.String), 
      Font_set_Color
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Family", 
      JSIL.MethodSignature.Action($.String), 
      Font_set_Family
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Size", 
      JSIL.MethodSignature.Action($.Int32), 
      Font_set_Size
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "ToJavaScriptObject", 
      JSIL.MethodSignature.Return($.Object), 
      Font_ToJavaScriptObject
    );

    $['Field']({Static:false, Public:false}, "Font$Family$value", $.String)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Font$Size$value", $.Int32)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Font$Color$value", $.String)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "Family", $.String);

    $.Property({Static:false, Public:true }, "Size", $.Int32);

    $.Property({Static:false, Public:true }, "Color", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class CSHTML5.Extensions.Plotly.Layout */ 

(function Layout$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_TGChart.CSHTML5.Extensions.Plotly.BarMode)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_mscorlib.System.Collections.Generic.List$b1.Of($asm_TGChart.CSHTML5.Extensions.Plotly.Annotation))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm_mscorlib.System.Double)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm_TGChart.CSHTML5.Extensions.Plotly.Font)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm_mscorlib.System.Int32)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm_TGChart.CSHTML5.Extensions.Plotly.Legend)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm_mscorlib.System.String)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm_mscorlib.System.Boolean)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm_TGChart.CSHTML5.Extensions.Plotly.Axis)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm_mscorlib.System.Object)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm_TGChart.CSHTML5.Extensions.Plotly.Annotation)) ();
  };

  function Layout__ctor () {
    this.Layout$BarMode$value = $T00().Group;
    this.Layout$ShowLegend$value = true;
    this.Layout$BarGap$value = 0;
    this.Layout$Width$value = 600;
    this.Layout$Height$value = 600;
  };

  function Layout_get_Annotations () {
    return this.Layout$Annotations$value;
  };

  function Layout_get_BarGap () {
    return this.Layout$BarGap$value;
  };

  function Layout_get_BarGroupGap () {
    return this.Layout$BarGroupGap$value;
  };

  function Layout_get_BarMode () {
    return this.Layout$BarMode$value;
  };

  function Layout_get_Font () {
    return this.Layout$Font$value;
  };

  function Layout_get_Height () {
    return this.Layout$Height$value;
  };

  function Layout_get_Legend () {
    return this.Layout$Legend$value;
  };

  function Layout_get_PaperBgColor () {
    return this.Layout$PaperBgColor$value;
  };

  function Layout_get_PlotBgColor () {
    return this.Layout$PlotBgColor$value;
  };

  function Layout_get_ShowLegend () {
    return this.Layout$ShowLegend$value;
  };

  function Layout_get_Title () {
    return this.Layout$Title$value;
  };

  function Layout_get_Width () {
    return this.Layout$Width$value;
  };

  function Layout_get_Xaxis () {
    return this.Layout$Xaxis$value;
  };

  function Layout_get_Yaxis () {
    return this.Layout$Yaxis$value;
  };

  function Layout_set_Annotations (value) {
    this.Layout$Annotations$value = value;
  };

  function Layout_set_BarGap (value) {
    this.Layout$BarGap$value = +value;
  };

  function Layout_set_BarGroupGap (value) {
    this.Layout$BarGroupGap$value = +value;
  };

  function Layout_set_BarMode (value) {
    this.Layout$BarMode$value = value;
  };

  function Layout_set_Font (value) {
    this.Layout$Font$value = value;
  };

  function Layout_set_Height (value) {
    this.Layout$Height$value = (value | 0);
  };

  function Layout_set_Legend (value) {
    this.Layout$Legend$value = value;
  };

  function Layout_set_PaperBgColor (value) {
    this.Layout$PaperBgColor$value = value;
  };

  function Layout_set_PlotBgColor (value) {
    this.Layout$PlotBgColor$value = value;
  };

  function Layout_set_ShowLegend (value) {
    this.Layout$ShowLegend$value = value;
  };

  function Layout_set_Title (value) {
    this.Layout$Title$value = value;
  };

  function Layout_set_Width (value) {
    this.Layout$Width$value = (value | 0);
  };

  function Layout_set_Xaxis (value) {
    this.Layout$Xaxis$value = value;
  };

  function Layout_set_Yaxis (value) {
    this.Layout$Yaxis$value = value;
  };

  function Layout_ToJavaScriptObject () {
    var $temp00;
    var obj = (new Object());
    
                    obj['barmode'] = (this.Layout$BarMode$value)['toString']().toLowerCase();
                    ;
    if (!$T06()['IsNullOrEmpty'](this.Layout$Title$value)) {
      obj['title'] = this.Layout$Title$value;;
    }
    if (this.Layout$Xaxis$value !== null) {
      obj['xaxis'] = (this.Layout$Xaxis$value)['ToJavascriptObject']();;
    }
    if (this.Layout$Yaxis$value !== null) {
      obj['yaxis'] = (this.Layout$Yaxis$value)['ToJavascriptObject']();;
    }
    if (this.Layout$Annotations$value !== null) {
      obj['annotations'] = [];;

      for (var a$0 = this.Layout$Annotations$value._items, i$0 = 0, l$0 = (this.Layout$Annotations$value._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        obj['annotations'].push(current['ToJavaScriptObject']());;
      }
    }
    if (this.Layout$Font$value !== null) {
      obj['font'] = (this.Layout$Font$value)['ToJavaScriptObject']();;
    }
    obj['showlegend'] = this.Layout$ShowLegend$value;;
    if (this.Layout$Legend$value !== null) {
      obj['legend'] = (this.Layout$Legend$value)['ToJavaScriptObject']();;
    }
    obj['bargroupgap'] = this.Layout$BarGroupGap$value;;
    if (!$T06()['IsNullOrEmpty'](this.Layout$PaperBgColor$value)) {
      obj['paper_bgcolor'] = this.Layout$PaperBgColor$value;;
    }
    if (!$T06()['IsNullOrEmpty'](this.Layout$PlotBgColor$value)) {
      obj['plot_bgcolor'] = this.Layout$PlotBgColor$value;;
    }
    obj['width'] = this.Layout$Width$value;
    obj['height'] = this.Layout$Height$value;
    return obj;
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Object"), 
      Name: "CSHTML5.Extensions.Plotly.Layout", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Layout__ctor
    );

    $.Method({Static:false, Public:true }, "get_Annotations", 
      JSIL.MethodSignature.Return($asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Annotation")])), 
      Layout_get_Annotations
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_BarGap", 
      JSIL.MethodSignature.Return($.Double), 
      Layout_get_BarGap
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_BarGroupGap", 
      JSIL.MethodSignature.Return($.Double), 
      Layout_get_BarGroupGap
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_BarMode", 
      JSIL.MethodSignature.Return($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.BarMode")), 
      Layout_get_BarMode
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Font", 
      JSIL.MethodSignature.Return($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Font")), 
      Layout_get_Font
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Height", 
      JSIL.MethodSignature.Return($.Int32), 
      Layout_get_Height
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Legend", 
      JSIL.MethodSignature.Return($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Legend")), 
      Layout_get_Legend
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_PaperBgColor", 
      JSIL.MethodSignature.Return($.String), 
      Layout_get_PaperBgColor
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_PlotBgColor", 
      JSIL.MethodSignature.Return($.String), 
      Layout_get_PlotBgColor
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ShowLegend", 
      JSIL.MethodSignature.Return($.Boolean), 
      Layout_get_ShowLegend
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Title", 
      JSIL.MethodSignature.Return($.String), 
      Layout_get_Title
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Width", 
      JSIL.MethodSignature.Return($.Int32), 
      Layout_get_Width
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Xaxis", 
      JSIL.MethodSignature.Return($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Axis")), 
      Layout_get_Xaxis
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Yaxis", 
      JSIL.MethodSignature.Return($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Axis")), 
      Layout_get_Yaxis
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Annotations", 
      JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Annotation")])), 
      Layout_set_Annotations
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_BarGap", 
      JSIL.MethodSignature.Action($.Double), 
      Layout_set_BarGap
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_BarGroupGap", 
      JSIL.MethodSignature.Action($.Double), 
      Layout_set_BarGroupGap
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_BarMode", 
      JSIL.MethodSignature.Action($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.BarMode")), 
      Layout_set_BarMode
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Font", 
      JSIL.MethodSignature.Action($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Font")), 
      Layout_set_Font
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Height", 
      JSIL.MethodSignature.Action($.Int32), 
      Layout_set_Height
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Legend", 
      JSIL.MethodSignature.Action($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Legend")), 
      Layout_set_Legend
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_PaperBgColor", 
      JSIL.MethodSignature.Action($.String), 
      Layout_set_PaperBgColor
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_PlotBgColor", 
      JSIL.MethodSignature.Action($.String), 
      Layout_set_PlotBgColor
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ShowLegend", 
      JSIL.MethodSignature.Action($.Boolean), 
      Layout_set_ShowLegend
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Title", 
      JSIL.MethodSignature.Action($.String), 
      Layout_set_Title
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Width", 
      JSIL.MethodSignature.Action($.Int32), 
      Layout_set_Width
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Xaxis", 
      JSIL.MethodSignature.Action($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Axis")), 
      Layout_set_Xaxis
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Yaxis", 
      JSIL.MethodSignature.Action($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Axis")), 
      Layout_set_Yaxis
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "ToJavaScriptObject", 
      JSIL.MethodSignature.Return($.Object), 
      Layout_ToJavaScriptObject
    );

    $['Field']({Static:false, Public:false}, "Layout$Title$value", $.String)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Layout$BarMode$value", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.BarMode"))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Layout$Xaxis$value", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Axis"))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Layout$Yaxis$value", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Axis"))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Layout$Annotations$value", $asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Annotation")]))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Layout$ShowLegend$value", $.Boolean)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Layout$Font$value", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Font"))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Layout$BarGap$value", $.Double)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Layout$Legend$value", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Legend"))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Layout$BarGroupGap$value", $.Double)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Layout$PaperBgColor$value", $.String)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Layout$PlotBgColor$value", $.String)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Layout$Width$value", $.Int32)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Layout$Height$value", $.Int32)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "Title", $.String);

    $.Property({Static:false, Public:true }, "BarMode", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.BarMode"));

    $.Property({Static:false, Public:true }, "Xaxis", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Axis"));

    $.Property({Static:false, Public:true }, "Yaxis", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Axis"));

    $.Property({Static:false, Public:true }, "Annotations", $asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Annotation")]));

    $.Property({Static:false, Public:true }, "ShowLegend", $.Boolean);

    $.Property({Static:false, Public:true }, "Font", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Font"));

    $.Property({Static:false, Public:true }, "BarGap", $.Double);

    $.Property({Static:false, Public:true }, "Legend", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Legend"));

    $.Property({Static:false, Public:true }, "BarGroupGap", $.Double);

    $.Property({Static:false, Public:true }, "PaperBgColor", $.String);

    $.Property({Static:false, Public:true }, "PlotBgColor", $.String);

    $.Property({Static:false, Public:true }, "Width", $.Int32);

    $.Property({Static:false, Public:true }, "Height", $.Int32);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class CSHTML5.Extensions.Plotly.Legend */ 

(function Legend$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_mscorlib.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_mscorlib.System.Double)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm_mscorlib.System.Object)) ();
  };

  function Legend__ctor () {
    this.Legend$X$value = 0;
    this.Legend$Y$value = 0;
  };

  function Legend_get_BgColor () {
    return this.Legend$BgColor$value;
  };

  function Legend_get_BorderColor () {
    return this.Legend$BorderColor$value;
  };

  function Legend_get_X () {
    return this.Legend$X$value;
  };

  function Legend_get_Y () {
    return this.Legend$Y$value;
  };

  function Legend_set_BgColor (value) {
    this.Legend$BgColor$value = value;
  };

  function Legend_set_BorderColor (value) {
    this.Legend$BorderColor$value = value;
  };

  function Legend_set_X (value) {
    this.Legend$X$value = +value;
  };

  function Legend_set_Y (value) {
    this.Legend$Y$value = +value;
  };

  function Legend_ToJavaScriptObject () {
    var obj = ([]);
    obj['x'] = this.Legend$X$value;;
    obj['y'] = this.Legend$Y$value;;
    if (!$T00()['IsNullOrEmpty'](this.Legend$BgColor$value)) {
      obj['bgcolor'] = this.Legend$BgColor$value;;
    }
    if (!$T00()['IsNullOrEmpty'](this.Legend$BorderColor$value)) {
      obj['bordercolor'] = this.Legend$BorderColor$value;;
    }
    return obj;
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Object"), 
      Name: "CSHTML5.Extensions.Plotly.Legend", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Legend__ctor
    );

    $.Method({Static:false, Public:true }, "get_BgColor", 
      JSIL.MethodSignature.Return($.String), 
      Legend_get_BgColor
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_BorderColor", 
      JSIL.MethodSignature.Return($.String), 
      Legend_get_BorderColor
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_X", 
      JSIL.MethodSignature.Return($.Double), 
      Legend_get_X
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Y", 
      JSIL.MethodSignature.Return($.Double), 
      Legend_get_Y
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_BgColor", 
      JSIL.MethodSignature.Action($.String), 
      Legend_set_BgColor
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_BorderColor", 
      JSIL.MethodSignature.Action($.String), 
      Legend_set_BorderColor
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_X", 
      JSIL.MethodSignature.Action($.Double), 
      Legend_set_X
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Y", 
      JSIL.MethodSignature.Action($.Double), 
      Legend_set_Y
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "ToJavaScriptObject", 
      JSIL.MethodSignature.Return($.Object), 
      Legend_ToJavaScriptObject
    );

    $['Field']({Static:false, Public:false}, "Legend$X$value", $.Double)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Legend$Y$value", $.Double)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Legend$BgColor$value", $.String)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Legend$BorderColor$value", $.String)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "X", $.Double);

    $.Property({Static:false, Public:true }, "Y", $.Double);

    $.Property({Static:false, Public:true }, "BgColor", $.String);

    $.Property({Static:false, Public:true }, "BorderColor", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class CSHTML5.Extensions.Plotly.Line */ 

(function Line$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_mscorlib.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_mscorlib.System.Double)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm_mscorlib.System.Object)) ();
  };

  function Line__ctor () {
    this.Line$Width$value = 0;
  };

  function Line_get_Color () {
    return this.Line$Color$value;
  };

  function Line_get_Width () {
    return this.Line$Width$value;
  };

  function Line_set_Color (value) {
    this.Line$Color$value = value;
  };

  function Line_set_Width (value) {
    this.Line$Width$value = +value;
  };

  function Line_ToJavaScriptObject () {
    var obj = ([]);
    if (!$T00()['IsNullOrEmpty'](this.Line$Color$value)) {
      obj['color'] = this.Line$Color$value;;
    }
    obj['width'] = this.Line$Width$value;;
    return obj;
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Object"), 
      Name: "CSHTML5.Extensions.Plotly.Line", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Line__ctor
    );

    $.Method({Static:false, Public:true }, "get_Color", 
      JSIL.MethodSignature.Return($.String), 
      Line_get_Color
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Width", 
      JSIL.MethodSignature.Return($.Double), 
      Line_get_Width
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Color", 
      JSIL.MethodSignature.Action($.String), 
      Line_set_Color
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Width", 
      JSIL.MethodSignature.Action($.Double), 
      Line_set_Width
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "ToJavaScriptObject", 
      JSIL.MethodSignature.Return($.Object), 
      Line_ToJavaScriptObject
    );

    $['Field']({Static:false, Public:false}, "Line$Color$value", $.String)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Line$Width$value", $.Double)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "Color", $.String);

    $.Property({Static:false, Public:true }, "Width", $.Double);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class CSHTML5.Extensions.Plotly.Marker */ 

(function Marker$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_mscorlib.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_mscorlib.System.Collections.Generic.List$b1.Of($asm_mscorlib.System.String))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm_TGChart.CSHTML5.Extensions.Plotly.Line)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm_mscorlib.System.Double)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm_mscorlib.System.Int32)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm_mscorlib.System.String)) ();
  };

  function Marker__ctor () {
    this.Marker$Size$value = 6;
    this.Marker$Opacity$value = 1;
  };

  function Marker_get_Color () {
    return this.Marker$Color$value;
  };

  function Marker_get_Colors () {
    return this.Marker$Colors$value;
  };

  function Marker_get_Line () {
    return this.Marker$Line$value;
  };

  function Marker_get_Opacity () {
    return this.Marker$Opacity$value;
  };

  function Marker_get_Size () {
    return this.Marker$Size$value;
  };

  function Marker_set_Color (value) {
    this.Marker$Color$value = value;
  };

  function Marker_set_Colors (value) {
    this.Marker$Colors$value = value;
  };

  function Marker_set_Line (value) {
    this.Marker$Line$value = value;
  };

  function Marker_set_Opacity (value) {
    this.Marker$Opacity$value = +value;
  };

  function Marker_set_Size (value) {
    this.Marker$Size$value = (value | 0);
  };

  function Marker_ToJavaScriptObject () {
    var $temp00, $temp01;
    var obj = (new Object());
    
                      obj['size'] = this.Marker$Size$value;
                ;
    if (!(($T05().$As(this.Marker$Color$value) === null) || $T05()['IsNullOrEmpty']($T05().$Cast(this.Marker$Color$value)))) {
      obj['color'] = this.Marker$Color$value;;
    } else if (!(($T01().$As(this.Marker$Color$value) === null) || (this.Marker$Color$value === null))) {
      obj['color'] = [];;

      for (var a$0 = $T01().$Cast(this.Marker$Color$value)._items, i$0 = 0, l$0 = ($T01().$Cast(this.Marker$Color$value)._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        obj['color'].push(current);;
      }
    }
    obj['opacity'] = this.Marker$Opacity$value;;
    if (this.Marker$Line$value !== null) {
      obj['line'] = (this.Marker$Line$value)['ToJavaScriptObject']();;
    }
    if (this.Marker$Colors$value !== null) {
      obj['colors'] = [];;

      for (var a$1 = this.Marker$Colors$value._items, i$1 = 0, l$1 = (this.Marker$Colors$value._size | 0); i$1 < l$1; ($temp01 = i$1, 
          i$1 = ((i$1 + 1) | 0), 
          $temp01)) {
        current = a$1[i$1];
        obj['colors'].push(current);;
      }
    }
    return obj;
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Object"), 
      Name: "CSHTML5.Extensions.Plotly.Marker", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Marker__ctor
    );

    $.Method({Static:false, Public:true }, "get_Color", 
      JSIL.MethodSignature.Return($.Object), 
      Marker_get_Color
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Colors", 
      JSIL.MethodSignature.Return($asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.String])), 
      Marker_get_Colors
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Line", 
      JSIL.MethodSignature.Return($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Line")), 
      Marker_get_Line
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Opacity", 
      JSIL.MethodSignature.Return($.Double), 
      Marker_get_Opacity
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Size", 
      JSIL.MethodSignature.Return($.Int32), 
      Marker_get_Size
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Color", 
      JSIL.MethodSignature.Action($.Object), 
      Marker_set_Color
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Colors", 
      JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.String])), 
      Marker_set_Colors
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Line", 
      JSIL.MethodSignature.Action($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Line")), 
      Marker_set_Line
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Opacity", 
      JSIL.MethodSignature.Action($.Double), 
      Marker_set_Opacity
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Size", 
      JSIL.MethodSignature.Action($.Int32), 
      Marker_set_Size
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "ToJavaScriptObject", 
      JSIL.MethodSignature.Return($.Object), 
      Marker_ToJavaScriptObject
    );

    $['Field']({Static:false, Public:false}, "Marker$Size$value", $.Int32)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Marker$Color$value", $.Object)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Marker$Colors$value", $asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.String]))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Marker$Opacity$value", $.Double)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Marker$Line$value", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Line"))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "Size", $.Int32);

    $.Property({Static:false, Public:true }, "Color", $.Object);

    $.Property({Static:false, Public:true }, "Colors", $asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.String]));

    $.Property({Static:false, Public:true }, "Opacity", $.Double);

    $.Property({Static:false, Public:true }, "Line", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Line"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class CSHTML5.Extensions.Plotly.Trace */ 

(function Trace$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_mscorlib.System.Collections.Generic.List$b1.Of($asm_mscorlib.System.Object))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_mscorlib.System.Collections.Generic.List$b1.Of($asm_mscorlib.System.String))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm_TGChart.CSHTML5.Extensions.Plotly.TraceMode)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm_TGChart.CSHTML5.Extensions.Plotly.Domain)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm_mscorlib.System.Double)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm_mscorlib.System.String)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm_TGChart.CSHTML5.Extensions.Plotly.Marker)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm_mscorlib.System.Object)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm_TGChart.CSHTML5.Extensions.Plotly.TraceType)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm_TGChart.CSHTML5.Extensions.Plotly.TraceModeExtensionMethods)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$asm_mscorlib.TypeRef("System.Object")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$asm_mscorlib.TypeRef("System.String")]), null))) ();
  };

  function Trace__ctor () {
    this.Trace$X$value = $S00().Construct();
    this.Trace$Y$value = $S00().Construct();
    this.Trace$Text$value = $S01().Construct();
    this.Trace$Mode$value = $T02().Lines;
    this.Trace$Hole$value = 0;
  };

  function Trace_get_Domain () {
    return this.Trace$Domain$value;
  };

  function Trace_get_Hole () {
    return this.Trace$Hole$value;
  };

  function Trace_get_HoverInfo () {
    return this.Trace$HoverInfo$value;
  };

  function Trace_get_Labels () {
    return this.Trace$Labels$value;
  };

  function Trace_get_Marker () {
    return this.Trace$Marker$value;
  };

  function Trace_get_Mode () {
    return this.Trace$Mode$value;
  };

  function Trace_get_Name () {
    return this.Trace$Name$value;
  };

  function Trace_get_Text () {
    return this.Trace$Text$value;
  };

  function Trace_get_TextInfo () {
    return this.Trace$TextInfo$value;
  };

  function Trace_get_TextPosition () {
    return this.Trace$TextPosition$value;
  };

  function Trace_get_Type () {
    return this.Trace$Type$value;
  };

  function Trace_get_Values () {
    return this.Trace$Values$value;
  };

  function Trace_get_X () {
    return this.Trace$X$value;
  };

  function Trace_get_Y () {
    return this.Trace$Y$value;
  };

  function Trace_set_Domain (value) {
    this.Trace$Domain$value = value;
  };

  function Trace_set_Hole (value) {
    this.Trace$Hole$value = +value;
  };

  function Trace_set_HoverInfo (value) {
    this.Trace$HoverInfo$value = value;
  };

  function Trace_set_Labels (value) {
    this.Trace$Labels$value = value;
  };

  function Trace_set_Marker (value) {
    this.Trace$Marker$value = value;
  };

  function Trace_set_Mode (value) {
    this.Trace$Mode$value = value;
  };

  function Trace_set_Name (value) {
    this.Trace$Name$value = value;
  };

  function Trace_set_Text (value) {
    this.Trace$Text$value = value;
  };

  function Trace_set_TextInfo (value) {
    this.Trace$TextInfo$value = value;
  };

  function Trace_set_TextPosition (value) {
    this.Trace$TextPosition$value = value;
  };

  function Trace_set_Type (value) {
    this.Trace$Type$value = value;
  };

  function Trace_set_Values (value) {
    this.Trace$Values$value = value;
  };

  function Trace_set_X (value) {
    this.Trace$X$value = value;
  };

  function Trace_set_Y (value) {
    this.Trace$Y$value = value;
  };

  function Trace_ToJavaScriptObject () {
    var $temp00, $temp01, $temp02, $temp03, $temp04;
    var obj = ([]);

    for (var a$0 = this.Trace$X$value._items, i$0 = 0, l$0 = (this.Trace$X$value._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      obj.push(current);
    }
    var obj2 = ([]);

    for (var a$1 = this.Trace$Y$value._items, i$1 = 0, l$1 = (this.Trace$Y$value._size | 0); i$1 < l$1; ($temp01 = i$1, 
        i$1 = ((i$1 + 1) | 0), 
        $temp01)) {
      var current2 = a$1[i$1];
      obj2.push(current2);
    }
    var obj3 = ([]);
    if ($T01().$Is(this.Trace$Text$value)) {

      for (var a$2 = $T01().$Cast(this.Trace$Text$value)._items, i$2 = 0, l$2 = ($T01().$Cast(this.Trace$Text$value)._size | 0); i$2 < l$2; ($temp02 = i$2, 
          i$2 = ((i$2 + 1) | 0), 
          $temp02)) {
        var current3 = a$2[i$2];
        obj3.push(current3);
      }
    } else if (!(($T05().$As(this.Trace$Text$value) === null) || $T05()['IsNullOrEmpty']($T05().$Cast(this.Trace$Text$value)))) {
      obj3 = $T05().$Cast(this.Trace$Text$value);;
    }
    var obj4 = (new Object());
    
                      obj4['x'] = obj;
                      obj4['y'] = obj2;
                      obj4['type'] = (this.Trace$Type$value)['toString']().toLowerCase();
                      obj4['mode'] = $T09()['ToJavaScriptString'](this.Trace$Mode$value);
                      if (JSIL.Coalesce(this.Trace$Name$value, "") != '') {
                        obj4['name'] = JSIL.Coalesce(this.Trace$Name$value, "");
                      }
                      if (obj3.length == 1) {
                        obj4['text'] = obj3[0];
                      } else if (obj3.length > 1) {
                        obj4['text'] = obj3;
                      }
                ;
    if (this.Trace$Marker$value !== null) {
      obj4['marker'] = (this.Trace$Marker$value)['ToJavaScriptObject']();;
    }
    if (this.Trace$Values$value !== null) {
      var obj5 = ([]);

      for (var a$3 = this.Trace$Values$value._items, i$3 = 0, l$3 = (this.Trace$Values$value._size | 0); i$3 < l$3; ($temp03 = i$3, 
          i$3 = ((i$3 + 1) | 0), 
          $temp03)) {
        var current4 = a$3[i$3];
        obj5.push(current4);;
      }
      obj4['values'] = obj5;;
    }
    if (this.Trace$Labels$value !== null) {
      var obj6 = ([]);

      for (var a$4 = this.Trace$Labels$value._items, i$4 = 0, l$4 = (this.Trace$Labels$value._size | 0); i$4 < l$4; ($temp04 = i$4, 
          i$4 = ((i$4 + 1) | 0), 
          $temp04)) {
        var current5 = a$4[i$4];
        obj6.push(current5);;
      }
      obj4['labels'] = obj6;;
    }
    if (this.Trace$Domain$value !== null) {
      obj4['domain'] = (this.Trace$Domain$value)['ToJavaScriptObject']();;
    }
    if (!$T05()['IsNullOrEmpty'](this.Trace$HoverInfo$value)) {
      obj4['hoverinfo'] = this.Trace$HoverInfo$value;;
    }
    if (!$T05()['IsNullOrEmpty'](this.Trace$TextInfo$value)) {
      obj4['textinfo'] = this.Trace$TextInfo$value;;
    }
    obj4['hole'] = this.Trace$Hole$value;;
    if (!$T05()['IsNullOrEmpty'](this.Trace$TextPosition$value)) {
      obj4['textposition'] = this.Trace$TextPosition$value;;
    }
    return obj4;
  };

  JSIL.MakeType({
      BaseType: $asm_mscorlib.TypeRef("System.Object"), 
      Name: "CSHTML5.Extensions.Plotly.Trace", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Trace__ctor
    );

    $.Method({Static:false, Public:true }, "get_Domain", 
      JSIL.MethodSignature.Return($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Domain")), 
      Trace_get_Domain
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Hole", 
      JSIL.MethodSignature.Return($.Double), 
      Trace_get_Hole
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_HoverInfo", 
      JSIL.MethodSignature.Return($.String), 
      Trace_get_HoverInfo
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Labels", 
      JSIL.MethodSignature.Return($asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.String])), 
      Trace_get_Labels
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Marker", 
      JSIL.MethodSignature.Return($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Marker")), 
      Trace_get_Marker
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Mode", 
      JSIL.MethodSignature.Return($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.TraceMode")), 
      Trace_get_Mode
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      Trace_get_Name
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Text", 
      JSIL.MethodSignature.Return($.Object), 
      Trace_get_Text
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TextInfo", 
      JSIL.MethodSignature.Return($.String), 
      Trace_get_TextInfo
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_TextPosition", 
      JSIL.MethodSignature.Return($.String), 
      Trace_get_TextPosition
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Type", 
      JSIL.MethodSignature.Return($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.TraceType")), 
      Trace_get_Type
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Values", 
      JSIL.MethodSignature.Return($asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.Object])), 
      Trace_get_Values
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_X", 
      JSIL.MethodSignature.Return($asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.Object])), 
      Trace_get_X
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Y", 
      JSIL.MethodSignature.Return($asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.Object])), 
      Trace_get_Y
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Domain", 
      JSIL.MethodSignature.Action($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Domain")), 
      Trace_set_Domain
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Hole", 
      JSIL.MethodSignature.Action($.Double), 
      Trace_set_Hole
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_HoverInfo", 
      JSIL.MethodSignature.Action($.String), 
      Trace_set_HoverInfo
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Labels", 
      JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.String])), 
      Trace_set_Labels
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Marker", 
      JSIL.MethodSignature.Action($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Marker")), 
      Trace_set_Marker
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Mode", 
      JSIL.MethodSignature.Action($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.TraceMode")), 
      Trace_set_Mode
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      Trace_set_Name
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Text", 
      JSIL.MethodSignature.Action($.Object), 
      Trace_set_Text
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_TextInfo", 
      JSIL.MethodSignature.Action($.String), 
      Trace_set_TextInfo
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_TextPosition", 
      JSIL.MethodSignature.Action($.String), 
      Trace_set_TextPosition
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Type", 
      JSIL.MethodSignature.Action($asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.TraceType")), 
      Trace_set_Type
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Values", 
      JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.Object])), 
      Trace_set_Values
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_X", 
      JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.Object])), 
      Trace_set_X
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Y", 
      JSIL.MethodSignature.Action($asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.Object])), 
      Trace_set_Y
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "ToJavaScriptObject", 
      JSIL.MethodSignature.Return($.Object), 
      Trace_ToJavaScriptObject
    );

    $['Field']({Static:false, Public:false}, "Trace$Name$value", $.String)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Trace$X$value", $asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.Object]))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Trace$Y$value", $asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.Object]))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Trace$Text$value", $.Object)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Trace$Values$value", $asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.Object]))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Trace$Labels$value", $asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.String]))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Trace$Type$value", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.TraceType"))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Trace$Mode$value", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.TraceMode"))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Trace$Marker$value", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Marker"))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Trace$Domain$value", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Domain"))
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Trace$HoverInfo$value", $.String)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Trace$TextInfo$value", $.String)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Trace$Hole$value", $.Double)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Trace$TextPosition$value", $.String)
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "X", $asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.Object]));

    $.Property({Static:false, Public:true }, "Y", $asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.Object]));

    $.Property({Static:false, Public:true }, "Text", $.Object);

    $.Property({Static:false, Public:true }, "Values", $asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.Object]));

    $.Property({Static:false, Public:true }, "Labels", $asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$.String]));

    $.Property({Static:false, Public:true }, "Type", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.TraceType"));

    $.Property({Static:false, Public:true }, "Mode", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.TraceMode"));

    $.Property({Static:false, Public:true }, "Marker", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Marker"));

    $.Property({Static:false, Public:true }, "Domain", $asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.Domain"));

    $.Property({Static:false, Public:true }, "HoverInfo", $.String);

    $.Property({Static:false, Public:true }, "TextInfo", $.String);

    $.Property({Static:false, Public:true }, "Hole", $.Double);

    $.Property({Static:false, Public:true }, "TextPosition", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum CSHTML5.Extensions.Plotly.TraceMode */ 

JSIL.MakeEnum(
  {
    FullName: "CSHTML5.Extensions.Plotly.TraceMode", 
    BaseType: $asm_mscorlib.TypeRef("System.Int16"), 
    IsPublic: true, 
    IsFlags: true, 
  }, 
  {
    None: 0, 
    Lines: 1, 
    Markers: 2, 
    Text: 4, 
  }
);

/* class CSHTML5.Extensions.Plotly.TraceModeExtensionMethods */ 

(function TraceModeExtensionMethods$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm_TGChart.CSHTML5.Extensions.Plotly.TraceMode)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm_mscorlib.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm_mscorlib.System.Collections.Generic.List$b1.Of($asm_mscorlib.System.String))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm_mscorlib.System.Collections.IEnumerator)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm_mscorlib.System.Enum)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm_mscorlib.System.Array)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm_mscorlib.System.Object)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm_mscorlib.System.IDisposable)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm_mscorlib.System.Collections.Generic.List$b1)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm_mscorlib.TypeRef("System.Collections.Generic.List`1", [$asm_mscorlib.TypeRef("System.String")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm_mscorlib.TypeRef("System.String")]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm_mscorlib.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm_mscorlib.System.Collections.IEnumerator.get_Current)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm_mscorlib.System.IDisposable.Dispose)) ();
  };

  function TraceModeExtensionMethods_ToJavaScriptString (traceMode) {
    if (traceMode === $T00().None) {
      var result = "none";
    } else {
      var list = $S00().Construct();
      var enumerator = (JSIL.GetEnumerator($T04()['GetValues']($T00().__Type__)));
      try {

        while ($IM00().Call(enumerator, null)) {
          var traceMode2 = $T00().$Cast($IM01().Call(enumerator, null));
          if ((($T00().$Cast(traceMode & traceMode2))['valueOf']() | 0) !== 0) {
            $S01().CallVirtual("Add", null, list, (traceMode2)['toString']());
          }
        }
      } finally {
        var disposable = $T07().$As(enumerator);
        if (disposable !== null) {
          $IM02().Call(disposable, null);
        }
      }
      result = (JSIL.JoinEnumerable("+", list).toLowerCase());
    }
    return result;
  };

  JSIL.MakeStaticClass("CSHTML5.Extensions.Plotly.TraceModeExtensionMethods", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "ToJavaScriptString", 
      new JSIL.MethodSignature($.String, [$asm_TGChart.TypeRef("CSHTML5.Extensions.Plotly.TraceMode")]), 
      TraceModeExtensionMethods_ToJavaScriptString
    )
      .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm_mscorlib.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

})();

/* enum CSHTML5.Extensions.Plotly.TraceType */ 

JSIL.MakeEnum(
  {
    FullName: "CSHTML5.Extensions.Plotly.TraceType", 
    BaseType: $asm_mscorlib.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Bar: 0, 
    Scatter: 1, 
    Box: 2, 
    Heatmap: 3, 
    Histogram: 4, 
    Histogram2d: 5, 
    Area: 6, 
    Pie: 7, 
    Contour: 8, 
    Histogram2dContour: 9, 
    Scatter3d: 10, 
    Surface: 11, 
    Mesh3d: 12, 
  }
);

