<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CSharpXamlForHtml5</name>
    </assembly>
    <members>
        <member name="M:System.INTERNAL_WebRequestHelper_JSOnly.#ctor">
            <summary>
            Initializes a new instance of the INTERNAL_WebRequestHelper class.
            </summary>
        </member>
        <member name="M:System.INTERNAL_WebRequestHelper_JSOnly.MakeRequest(System.Uri,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Net.INTERNAL_WebRequestHelper_JSOnly_RequestCompletedEventHandler,System.Boolean)">
            <summary>
            Makes a synchronous or asynchronous request at the specified uri, using the specified method, with the specified headers and body, and calls the callbackMethod.
            </summary>
            <param name="address">the uri that identifies the Internet resource.</param>
            <param name="Method">The method to be called after making the request.</param>
            <param name="headers">
            A dictionary containing the headers to put in the method.
            The pairs key/values in the dictionary correspond to the pairs key/value in the headers.
            </param>
            <param name="body">The body of the request.</param>
            <param name="callbackMethod">The method to be called after the request has been made.</param>
            <param name="isAsync">A boolean that determines whether the request must be made synchronously or asynchronously.</param>
            <returns>The result of the request as a string.</returns>
        </member>
        <member name="E:System.INTERNAL_WebRequestHelper_JSOnly.DownloadStringCompleted">
            <summary>
            Occurs when the string download is completed.
            </summary>
        </member>
        <member name="T:System.Net.INTERNAL_WebRequestHelper_JSOnly_RequestCompletedEventArgs">
            <summary>
            Provides data for the System.Net.WebClient.DownloadStringCompleted event.
            </summary>
        </member>
        <member name="P:System.Net.INTERNAL_WebRequestHelper_JSOnly_RequestCompletedEventArgs.Result">
            <summary>
            Gets the data that is downloaded by a Overload:System.Net.WebClient.DownloadStringAsync
            method.
            </summary>
        </member>
        <member name="P:System.Net.INTERNAL_WebRequestHelper_JSOnly_RequestCompletedEventArgs.UserState">
            <summary>
            Gets the unique identifier for the asynchronous task.
            </summary>
        </member>
        <member name="P:System.Net.INTERNAL_WebRequestHelper_JSOnly_RequestCompletedEventArgs.Cancelled">
            <summary>
            Gets a value indicating whether an asynchronous operation has been canceled.
            </summary>
        </member>
        <member name="P:System.Net.INTERNAL_WebRequestHelper_JSOnly_RequestCompletedEventArgs.Error">
            <summary>
            Gets a value indicating which error occurred during an asynchronous operation.
            </summary>
        </member>
        <member name="T:System.Net.INTERNAL_WebRequestHelper_JSOnly_RequestCompletedEventHandler">
            <summary>
            Represents the method that will handle the System.Net.WebClient.DownloadStringCompleted
            event of a System.Net.WebClient.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A System.Net.DownloadStringCompletedEventArgs that contains event data.</param>
            <returns></returns>
        </member>
        <member name="M:DotNetForHtml5.Core.INTERNAL_SimulatorExecuteJavaScript.ExecuteJavaScriptSync(System.String,System.String,System.Boolean)">
            <summary>
            Executes JavaScript code immediately. This also forces all the pending async JS code to be executed (flush).
            </summary>
            <param name="javaScriptToExecute">The JS code to execute.</param>
            <param name="commentForDebugging">Some optional comments to write to the log of JS calls.</param>
            <returns></returns>
        </member>
        <member name="M:DotNetForHtml5.Core.INTERNAL_SimulatorExecuteJavaScript.ExecuteJavaScriptAsync(System.String,System.String)">
            <summary>
            Postpone the executes of the JavaScript code to until a JavaScript execution "with return value" is made, or when the process is idle. This enables to significantly improve performance in the Simulator.
            </summary>
            <param name="javaScriptToExecute">The JS code to execute.</param>
            <param name="commentForDebugging">Some optional comments to write to the log of JS calls.</param>
        </member>
        <member name="M:DotNetForHtml5.Core.INTERNAL_FontsHelper.LoadFont(System.String)">
            <summary>
            Creates a css style with @font-face for the given font, then returns the name to use as the font-family. This name is actually the relative path to the file containing the font.
            </summary>
            <param name="fontPath">The path to the font.</param>
            <returns>The name to use to set the font-family property, a.k.a: the relative path to the font.</returns>
        </member>
        <member name="T:System.Lazy2`1">
            <summary>
            Provides support for lazy initialization.
            </summary>
            <typeparam name="T">Specifies the type of object that is being lazily initialized.</typeparam>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.Lazy2`1.#ctor" -->
        <!-- Badly formed XML comment ignored for member "M:System.Lazy2`1.#ctor(System.Func{`0})" -->
        <!-- Badly formed XML comment ignored for member "M:System.Lazy2`1.ToString" -->
        <!-- Badly formed XML comment ignored for member "P:System.Lazy2`1.IsValueCreated" -->
        <!-- Badly formed XML comment ignored for member "P:System.Lazy2`1.Value" -->
        <member name="M:DotNetForHtml5.Core.INTERNAL_DispatcherHelpers.QueueAction(System.Action)">
            <summary>
            This will add the action to a list of actions to perform at once in a Dispatcher.Invoke call.
            This has better performance than calling Dispatcher.BeginInvoke directly.
            </summary>
            <param name="action">The action to queue.</param>
        </member>
        <member name="T:Windows.ApplicationModel.Activation.LaunchActivatedEventArgs">
            <summary>
            Provides event information when an app is launched
            </summary>
        </member>
        <member name="M:CSHTML5.Internal.TypeInstantiationHelper.Instantiate(System.Type)">
            <summary>
            Invokes the parameterless constructor of the specified type.
            </summary>
            <param name="type">The Type to instantiate.</param>
            <returns>A new instance of the Type, initialized through the parameterless constructor.</returns>
        </member>
        <member name="M:CSHTML5.Native.Html.UriHelper.ConvertToHtmlPath(System.String)">
            <summary>
            Converts a XAML-style URI (such as "ms-appx///") into a path that can be used in HTML.
            </summary>
            <param name="uri">A XAML-style URI such as ms-appx:///AssemblyName/Folder/Image.png or /AssemblyName;component/Folder/Image.png</param>
            <returns>A path that can be used in HTML</returns>
        </member>
        <member name="M:DotNetForHtml5.Core.INTERNAL_UriHelper.ConvertToHtml5Path(System.String,System.String)">
            <summary>
            Converts to an URI suitable to use in the HTML5 "src" property.
            </summary>
            <param name="uri">The URI with the C#/XAML syntax.</param>
            <param name="callerAssemblyName">The name of the assembly where the URI is defined, in order to transform relative URI to absolute URI.</param>
            <returns>The URI suitable to use in the HTML5 "src" property</returns>
        </member>
        <member name="T:System.ComponentModel.ClosingEventArgs">
            <summary>
            Provides data for the System.Windows.Window.Closing event.
            </summary>
        </member>
        <member name="T:System.ComponentModel.CancelEventArgs">
            <summary>
            Provides data for a cancelable event.
            </summary>
        </member>
        <member name="M:System.ComponentModel.CancelEventArgs.#ctor">
            <summary>
            Initializes a new instance of the System.ComponentModel.CancelEventArgs class
            with the System.ComponentModel.CancelEventArgs.Cancel property set to false.
            </summary>
        </member>
        <member name="M:System.ComponentModel.CancelEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the System.ComponentModel.CancelEventArgs class
            with the System.ComponentModel.CancelEventArgs.Cancel property set to the
            given value.
            </summary>
            <param name="cancel">true to cancel the event; otherwise, false.</param>
        </member>
        <member name="P:System.ComponentModel.CancelEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the event should be canceled.
            </summary>
        </member>
        <member name="M:System.ComponentModel.ClosingEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the System.ComponentModel.ClosingEventArgs
            class.
            </summary>
            <param name="isCancelable">Initializes the System.ComponentModel.ClosingEventArgs.IsCancelable property.</param>
        </member>
        <member name="P:System.ComponentModel.ClosingEventArgs.IsCancelable">
            <summary>
            Gets a value that indicates whether you can cancel the Window.Closing event.
            </summary>
        </member>
        <member name="T:System.ComponentModel.DesignerProperties">
            <summary>
            Provides attached properties that can be used to communicate with a designer.
            </summary>
        </member>
        <member name="M:System.ComponentModel.DesignerProperties.GetIsInDesignMode(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the value of the System.ComponentModel.DesignerProperties.IsInDesignMode
            attached property for the specified System.Windows.UIElement.
            </summary>
            <param name="element">The element from which the property value is read.</param>
            <returns>
            The System.ComponentModel.DesignerProperties.IsInDesignMode property value
            for the element.
            </returns>
        </member>
        <member name="M:System.ComponentModel.DesignerProperties.SetIsInDesignMode(Windows.UI.Xaml.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the System.ComponentModel.DesignerProperties.IsInDesignMode
            attached property to a specified element.
            </summary>
            <param name="element">The element to which the attached property is written.</param>
            <param name="value">The needed System.Boolean value.</param>
        </member>
        <member name="F:System.ComponentModel.DesignerProperties.IsInDesignModeProperty">
            <summary>
            Identifies the System.ComponentModel.DesignerProperties.IsInDesignMode attached
            property.
            </summary>
        </member>
        <member name="P:System.ComponentModel.DesignerProperties.IsInDesignTool">
            <summary>
            Gets a value that indicates whether the element is running in the context
            of a designer.
            </summary>
        </member>
        <member name="T:System.Runtime.Serialization.CollectionDataContract2Attribute">
            <summary>
            When applied to the member of a type, specifies that the member is part of
            a data contract and is serializable by the DataContractSerializer.
            </summary>
        </member>
        <member name="P:System.Runtime.Serialization.CollectionDataContract2Attribute.IsReference">
            <summary>
            Gets or sets a value that indicates whether to preserve object reference data.
            </summary>
        </member>
        <member name="P:System.Runtime.Serialization.CollectionDataContract2Attribute.ItemName">
            <summary>
            Gets or sets a custom name for a collection element.
            </summary>
        </member>
        <member name="P:System.Runtime.Serialization.CollectionDataContract2Attribute.KeyName">
            <summary>
            Gets or sets the custom name for a dictionary key name.
            </summary>
        </member>
        <member name="P:System.Runtime.Serialization.CollectionDataContract2Attribute.Name">
            <summary>
            Gets or sets the data contract name for the collection type.
            </summary>
        </member>
        <member name="P:System.Runtime.Serialization.CollectionDataContract2Attribute.Namespace">
            <summary>
            Gets or sets the namespace for the data contract.
            </summary>
        </member>
        <member name="P:System.Runtime.Serialization.CollectionDataContract2Attribute.ValueName">
            <summary>
            Gets or sets the custom name for a dictionary value name.
            </summary>
        </member>
        <member name="T:System.Runtime.Serialization.InvalidDataContractException">
            <summary>
            The exception that is thrown when the DataContractSerializer encounters an invalid data contract during serialization and deserialization.
            </summary>
        </member>
        <member name="M:System.Runtime.Serialization.InvalidDataContractException.#ctor">
            <summary>
            Initializes a new instance of the InvalidDataContractException class.
            </summary>
        </member>
        <member name="M:System.Runtime.Serialization.InvalidDataContractException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InvalidDataContractException class with the specified error message.
            </summary>
            <param name="message">A description of the error.</param>
        </member>
        <member name="M:System.Runtime.Serialization.InvalidDataContractException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the InvalidDataContractException
            </summary>
            <param name="message">A description of the error.</param>
            <param name="innerException">The original Exception.</param>
        </member>
        <member name="T:System.Runtime.Serialization.DataMember2Attribute">
            <summary>
            When applied to the member of a type, specifies that the member is part of
            a data contract and is serializable by the DataContractSerializer.
            </summary>
        </member>
        <member name="M:System.Runtime.Serialization.DataMember2Attribute.#ctor">
            <summary>
            Initializes a new instance of the DataMemberAttribute
            class.
            </summary>
        </member>
        <member name="P:System.Runtime.Serialization.DataMember2Attribute.EmitDefaultValue">
            <summary>
            Gets or sets a value that specifies whether to serialize the default value
            for a field or property being serialized.
            </summary>
        </member>
        <member name="P:System.Runtime.Serialization.DataMember2Attribute.IsRequired">
            <summary>
            Gets or sets a value that instructs the serialization engine that the member
            must be present when reading or deserializing.
            </summary>
        </member>
        <member name="P:System.Runtime.Serialization.DataMember2Attribute.Name">
            <summary>
            Gets or sets a data member name.
            </summary>
        </member>
        <member name="P:System.Runtime.Serialization.DataMember2Attribute.Order">
            <summary>
            Gets or sets the order of serialization and deserialization of a member.
            </summary>
        </member>
        <member name="T:System.Runtime.Serialization.DataContract2Attribute">
            <summary>
            Specifies that the type defines or implements a data contract and is serializable
            by a serializer, such as the DataContractSerializer.
            To make their type serializable, type authors must define a data contract
            for their type.
            </summary>
        </member>
        <member name="P:System.Runtime.Serialization.DataContract2Attribute.IsReference">
            <summary>
            Gets or sets a value that indicates whether to preserve object reference
            data.
            </summary>
        </member>
        <member name="P:System.Runtime.Serialization.DataContract2Attribute.Name">
            <summary>
            Gets or sets the name of the data contract for the type.
            </summary>
        </member>
        <member name="P:System.Runtime.Serialization.DataContract2Attribute.Namespace">
            <summary>
            Gets or sets the namespace for the data contract for the type.
            </summary>
        </member>
        <member name="T:System.Runtime.Serialization.DataContractSerializer">
            <summary>
            Serializes and deserializes an instance of a type into an XML stream or document
            using a supplied data contract. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Boolean)">
            <summary>
            Initializes a new instance of the System.Runtime.Serialization.DataContractSerializer
            class to serialize or deserialize an object of the specified type.
            </summary>
            <param name="type">The type of the instances that are serialized or deserialized.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Boolean)" -->
        <member name="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes">
            <summary>
            Gets a collection of types that may be present in the object graph serialized
            using this instance of the System.Runtime.Serialization.DataContractSerializer.
            </summary>
        </member>
        <member name="M:System.Runtime.Serialization.DataContractSerializer_Helpers.GenerateUniqueNamespacePrefixIfNeeded(System.Xml.Linq.XElement,System.String)">
            <summary>
            If the given namespacealready has an assigned prefix, returns that prefix,
            otherwise, generates a unique, unused prefix, defines it in the element, then returns the prefix.
            </summary>
            <param name="element">The XElement in which to define the prefix.</param>
            <param name="namespaceName">The namespace name for which to define the prefix.</param>
            <returns></returns>
        </member>
        <member name="M:System.Runtime.Serialization.DataContractSerializer_Helpers.ConvertDateTimeToSerializationString(System.DateTime)">
            <summary>
            Produces a string from an input System.DateTime.
            </summary>
            <param name="value">A System.DateTime to translate to a string.</param>
            <returns>A string representation of the System.DateTime that shows the date and time.</returns>
        </member>
        <member name="M:System.Runtime.Serialization.DataContractSerializer_Helpers.CallMethod(System.Object,System.Type,System.Type,System.Collections.Generic.Dictionary{System.Type,System.Reflection.MethodInfo})">
            <summary>
            Useful to call the methods "OnDeserializing, OnDeserialized, OnSerializing and OnSerialized.
            </summary>
            <param name="obj"></param>
            <param name="objType"></param>
            <param name="attributeType"></param>
            <param name="methodsCache"></param>
        </member>
        <member name="T:System.Serializable2Attribute">
            <summary>
            Indicates that a class can be serialized. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:System.Serializable2Attribute.#ctor">
            <summary>
            Initializes a new instance of the System.SerializableAttribute class.
            </summary>
        </member>
        <member name="T:System.ServiceModel.ServiceContract2Attribute">
            <summary>
            Indicates that an interface or a class defines a service contract in a Windows
            Communication Foundation (WCF) application.
            </summary>
        </member>
        <member name="M:System.ServiceModel.ServiceContract2Attribute.#ctor">
            <summary>
            Initializes a new instance of the System.ServiceModel.ServiceContractAttribute
            class.
            </summary>
        </member>
        <member name="P:System.ServiceModel.ServiceContract2Attribute.CallbackContract">
            <summary>
            Gets or sets the type of callback contract when the contract is a duplex
            contract.
            </summary>
        </member>
        <member name="P:System.ServiceModel.ServiceContract2Attribute.ConfigurationName">
            <summary>
            The name used to locate the service element in an application configuration
            file. The default is the name of the service implementation class.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:System.ServiceModel.ServiceContract2Attribute.Name" -->
        <!-- Badly formed XML comment ignored for member "P:System.ServiceModel.ServiceContract2Attribute.Namespace" -->
        <member name="P:System.Windows.Browser.HtmlDocument.DocumentUri">
            <summary>
            Gets a Uniform Resource Identifier (URI) object that represents the current HTML
            document.
            </summary>
        </member>
        <member name="P:System.Windows.Browser.HtmlDocument.QueryString">
            <summary>
            Gets a navigable, read-only collection of name/value pairs that represent
            the query string parameters on the current page's URL.
            </summary>
        </member>
        <member name="P:System.Windows.Browser.HtmlPage.Window">
            <summary>
            Gets the browser's window object.
            </summary>
        </member>
        <member name="P:System.Windows.Browser.HtmlPage.Document">
            <summary>
            Gets the browser's document object.
            </summary>
        </member>
        <member name="M:System.Windows.Browser.HtmlWindow.Navigate(System.Uri,System.String,System.String)">
            <summary>
            Opens the specified page in the specified browser instance, with the indicated user interface features.
            </summary>
            <param name="navigateToUri"></param>
            <param name="target"></param>
            <param name="targetFeatures"></param>
        </member>
        <member name="M:System.Windows.Browser.HtmlWindow.Eval(System.String)">
            <summary>
            Evaluates a string that contains arbitrary JavaScript code.
            </summary>
            <param name="stringToEvaluate">Javascript code.</param>
            <returns>The results of the JavaScript engine's evaluation of the string in the code parameter.</returns>
        </member>
        <member name="T:System.Tuple2">
            <summary>
            Utility class that simplifies cration of tuples by using
            method calls instead of constructor calls
            </summary>
        </member>
        <member name="M:System.Tuple2.Create``2(``0,``1)">
            <summary>
            Creates a new tuple value with the specified elements. The method
            can be used without specifying the generic parameters, because C#
            compiler can usually infer the actual types.
            </summary>
            <param name="item1">First element of the tuple</param>
            <param name="second">Second element of the tuple</param>
            <returns>A newly created tuple</returns>
        </member>
        <member name="M:System.Tuple2.Create``3(``0,``1,``2)">
            <summary>
            Creates a new tuple value with the specified elements. The method
            can be used without specifying the generic parameters, because C#
            compiler can usually infer the actual types.
            </summary>
            <param name="item1">First element of the tuple</param>
            <param name="second">Second element of the tuple</param>
            <param name="third">Third element of the tuple</param>
            <returns>A newly created tuple</returns>
        </member>
        <member name="M:System.Tuple2.Create``4(``0,``1,``2,``3)">
            <summary>
            Creates a new tuple value with the specified elements. The method
            can be used without specifying the generic parameters, because C#
            compiler can usually infer the actual types.
            </summary>
            <param name="item1">First element of the tuple</param>
            <param name="second">Second element of the tuple</param>
            <param name="third">Third element of the tuple</param>
            <param name="fourth">Fourth element of the tuple</param>
            <returns>A newly created tuple</returns>
        </member>
        <member name="M:System.Tuple2.Create``5(``0,``1,``2,``3,``4)">
            <summary>
            Creates a new tuple value with the specified elements. The method
            can be used without specifying the generic parameters, because C#
            compiler can usually infer the actual types.
            </summary>
            <param name="item1">First element of the tuple</param>
            <param name="second">Second element of the tuple</param>
            <param name="third">Third element of the tuple</param>
            <param name="fourth">Fourth element of the tuple</param>
            <param name="fifth">Fifth element of the tuple</param>
            <returns>A newly created tuple</returns>
        </member>
        <member name="M:System.Tuple2.Create``6(``0,``1,``2,``3,``4,``5)">
            <summary>
            Creates a new tuple value with the specified elements. The method
            can be used without specifying the generic parameters, because C#
            compiler can usually infer the actual types.
            </summary>
            <param name="item1">First element of the tuple</param>
            <param name="second">Second element of the tuple</param>
            <param name="third">Third element of the tuple</param>
            <param name="fourth">Fourth element of the tuple</param>
            <param name="fifth">Fifth element of the tuple</param>
            <param name="sixth">Sixth element of the tuple</param>
            <returns>A newly created tuple</returns>
        </member>
        <member name="T:System.Tuple2`2">
            <summary>
            Represents a functional tuple that can be used to store
            two values of different types inside one object.
            </summary>
            <typeparam name="T1">The type of the first element</typeparam>
            <typeparam name="T2">The type of the second element</typeparam>
        </member>
        <member name="M:System.Tuple2`2.#ctor(`0,`1)">
            <summary>
            Create a new tuple value
            </summary>
            <param name="item1">First element of the tuple</param>
            <param name="item2">Second element of the tuple</param>
        </member>
        <member name="P:System.Tuple2`2.Item1">
            <summary>
            Retyurns the first element of the tuple
            </summary>
        </member>
        <member name="P:System.Tuple2`2.Item2">
            <summary>
            Returns the second element of the tuple
            </summary>
        </member>
        <member name="T:System.Tuple2`3">
            <summary>
            Represents a functional tuple that can be used to store
            two values of different types inside one object.
            </summary>
            <typeparam name="T1">The type of the first element</typeparam>
            <typeparam name="T2">The type of the second element</typeparam>
            <typeparam name="T3">The type of the third element</typeparam>
        </member>
        <member name="M:System.Tuple2`3.#ctor(`0,`1,`2)">
            <summary>
            Create a new tuple value
            </summary>
            <param name="item1">First element of the tuple</param>
            <param name="item2">Second element of the tuple</param>
            <param name="item3">Third element of the tuple</param>
        </member>
        <member name="P:System.Tuple2`3.Item1">
            <summary>
            Retyurns the first element of the tuple
            </summary>
        </member>
        <member name="P:System.Tuple2`3.Item2">
            <summary>
            Returns the second element of the tuple
            </summary>
        </member>
        <member name="P:System.Tuple2`3.Item3">
            <summary>
            Returns the second element of the tuple
            </summary>
        </member>
        <member name="T:System.Tuple2`4">
            <summary>
            Represents a functional tuple that can be used to store
            two values of different types inside one object.
            </summary>
            <typeparam name="T1">The type of the first element</typeparam>
            <typeparam name="T2">The type of the second element</typeparam>
            <typeparam name="T3">The type of the third element</typeparam>
            <typeparam name="T4">The type of the fourth element</typeparam>
        </member>
        <member name="M:System.Tuple2`4.#ctor(`0,`1,`2,`3)">
            <summary>
            Create a new tuple value
            </summary>
            <param name="item1">First element of the tuple</param>
            <param name="item2">Second element of the tuple</param>
            <param name="item3">Third element of the tuple</param>
            <param name="item4">Fourth element of the tuple</param>
        </member>
        <member name="P:System.Tuple2`4.Item1">
            <summary>
            Retyurns the first element of the tuple
            </summary>
        </member>
        <member name="P:System.Tuple2`4.Item2">
            <summary>
            Returns the second element of the tuple
            </summary>
        </member>
        <member name="P:System.Tuple2`4.Item3">
            <summary>
            Returns the second element of the tuple
            </summary>
        </member>
        <member name="P:System.Tuple2`4.Item4">
            <summary>
            Returns the second element of the tuple
            </summary>
        </member>
        <member name="T:System.Tuple2`5">
            <summary>
            Represents a functional tuple that can be used to store
            two values of different types inside one object.
            </summary>
            <typeparam name="T1">The type of the first element</typeparam>
            <typeparam name="T2">The type of the second element</typeparam>
            <typeparam name="T3">The type of the third element</typeparam>
            <typeparam name="T4">The type of the fourth element</typeparam>
            <typeparam name="T5">The type of the fifth element</typeparam>
        </member>
        <member name="M:System.Tuple2`5.#ctor(`0,`1,`2,`3,`4)">
            <summary>
            Create a new tuple value
            </summary>
            <param name="item1">First element of the tuple</param>
            <param name="second">Second element of the tuple</param>
            <param name="third">Third element of the tuple</param>
            <param name="fourth">Fourth element of the tuple</param>
        </member>
        <member name="P:System.Tuple2`5.Item1">
            <summary>
            Retyurns the first element of the tuple
            </summary>
        </member>
        <member name="P:System.Tuple2`5.Item2">
            <summary>
            Returns the second element of the tuple
            </summary>
        </member>
        <member name="P:System.Tuple2`5.Item3">
            <summary>
            Returns the third element of the tuple
            </summary>
        </member>
        <member name="P:System.Tuple2`5.Item4">
            <summary>
            Returns the fourth element of the tuple
            </summary>
        </member>
        <member name="P:System.Tuple2`5.Item5">
            <summary>
            Returns the fifth element of the tuple
            </summary>
        </member>
        <member name="T:System.Tuple2`6">
            <summary>
            Represents a functional tuple that can be used to store
            two values of different types inside one object.
            </summary>
            <typeparam name="T1">The type of the first element</typeparam>
            <typeparam name="T2">The type of the second element</typeparam>
            <typeparam name="T3">The type of the third element</typeparam>
            <typeparam name="T4">The type of the fourth element</typeparam>
            <typeparam name="T5">The type of the fifth element</typeparam>
            <typeparam name="T6">The type of the sixth element</typeparam>
        </member>
        <member name="M:System.Tuple2`6.#ctor(`0,`1,`2,`3,`4,`5)">
            <summary>
            Create a new tuple value
            </summary>
            <param name="item1">First element of the tuple</param>
            <param name="second">Second element of the tuple</param>
            <param name="third">Third element of the tuple</param>
            <param name="fourth">Fourth element of the tuple</param>
        </member>
        <member name="P:System.Tuple2`6.Item1">
            <summary>
            Retyurns the first element of the tuple
            </summary>
        </member>
        <member name="P:System.Tuple2`6.Item2">
            <summary>
            Returns the second element of the tuple
            </summary>
        </member>
        <member name="P:System.Tuple2`6.Item3">
            <summary>
            Returns the third element of the tuple
            </summary>
        </member>
        <member name="P:System.Tuple2`6.Item4">
            <summary>
            Returns the fourth element of the tuple
            </summary>
        </member>
        <member name="P:System.Tuple2`6.Item5">
            <summary>
            Returns the fifth element of the tuple
            </summary>
        </member>
        <member name="P:System.Tuple2`6.Item6">
            <summary>
            Returns the fifth element of the tuple
            </summary>
        </member>
        <member name="T:CompilerIsSLMigrationAttribute">
            <summary>
            Specifies whether the project was compiled in the "SLMigration" mode.
            </summary>
        </member>
        <member name="M:CompilerIsSLMigrationAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CompilerIsSLMigrationAttribute class with a
            boolean specifying whether the project was compiled in the "SLMigration" mode.
            </summary>
            <param name="isSLMigration">A boolean that is true if the project compiled in the "SLMigration" mode, and false otherwise.</param>
        </member>
        <member name="P:CompilerIsSLMigrationAttribute.IsSLMigration">
            <summary>
            Gets a boolean that is true if the project compiled in the "SLMigration" mode, and false otherwise.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.FrameworkElement">
            <summary>
            Provides a framework of common APIs for objects that participate in UI and
            programmatic layout. FrameworkElement also defines APIs related to data binding,
            object tree, and object lifetime feature areas.
            </summary>
            <summary>
            Provides a framework of common APIs for objects that participate in UI and
            programmatic layout. FrameworkElement also defines APIs related to data binding,
            object tree, and object lifetime feature areas.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.UIElement">
            <summary>
            UIElement is a base class for most of the objects that have visual appearance
            and can process basic input in a user interface.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.DependencyObject">
            <summary>
            Represents an object that participates in the dependency property system. DependencyObject
            is the immediate base class of many important UI-related classes, such as
            UIElement, Geometry, FrameworkTemplate, Style, and ResourceDictionary.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
            <summary>
            Returns the current effective value of a dependency property from a DependencyObject.
            </summary>
            <param name="dependencyProperty">
            The DependencyProperty identifier of the property for which to retrieve the
            value.
            </param>
            <returns>Returns the current effective value.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.DependencyObject.SetLocalValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Sets the local value of a dependency property on a DependencyObject while not overriding a hypothetical Binding (example: when the user writes in a TextBox with a two way Binding on its Text property).
            </summary>
            <param name="dependencyProperty">The identifier of the dependency property to set.</param>
            <param name="value">The new local value.</param>
        </member>
        <member name="M:Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
            <summary>
            Returns the local value of a dependency property, if a local value is set.
            </summary>
            <param name="dependencyProperty">
            The DependencyProperty identifier of the property for which to retrieve the
            local value.
            </param>
            <returns>
            Returns the local value, or returns the sentinel value UnsetValue if no local
            value is set.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Sets the local value of a dependency property on a DependencyObject.
            </summary>
            <param name="dependencyProperty">The identifier of the dependency property to set.</param>
            <param name="value">The new local value.</param>
        </member>
        <member name="M:Windows.UI.Xaml.DependencyObject.SetInheritedValue(Windows.UI.Xaml.DependencyProperty,System.Object,System.Boolean)">
            <summary>
            Sets the inherited value of a dependency property on a DependencyObject. Do not use this method.
            </summary>
            <param name="dependencyProperty">The identifier of the dependency property to set.</param>
            <param name="value">The new local value.</param>
            <param name="recursively">Specifies if the inherited value must be applied to the children of this DependencyObject.</param>
        </member>
        <member name="M:Windows.UI.Xaml.DependencyObject.Coerce(Windows.UI.Xaml.DependencyProperty)">
            <summary>
            Refreshes the value of the given DependencyProperty on this DependencyObject so that it fits the coercion that should be applied on it.
            </summary>
            <param name="dependencyProperty">The dependencyProperty whose value we want to refresh.</param>
        </member>
        <member name="M:Windows.UI.Xaml.DependencyObject.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.Binding)">
            <summary>
            Attaches a binding to a FrameworkElement, using the provided binding object.
            </summary>
            <param name="dependencyProperty">The dependency property identifier of the property that is data bound.</param>
            <param name="binding">The binding to use for the property.</param>
            <returns>The BindingExpression created.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.DependencyObject.INTERNAL_OnAttachedToVisualTree">
            <exclude/>
        </member>
        <member name="M:Windows.UI.Xaml.DependencyObject.INTERNAL_OnDetachedFromVisualTree">
            <exclude/>
        </member>
        <member name="P:Windows.UI.Xaml.DependencyObject.Dispatcher">
            <summary>
            Gets the CoreDispatcher that this object is associated with.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Windows.UI.Xaml.UIElement.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)" -->
        <member name="M:Windows.UI.Xaml.UIElement.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Raises the PointerPressed event
            </summary>
            <param name="eventArgs">The arguments for the event.</param>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Raises the PointerReleased event
            </summary>
            <param name="eventArgs">The arguments for the event.</param>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.ProcessOnPointerEntered(System.Object)">
            <summary>
            Creates the eventArgs from the infos in the javascript's version of the event then raises the PointerEntered event
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Raises the PointerEntered event
            </summary>
            <param name="eventArgs">The arguments for the event.</param>
        </member>
        <member name="F:Windows.UI.Xaml.UIElement.INTERNAL_isPointerInside">
            <summary>
            IMPORTANT NOTE: This boolean is only updated in the case the PointerExited/MouseLeave event is used on this element.
            It states whether the pointer is currently inside the UIElement.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.ProcessOnPointerExited(System.Object)">
            <summary>
            Creates the eventArgs from the infos in the javascript's version of the event then raises the PointerExited event
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Raises the PointerExited event
            </summary>
            <param name="eventArgs">The arguments for the event.</param>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.ProcessOnTapped(System.Object)">
            <summary>
            Raises the Tapped event
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
            <summary>
            Raises the Tapped event
            </summary>
            <param name="eventArgs">The arguments for the event.</param>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.ProcessOnRightTapped(System.Object)">
            <summary>
            Raises the RightTapped event
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
            <summary>
            Raises the RightTapped event
            </summary>
            <param name="eventArgs">The arguments for the event.</param>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.ProcessOnKeyDown(System.Object)">
            <summary>
            Raises the OnKeyDown event
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Raises the KeyDown event
            </summary>
            <param name="eventArgs">The arguments for the event.</param>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.ProcessOnKeyUp(System.Object)">
            <summary>
            Raises the OnKeyUp event
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Raises the KeyUp event
            </summary>
            <param name="eventArgs">The arguments for the event.</param>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.ProcessOnGotFocus(System.Object)">
            <summary>
            Raises the GotFocus event
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Raises the GotFocus event
            </summary>
            <param name="eventArgs">The arguments for the event.</param>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.ProcessOnLostFocus(System.Object)">
            <summary>
            Raises the LostFocus event
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Raises the LostFocus event
            </summary>
            <param name="eventArgs">The arguments for the event.</param>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
            <summary>
            Adds a routed event handler for a specified routed event, adding the handler
            to the handler collection on the current element. Specify handledEventsToo
            as true to have the provided handler be invoked for a routed event case that
            had already been marked as handled by another element along the event route.
            </summary>
            <param name="routedEvent">An identifier for the routed event to be handled.</param>
            <param name="handler">A reference to the handler implementation.</param>
            <param name="handledEventsToo">
            True to register the handler such that it is invoked even when the routed
            event is marked handled in its event data. False to register the handler
            with the default condition that it will not be invoked if the routed event
            is already marked handled. The default is false.
            </param>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
            <summary>
            Removes the specified routed event handler from this UIElement. Typically
            the handler in question was added by AddHandler.
            </summary>
            <param name="routedEvent">The identifier of the routed event for which the handler is attached.</param>
            <param name="handler">The specific handler implementation to remove from the event handler collection
            on this UIElement.</param>
        </member>
        <member name="F:Windows.UI.Xaml.UIElement.INTERNAL_ValidationErrorsDictionary">
            <summary>
            Dictionary that helps link the validationErrors to the BindingExpressions for managing the errors.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.CreateDomElement(System.Object,System.Object@)">
            <summary>
            When overriden, creates the dom elements designed to represent an instance of an UIElement and defines the place where its child(ren) will be added.
            </summary>
            <param name="parentRef">The parent of the UIElement</param>
            <param name="domElementWhereToPlaceChildren">The dom element where the UIElement's children will be added.</param>
            <returns>The "root" dom element of the UIElement.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.CreateDomChildWrapper(System.Object,System.Object@)">
            <summary>
            When overriden, creates a dom wrapper for each child that is added to the UIElement.
            </summary>
            <param name="parentRef"></param>
            <param name="domElementWhereToPlaceChild"></param>
            <returns></returns>
        </member>
        <member name="F:Windows.UI.Xaml.UIElement.RenderTransformProperty">
            <summary>
            Identifies the RenderTransform dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.UIElement.UseLayoutRoundingProperty">
            <summary>
            Identifies the UseLayoutRounding dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.UIElement.VisibilityProperty">
            <summary>
            Identifies the Visibility dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.UIElement.OpacityProperty">
            <summary>
            Identifies the Opacity dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.UIElement.IsHitTestVisibleProperty">
            <summary>
            Identifies the IsHitTestVisible property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.UIElement.AllowDropProperty">
            <summary>
            Identifies the AllowDrop dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
            <summary>
            Sets pointer capture to a UIElement.
            </summary>
            <param name="value">The pointer object reference.</param>
            <returns>True if the object has pointer capture; otherwise, false.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
            <summary>
            Releases pointer captures for capture of one specific pointer by this UIElement.
            </summary>
            <param name="value">
            The pointer reference. Use either saved references from previous captures,
            or pointer event data, to obtain this reference.
            </param>
        </member>
        <member name="M:Windows.UI.Xaml.UIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
            <summary>
            Returns a transform object that can be used to transform coordinates from
            the UIElement to the specified object.
            </summary>
            <param name="visual">
            The object to compare to the current object for purposes of obtaining the
            transform.
            </param>
            <returns>
            The transform information as an object. Call methods on this object to get
            a practical transform.
            </returns>
        </member>
        <member name="E:Windows.UI.Xaml.UIElement.PointerMoved">
            <summary>
            Occurs when the pointer device that previously initiated a Press action is
            moved, while within this element.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.UIElement.PointerPressed">
            <summary>
            Occurs when the pointer device that previously initiated a Press action is
            pressed, while within this element.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.UIElement.PointerReleased">
            <summary>
            Occurs when the pointer device that previously initiated a Press action is
            released, while within this element.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.UIElement.PointerEntered">
            <summary>
            Occurs when a pointer enters the hit test area of this element.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.UIElement.PointerExited">
            <summary>
            Occurs when a pointer leaves the hit test area of this element.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.UIElement.Tapped">
            <summary>
            Occurs when an otherwise unhandled Tap interaction occurs over the hit test
            area of this element.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.UIElement.RightTapped">
            <summary>
            Occurs when a right-tap input stimulus happens while the pointer is over
            the element.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.UIElement.KeyDown">
            <summary>
            Occurs when a keyboard key is pressed while the UIElement has focus.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.UIElement.KeyUp">
            <summary>
            Occurs when a keyboard key is released while the UIElement has focus.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.UIElement.GotFocus">
            <summary>
            Occurs when the pointer device that previously initiated a Press action is
            pressed, while within this element.
            Note that ONLY sender's informations are currently filled (not pointer's)
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.UIElement.LostFocus">
            <summary>
            Occurs when a UIElement loses focus.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.UIElement.ClipToBounds">
            <summary>
            Gets or sets a value indicating whether to clip the content of this element
            (or content coming from the child elements of this element) to fit into the
            size of the containing element. This is a dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.UIElement.RenderTransform">
            <summary>
            Gets or sets transform information that affects the rendering position of
            a UIElement.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.UIElement.UseLayoutRounding">
            <summary>
            Gets or sets a value that determines whether rendering for the object and
            its visual subtree should use rounding behavior that aligns rendering to
            whole pixels.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.UIElement.Visibility">
            <summary>
            Gets or sets the visibility of a UIElement. A UIElement that is not visible
            is not rendered and does not communicate its desired size to layout.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.UIElement.Opacity">
            <summary>
            Gets or sets the degree of the object's opacity.
            A value between 0 and 1.0 that declares the opacity factor, with 1.0 meaning
            full opacity and 0 meaning transparent. The default value is 1.0.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.UIElement.IsHitTestVisible">
            <summary>
            Gets or sets whether the contained area of this UIElement can return true
            values for hit testing.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.UIElement.AllowDrop">
            <summary>
            Gets or sets a value that determines whether this UIElement
            can be a drop target for purposes of drag-and-drop operations.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.UIElement.IsPointerCaptured">
            <summary>
            Gets a value indicating whether the pointer is captured to this element.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.FrameworkElement.HeightProperty">
            <summary>
            Identifies the Height dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.FrameworkElement.WidthProperty">
            <summary>
            Identifies the Width dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.FrameworkElement.HorizontalAlignmentProperty">
            <summary>
            Identifies the HorizontalAlignment dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.FrameworkElement.VerticalAlignmentProperty">
            <summary>
            Identifies the VerticalAlignment dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.FrameworkElement.MarginProperty">
            <summary>
            Identifies the Margin dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.FrameworkElement.MinHeightProperty">
            <summary>
            Identifies the MinHeight dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.FrameworkElement.MinWidthProperty">
            <summary>
            Identifies the MinWidth dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.FrameworkElement.MaxHeightProperty">
            <summary>
            Identifies the MaxHeight dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.FrameworkElement.MaxWidthProperty">
            <summary>
            Identifies the MaxWidth dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.FrameworkElement.INTERNAL_GetActualWidthAndHeight">
            <summary>
            Use this method for better performance in the Simulator compared to requesting the ActualWidth and ActualHeight separately.
            </summary>
            <returns>The actual size of the element.</returns>
        </member>
        <member name="F:Windows.UI.Xaml.FrameworkElement.INTERNAL_DoNotApplyStyle">
            <summary>
            Derived classes can set this flag in their constructor to prevent the "Style" property from being applied.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.FrameworkElement.#ctor">
            <summary>
            Provides base class initialization behavior for FrameworkElement-derived
            classes.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.FrameworkElement.CreateDomElement(System.Object,System.Object@)">
            <summary>
            Provides a base implementation for creating the dom elements designed to represent an instance of a FrameworkElement and defines the place where its child(ren) will be added.
            </summary>
            <param name="parentRef">The parent of the FrameworkElement</param>
            <param name="domElementWhereToPlaceChildren">The dom element where the FrameworkElement's children will be added.</param>
            <returns>The "root" dom element of the FrameworkElement.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.FrameworkElement.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes (such as a rebuilding
            layout pass) call ApplyTemplate. In simplest terms, this means the method
            is called just before a UI element displays in your app. Override this method
            to influence the default post-template logic of a class.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.FrameworkElement.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
            <summary>
            Returns the System.Windows.Data.BindingExpression that represents the binding
            on the specified property.
            </summary>
            <param name="dp">The target System.Windows.DependencyProperty to get the binding from.</param>
            <returns>
            A System.Windows.Data.BindingExpression if the target property has an active
            binding; otherwise, returns null.
            </returns>
        </member>
        <member name="F:Windows.UI.Xaml.FrameworkElement.IsEnabledProperty">
            <summary>
            Identifies the IsEnabled dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.FrameworkElement.FindName(System.String)">
            <summary>
            Retrieves an object that has the specified identifier name.
            </summary>
            <param name="name">The name of the requested object.</param>
            <returns>
            The requested object. This can be null if no matching object was found in
            the current XAML namescope.
            </returns>
        </member>
        <member name="F:Windows.UI.Xaml.FrameworkElement.NameProperty">
            <summary>
            Identifies the Name dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.FrameworkElement.DataContextProperty">
            <summary>
            Identifies the DataContext dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.FrameworkElement.TagProperty">
            <summary>
            Identifies the Tag dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.FrameworkElement.StyleProperty">
            <summary>
            Identifies the Style dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.FrameworkElement.ContextMenuProperty">
            <summary>
            Identifies the ContextMenu dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.FrameworkElement.Height">
            <summary>
            Gets or sets the suggested height of a FrameworkElement.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.FrameworkElement.Width">
            <summary>
            Gets or sets the width of a FrameworkElement.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.FrameworkElement.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment characteristics that are applied to
            a FrameworkElement when it is composed in a layout parent, such as a panel
            or items control.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.FrameworkElement.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment characteristics that are applied to a
            FrameworkElement when it is composed in a parent object such as a panel or
            items control.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.FrameworkElement.Margin">
            <summary>
            Gets or sets the outer margin of a FrameworkElement.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.FrameworkElement.MinHeight">
            <summary>
            Gets or sets the minimum height constraint of a FrameworkElement.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.FrameworkElement.MinWidth">
            <summary>
            Gets or sets the minimum width constraint of a FrameworkElement.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.FrameworkElement.MaxHeight">
            <summary>
            Gets or sets the maximum height constraint of a FrameworkElement.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.FrameworkElement.MaxWidth">
            <summary>
            Gets or sets the maximum width constraint of a FrameworkElement.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.FrameworkElement.ActualWidth">
            <summary>
            Gets the rendered width of a FrameworkElement. The FrameworkElement must be in the visual tree,
            otherwise this property will return double.NaN.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.FrameworkElement.ActualHeight">
            <summary>
            Gets the rendered height of a FrameworkElement. The FrameworkElement must be in the visual tree,
            otherwise this property will return double.NaN.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.FrameworkElement.SizeChanged">
            <summary>
            Occurs when either the ActualHeight or the ActualWidth property changes value on a FrameworkElement.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.FrameworkElement.Resources">
            <summary>
            Gets the locally defined resource dictionary. In XAML, you can establish
            resource items as child object elements of a frameworkElement.Resources property
            element, through XAML implicit collection syntax.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.FrameworkElement.Parent">
            <summary>
            Gets the parent object of this FrameworkElement in the object tree.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.FrameworkElement.IsLoaded">
            <summary>
            Gets a value that indicates whether this element is in the Visual Tree, that is, if it has been loaded for presentation.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.FrameworkElement.Cursor">
            <summary>
            Gets or sets the cursor that displays when the mouse pointer is over this
            element.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.FrameworkElement.IsEnabled">
            <summary>
            Gets or sets a value indicating whether the user can interact with the control.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.FrameworkElement.IsEnabledChanged">
            <summary>
            Occurs when the IsEnabled property changes.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.FrameworkElement.Name">
            <summary>
            Gets or sets the identifying name of the object. When a XAML processor creates
            the object tree from XAML markup, run-time code can refer to the XAML-declared
            object by this name.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.FrameworkElement.DataContext">
            <summary>
            Gets or sets the data context for a FrameworkElement when it participates
            in data binding.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.FrameworkElement.Tag">
            <summary>
            Gets or sets an arbitrary object value that can be used to store custom information
            about this object.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.FrameworkElement.Style">
            <summary>
            Gets or sets an instance Style that is applied for this object during rendering.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.FrameworkElement.Loaded">
            <summary>
            Occurs when a FrameworkElement has been constructed and added to the object tree.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.FrameworkElement.Unloaded">
            <summary>
            Occurs when this object is no longer connected to the main object tree.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.FrameworkElement.BindingValidationError">
            <summary>
            Occurs when a data validation error is reported by a binding source.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.FrameworkElement.ContextMenu">
            <summary>
            Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.FrameworkElement.ContextMenuOpening">
            <summary>
            Occurs when any context menu on the element is opened.
            </summary>
        </member>
        <member name="T:MinimumRequiredCompilerVersionFriendlyNameAttribute">
            <summary>
            Specifies the friendly name of the minimum version of the C#/XAML for HTML5 compiler that is required to process the assembly being attributed.
            </summary>
        </member>
        <member name="M:MinimumRequiredCompilerVersionFriendlyNameAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MinimumRequiredCompilerVersionFriendlyNameAttribute class with the
            friendly name of the minimum version of the C#/XAML for HTML5 compiler that is required to process the assembly being attributed.
            </summary>
            <param name="versionFriendlyName">The friendly name of the minimum version of the C#/XAML for HTML5 compiler that is required to process the assembly being attributed.</param>
        </member>
        <member name="P:MinimumRequiredCompilerVersionFriendlyNameAttribute.VersionFriendlyName">
            <summary>
            The friendly name of the minimum version of the C#/XAML for HTML5 compiler that is required to process the assembly being attributed
            </summary>
        </member>
        <member name="T:MinimumRequiredCompilerVersionNumberAttribute">
            <summary>
            Specifies the minimum version of the C#/XAML for HTML5 compiler that is required to process the assembly being attributed.
            </summary>
        </member>
        <member name="M:MinimumRequiredCompilerVersionNumberAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MinimumRequiredCompilerVersionNumberAttribute class with the minimum
            version number of the C#/XAML for HTML5 compiler that is required to process the assembly being attributed.
            </summary>
            <param name="versionNumber">The minimum version number of the C#/XAML for HTML5 compiler that is required to process the assembly being attributed.</param>
        </member>
        <member name="P:MinimumRequiredCompilerVersionNumberAttribute.VersionNumber">
            <summary>
            The minimum version number of the C#/XAML for HTML5 compiler that is required to process the assembly being attributed
            </summary>
        </member>
        <member name="P:MinimumRequiredCompilerVersionNumberAttribute.Version">
            <summary>
            The minimum version of the C#/XAML for HTML5 compiler that is required to process the assembly being attributed
            </summary>
        </member>
        <member name="T:CSHTML5.INTERNAL_InteropImplementation.ReferenceIDGenerator">
            <summary>
            This class has a method that generates IDs in sequence (0, 1, 2, 3...)
            </summary>
        </member>
        <member name="T:System.Windows.Markup.SupportsDirectContentViaTypeFromStringConvertersAttribute">
            <summary>
            Indicates that the type supports direct content when used in XAML. A XAML processor
            uses this information when processing XAML child elements of XAML representations
            of the attributed type. The direct content is converted using the
            TypeFromStringConverter class.
            </summary>
        </member>
        <member name="M:System.Windows.Markup.SupportsDirectContentViaTypeFromStringConvertersAttribute.#ctor">
            <summary>
            Initializes a new instance of the SupportsDirectContentViaTypeFromStringConvertersAttribute class.
            </summary>
        </member>
        <member name="M:DotNetForHtml5.Core.INTERNAL_EventManager`2.OnEvent(System.Object)">
            <summary>
            Raises the event
            </summary>
            <param name="jsEventArg">The javascript event argument.</param>
        </member>
        <member name="T:DotNetForHtml5.Core.HtmlEventProxy">
            <summary>
            </summary>
            <exclude/>
        </member>
        <member name="T:DotNetForHtml5.Core.HtmlEventProxy.EventArgsWithJSEventObject">
            <summary>
            </summary>
            <exclude/>
        </member>
        <member name="T:CSHTML5.NamespaceDoc">
            <summary>
            The <see cref="N:CSHTML5"/> namespace contains classes that are specific to
            C#/XAML for HTML5, such as the 'Interop' class for executing JavaScript code
            from within C#.
            </summary>
        </member>
        <member name="T:DotNetForHtml5.Core.NamespaceDoc">
            <summary>
            <see cref="N:DotNetForHtml5.Core"/> namespace.
            </summary>
        </member>
        <member name="T:System.NamespaceDoc">
            <summary>
            The <see cref="N:System"/> namespace contains fundamental classes and base classes
            that define commonly-used value and reference data types, events and event handlers,
            interfaces, attributes, and processing exceptions.
            </summary>
        </member>
        <member name="T:System.Collections.NamespaceDoc">
            <summary>
            The <see cref="N:System.Collections"/> namespaces contain types that define various standard, specialized, and generic collection objects.
            </summary>
        </member>
        <member name="T:System.Collections.Generic.NamespaceDoc">
            <summary>
            The <see cref="N:System.Collections.Generic"/> namespace contains interfaces
            and classes that define generic collections, which allow users to create strongly
            typed collections that provide better type safety and performance than non-generic
            strongly typed collections.
            </summary>
        </member>
        <member name="T:System.Collections.ObjectModel.NamespaceDoc">
            <summary>
            The <see cref="N:System.Collections.ObjectModel"/> namespace contains classes
            that can be used as collections in the object model of a reusable library. Use these
            classes when properties or methods return collections.
            </summary>
        </member>
        <member name="T:System.Collections.Specialized.NamespaceDoc">
            <summary>
            The <see cref="N:System.Collections.Specialized"/> namespace contains specialized
            and strongly-typed collections; for example, a linked list dictionary, a bit vector,
            and collections that contain only strings.
            </summary>
        </member>
        <member name="T:System.ComponentModel.NamespaceDoc">
            <summary>
            The <see cref="N:System.ComponentModel"/> namespaces contain types that implement
            the run-time and design-time behavior of components and controls. Child namespaces support
            the Managed Extensibility Framework (MEF), provide attribute classes that define metadata
            for ASP.NET Dynamic Data controls, and contain types that let you define the design-time
            behavior of components and their user interfaces.
            </summary>
        </member>
        <member name="T:System.Diagnostics.NamespaceDoc">
            <summary>
            The <see cref="N:System.Diagnostics"/> namespaces contain types that enable you to
            interact with system processes, event logs, and performance counters. Child namespaces
            contain types to interact with code analysis tools, to support contracts, to extend
            design-time support for application monitoring and instrumentation, to log event data
            using the Event Tracing for Windows (ETW) tracing subsystem, to read to and write from
            event logs and collect performance data, and to read and write debug symbol information.
            </summary>
        </member>
        <member name="T:System.Globalization.NamespaceDoc">
            <summary>
            The <see cref="N:System.Globalization"/> namespace contains classes that define
            culture-related information, including language, country/region, calendars in use,
            format patterns for dates, currency, and numbers, and sort order for strings. These
            classes are useful for writing globalized (internationalized) applications. Classes
            such as StringInfo and TextInfo provide advanced globalization functionalities,
            including surrogate support and text element processing.
            </summary>
        </member>
        <member name="T:System.IO.NamespaceDoc">
            <summary>
            The <see cref="N:System.IO"/> namespaces contain types that support input and
            output, including the ability to read and write data to streams either synchronously
            or asynchronously, to compress data in streams, to create and use isolated stores, to
            map files to an application's logical address space, to store multiple data objects
            in a single container, to communicate using anonymous or named pipes, to implement
            custom logging, and to handle the flow of data to and from serial ports.
            </summary>
        </member>
        <member name="T:System.Net.NamespaceDoc">
            <summary>
            The <see cref="N:System.Net"/> namespaces contain classes that provide a simple
            programming interface for a number of network protocols, programmatically access and
            update configuration settings for the System.Net namespaces, define cache policies for
            web resources, compose and send e-mail, represent Multipurpose Internet Mail Exchange (MIME)
            headers, access network traffic data and network address information, and access
            peer-to-peer networking functionality. Additional child namespaces provide a managed
            implementation of the Windows Sockets (Winsock) interface and provide access to network
            streams for secure communications between hosts.
            </summary>
        </member>
        <member name="T:System.Net.Security.NamespaceDoc">
            <summary>
            The <see cref="N:System.Net.Security"/> namespace provides network streams for secure
            communications between hosts.
            </summary>
        </member>
        <member name="T:System.Reflection.NamespaceDoc">
            <summary>
            The <see cref="N:System.Reflection"/> namespaces contain types that provide a managed
            view of loaded types, methods, and fields, and that can dynamically create and invoke
            types. A child namespace contains types that enable a compiler or other tool to
            emit metadata and Microsoft intermediate language (MSIL).
            </summary>
        </member>
        <member name="T:System.Resources.NamespaceDoc">
            <summary>
            The <see cref="N:System.Resources"/> namespaces contain types that enable developers to
            create, store, and manage an application's culture-specific resources.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.NamespaceDoc">
            <summary>
            The <see cref="N:System.Runtime.CompilerServices"/> namespace provides functionality for
            compiler writers who use managed code to specify attributes in metadata that affect the
            run-time behavior of the common language runtime.
            </summary>
        </member>
        <member name="T:System.Runtime.InteropServices.NamespaceDoc">
            <summary>
            The <see cref="N:System.Runtime.InteropServices"/> namespace provides a wide variety of
            members that support COM interop and platform invoke services. If you are unfamiliar
            with these services, see Interoperating with Unmanaged Code.
            </summary>
        </member>
        <member name="T:System.Runtime.Serialization.NamespaceDoc">
            <summary>
            The <see cref="N:System.Runtime.Serialization"/> namespace contains classes that can
            be used for serializing and deserializing objects. Serialization is the process of
            converting an object or a graph of objects into a linear sequence of bytes for
            either storage or transmission to another location. Deserialization is the process
            of taking in stored information and recreating objects from it.
            </summary>
        </member>
        <member name="T:System.ServiceModel.NamespaceDoc">
            <summary>
            The <see cref="N:System.ServiceModel"/> namespaces contain the types necessary to
            build Windows Communication Foundation (WCF) service and client applications.
            </summary>
        </member>
        <member name="T:System.ServiceModel.Channels.NamespaceDoc">
            <summary>
            The <see cref="N:System.ServiceModel.Channels"/> provides classes related to service model channels.
            </summary>
        </member>
        <member name="T:System.Text.NamespaceDoc">
            <summary>
            The <see cref="N:System.Text"/> namespaces contain types for character encoding and
            string manipulation. A child namespace enables you to process text using regular expressions.
            </summary>
        </member>
        <member name="T:System.Threading.NamespaceDoc">
            <summary>
            The <see cref="N:System.Threading"/> namespaces contain types that enable multithreaded
            programming. A child namespace provides types that simplify the work of writing
            concurrent and asynchronous code.
            </summary>
        </member>
        <member name="T:System.Windows.NamespaceDoc">
            <summary>
            The <see cref="N:System.Windows"/> namespaces contain types used in Windows Presentation
            Foundation (WPF) applications, including animation clients, user interface controls,
            data binding, and type conversion. System.Windows.Forms and its child namespaces are
            used for developing Windows Forms applications.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.NamespaceDoc">
            <summary>
            The <see cref="N:System.Windows.Controls"/> namespace provides classes to create
            elements, known as controls, that enable a user to interact with an application.
            The control classes are at the core of the user's experience with any application
            because they allow a user to view, select, or enter data or other information.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Primitives.NamespaceDoc">
            <summary>
            The <see cref="N:System.Windows.Controls.Primitives"/> namespace contains base classes
            and controls that are intended to be used as part of other more complex controls.
            </summary>
        </member>
        <member name="T:System.Windows.Markup.NamespaceDoc">
            <summary>
            The <see cref="N:System.Windows.Markup"/> namespace provides types to support XAML.
            Some of these types are located in WPF assemblies and are specific to WPF scenarios
            that involve XAML. Other types in this namespace provide support for .NET Framework
            XAML Services in general, and do not require referencing WPF assemblies.
            </summary>
        </member>
        <member name="T:System.Xml.NamespaceDoc">
            <summary>
            The <see cref="N:System.Xml"/> namespaces contain types for processing XML. Child
            namespaces support serialization of XML documents or streams, XSD schemas, XQuery
            1.0 and XPath 2.0, and LINQ to XML, which is an in-memory XML programming interface
            that enables easy modification of XML documents.
            </summary>
        </member>
        <member name="T:System.Xml.Schema.NamespaceDoc">
            <summary>
            The <see cref="N:System.Xml.Schema"/> namespace contains the XML classes that provide
            standards-based support for XML schema definition language (XSD) schemas.
            </summary>
        </member>
        <member name="T:System.Xml.Serialization.NamespaceDoc">
            <summary>
            The <see cref="N:System.Xml.Serialization"/> namespace contains classes that are used
            to serialize objects into XML format documents or streams.
            </summary>
        </member>
        <member name="T:Windows.ApplicationModel.Activation.NamespaceDoc">
            <summary>
            The <see cref="N:Windows.ApplicationModel.Activation"/> namespace enables an app to
            handle the activation parameters for the activation contracts, appointments, and
            extensions supported by Windows.
            </summary>
        </member>
        <member name="T:Windows.Devices.Input.NamespaceDoc">
            <summary>
            The <see cref="N:Windows.Devices.Input"/> namespace provides support for identifying
            the input devices available (pointer, touch, mouse, and keyboard) and retrieving
            information about those devices.
            </summary>
        </member>
        <member name="T:Windows.Foundation.NamespaceDoc">
            <summary>
            The <see cref="N:Windows.Foundation"/> namespace enables fundamental Windows Runtime
            functionality, including managing asynchronous operations and accessing property
            stores. This namespace also defines common value types that represent Uniform
            Resource Identifiers (URIs), dates and times, 2-D measurements, and other basic values.
            </summary>
        </member>
        <member name="T:Windows.UI.NamespaceDoc">
            <summary>
            The <see cref="N:Windows.UI"/> namespace provides an app with access to core system
            functionality and run-time information about its UI.
            </summary>
        </member>
        <member name="T:Windows.UI.Core.NamespaceDoc">
            <summary>
            The <see cref="N:Windows.UI.Core"/> namespace provides the basic user interface window
            components, including core input events and event dispatch.
            </summary>
        </member>
        <member name="T:Windows.UI.Input.NamespaceDoc">
            <summary>
            The <see cref="N:Windows.UI.Input"/> namespace provides support for the Windows input system.
            </summary>
        </member>
        <member name="T:Windows.UI.Text.NamespaceDoc">
            <summary>
            The <see cref="N:Windows.UI.Text"/> namespace provides support for working with textual content.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.NamespaceDoc">
            <summary>
            The <see cref="N:Windows.UI.Xaml"/> namespace provides general framework APIs and
            application model APIs, and a variety of support classes that are commonly used
            by many different feature areas.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.NamespaceDoc">
            <summary>
            The <see cref="N:Windows.UI.Xaml.Controls"/> namespace provides UI controls and classes
            that support existing and custom controls.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.NamespaceDoc">
            <summary>
            The <see cref="N:Windows.UI.Xaml.Controls.Primitives"/> namespace defines classes
            that represent the component parts of UI controls, or otherwise support the control
            composition model. Also defines interfaces for control patterns such as snapping and selection.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Data.NamespaceDoc">
            <summary>
            The <see cref="N:Windows.UI.Xaml.Data"/> namespace defines the data binding infrastructure for apps.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Input.NamespaceDoc">
            <summary>
            The <see cref="N:Windows.UI.Xaml.Input"/> namespace defines the input and input event
            infrastructure for apps and UI elements.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Markup.NamespaceDoc">
            <summary>
            The <see cref="N:Windows.UI.Xaml.Markup"/> namespace provides XAML language support
            API for Windows Store apps and the Windows Runtime.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.NamespaceDoc">
            <summary>
            The <see cref="N:Windows.UI.Xaml.Media"/> namespace provides basic media support,
            graphics primitives, and brush-drawing APIs.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Imaging.NamespaceDoc">
            <summary>
            The <see cref="N:Windows.UI.Xaml.Media.Imaging"/> namespace provides types related to
            imaging and obtaining resources and source files for bitmap images.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Navigation.NamespaceDoc">
            <summary>
            The <see cref="N:Windows.UI.Xaml.Navigation"/> namespace provides types that support navigation events as initiated by the Page and Frame classes.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Shapes.NamespaceDoc">
            <summary>
            The <see cref="N:Windows.UI.Xaml.Shapes"/> namespace defines basic shapes that are intended for decorative rendering or for compositing non-interactive parts of controls.
            </summary>
        </member>
        <member name="T:DotNetForHtml5.Core.TypeFromStringConverters">
            <summary>
            A class used to convert elements written as strings in the XAML code into the correct type for the properties setted
            </summary>
            <exclude/>
        </member>
        <member name="M:DotNetForHtml5.Core.TypeFromStringConverters.CanTypeBeConverted(System.Type)">
            <summary>
            Checks if it is possible to convert from string to a given type.
            </summary>
            <param name="type">Type to lookup.</param>
            <returns>True if a converter exists, false otherwise.</returns>
        </member>
        <member name="M:DotNetForHtml5.Core.TypeFromStringConverters.RegisterConverter(System.Type,System.Func{System.String,System.Object})">
            <summary>
            Registers a type and its associated method to convert it from a string. This method takes part in allowing the definition of an object of the said type directly in the xaml.
            </summary>
            <param name="type">The type for which a converter will be defined</param>
            <param name="converter">The method that will convert the XAML string into an instance of the type.</param>
        </member>
        <member name="M:DotNetForHtml5.Core.TypeFromStringConverters.ConvertFromInvariantString(System.Type,System.String)">
            <summary>
            Converts the given string into the specified Type using the registered converter for the Type.
            </summary>
            <param name="type">The Type to which the conversion method is registered.</param>
            <param name="s">The string to convert.</param>
            <returns>The instance of the specified type converted from the string.</returns>
        </member>
        <member name="M:DotNetForHtml5.Core.INTERNAL_ShapesDrawHelpers.PrepareStretch(Windows.UI.Xaml.FrameworkElement,System.Object,System.Double,System.Double,System.Double,System.Double,Windows.UI.Xaml.Media.Stretch,Windows.Foundation.Size@)">
            <summary>
            Prepares the Shape so that its canvas has the size it should have, depending on its container, content and Stretch mode.
            </summary>
            <param name="frameworkElement">The Shape containing the canvas.</param>
            <param name="canvasDomElement">The canvas in the Shape.</param>
            <param name="minX">The minimum X-coordinate of the points in the Shape.</param>
            <param name="maxX">The maximum X-coordinate of the points in the Shape.</param>
            <param name="minY">The minimum Y-coordinate of the points in the Shape.</param>
            <param name="maxY">The maximum Y-coordinate of the points in the Shape.</param>
            <param name="stretch">The Stretch mode to apply on the Shape</param>
        </member>
        <member name="M:DotNetForHtml5.Core.INTERNAL_ShapesDrawHelpers.GetMultiplicatorsAndOffsetForStretch(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double,System.Double,System.Double,Windows.UI.Xaml.Media.Stretch,Windows.Foundation.Size,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,Windows.Foundation.Point@)">
            <summary>
            Gets the multiplicators and offsets to fit the Stretch value.
            </summary>
            <param name="frameworkElement">The element on which we make the stretch</param>
            <param name="strokeThickness">The thickness of the stroke</param>
            <param name="minX">the minimal value on the horizontal axis as defined by the user</param>
            <param name="maxX">the maximal value on the horizontal axis as defined by the user</param>
            <param name="minY">the minimal value on the vertical axis as defined by the user</param>
            <param name="maxY">the minimal value on the vertical axis as defined by the user</param>
            <param name="stretch">the Stretch value to apply</param>
            <param name="horizontalMultiplicator">the resulting value by which we have to multiply the horizontal coordinates to fit the Stretch value</param>
            <param name="verticalMultiplicator">the resulting value by which we have to multiply the vertical coordinates to fit the Stretch value</param>
            <param name="xOffsetToApplyBeforeMultiplication">the offset to apply on horizontal coordinates before applying multiplicators</param>
            <param name="yOffsetToApplyBeforeMultiplication">the offset to apply on vertical coordinates before applying multiplicators</param>
            <param name="xOffsetToApplyAfterMultiplication">the offset to apply on horizontal coordinates after applying multiplicators</param>
            <param name="yOffsetToApplyAfterMultiplication">the offset to apply on vertical coordinates after applying multiplicators</param>
            <param name="xOffsetOnMargin">the offset to apply on the Left margin of the element to compensate for the negative coordinates in the path</param>
            <param name="yOffsetOnMargin">the offset to apply on the Top margin of the element to compensate for the negative coordinates in the path</param>
        </member>
        <member name="T:CompilerVersionFriendlyNameAttribute">
            <summary>
            Specifies the friendly name of the version of the C#/XAML for HTML5 compiler used to compile the assembly being attributed.
            </summary>
        </member>
        <member name="M:CompilerVersionFriendlyNameAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CompilerVersionFriendlyNameAttribute class with the
            friendly name of the version of the C#/XAML for HTML5 compiler used to compile the assembly being attributed.
            </summary>
            <param name="versionFriendlyName">The friendly name of the version of the C#/XAML for HTML5 compiler used to compile the assembly being attributed.</param>
        </member>
        <member name="P:CompilerVersionFriendlyNameAttribute.VersionFriendlyName">
            <summary>
            The friendly name of the version of the C#/XAML for HTML5 compiler used to compile the assembly being attributed
            </summary>
        </member>
        <member name="T:CompilerVersionNumberAttribute">
            <summary>
            Specifies the version number of the C#/XAML for HTML5 compiler used to compile the assembly being attributed.
            </summary>
        </member>
        <member name="M:CompilerVersionNumberAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CompilerVersionNumberAttribute class with the
            version number of the C#/XAML for HTML5 compiler used to compile the assembly being attributed.
            </summary>
            <param name="versionNumber">The version number of the C#/XAML for HTML5 compiler used to compile the assembly being attributed.</param>
        </member>
        <member name="P:CompilerVersionNumberAttribute.VersionNumber">
            <summary>
            The version number of the C#/XAML for HTML5 compiler used to compile the assembly being attributed
            </summary>
        </member>
        <member name="P:CompilerVersionNumberAttribute.Version">
            <summary>
            The version of the C#/XAML for HTML5 compiler used to compile the assembly being attributed
            </summary>
        </member>
        <member name="T:CSharpXamlForHtml5.DomManagement">
            <summary>
            This class allows the management of the Dom tree without using VerbatimExpressions
            </summary>
        </member>
        <member name="M:CSharpXamlForHtml5.DomManagement.IsControlInVisualTree(Windows.UI.Xaml.UIElement)">
            <summary>
            Checks if the UIElement is in the visual tree.
            </summary>
            <param name="control">The UIElement</param>
            <returns>True if the UIElement is currently in the visual tree, false otherwise.</returns>
        </member>
        <member name="M:CSharpXamlForHtml5.DomManagement.GetDomElementFromControl(Windows.UI.Xaml.UIElement)">
            <summary>
            Returns the DOM element corresponding to the UIElement.
            </summary>
            <param name="control">The UIElement</param>
            <returns>The DOM element corresponding to the UIElement. It is the DOM Element that contains all of the UIElement's DOM elements.</returns>
        </member>
        <member name="M:CSharpXamlForHtml5.DomManagement.SetHtmlRepresentation(Windows.UI.Xaml.UIElement,System.String)">
            <summary>
            Sets the Html representation of the UIElement.
            </summary>
            <param name="control">The UIElement</param>
            <param name="htmlReprensentation">The string that defines the html representation of the UIElement.</param>
        </member>
        <member name="T:CSharpXamlForHtml5.Environment">
            <summary>
            A class that allows to know the current Environnement (between Running in C# or in Javascript)
            </summary>
        </member>
        <member name="P:CSharpXamlForHtml5.Environment.IsRunningInJavaScript">
            <summary>
            Gets a boolean saying if we are currently running in Javascript.
            </summary>
        </member>
        <member name="T:CSHTML5.Interop">
            <summary>
            Provides static methods for executing JavaScript code from within C#.
            </summary>
        </member>
        <member name="M:CSHTML5.Interop.ExecuteJavaScript(System.String)">
            <summary>
            Allows calling JavaScript code from within C#.
            </summary>
            <param name="javascript">The JavaScript code to execute.</param>
            <returns>The result, if any, of the JavaScript call.</returns>
        </member>
        <member name="M:CSHTML5.Interop.ExecuteJavaScript(System.String,System.Object[])">
            <summary>
            Allows calling JavaScript code from within C#.
            </summary>
            <param name="javascript">The JavaScript code to execute.</param>
            <param name="variables">The objects to use inside the JavaScript call.</param>
            <returns>The result, if any, of the JavaScript call.</returns>
        </member>
        <member name="M:CSHTML5.Interop.ExecuteJavaScriptAsync(System.String)">
            <summary>
            Allows calling JavaScript code from within C#. The call will be asynchronous when run in the Simulator.
            </summary>
            <param name="javascript">The JavaScript code to execute.</param>
        </member>
        <member name="M:CSHTML5.Interop.ExecuteJavaScriptAsync(System.String,System.Object[])">
            <summary>
            Allows calling JavaScript code from within C#. The call will be asynchronous when run in the Simulator.
            </summary>
            <param name="javascript">The JavaScript code to execute.</param>
            <param name="variables">The objects to use inside the JavaScript call.</param>
        </member>
        <member name="M:CSHTML5.Interop.LoadJavaScriptFile(System.String)">
            <summary>
            Adds a 'script' tag to the HTML page and waits for the script to finish loading.
            </summary>
            <param name="url">The URL of the JavaScript file, with the syntax ms-appx:///AssemblyName/Folder/FileName.js or /AssemblyName;component/Folder/FileName.js</param>
            <returns>Nothing</returns>
        </member>
        <member name="M:CSHTML5.Interop.LoadJavaScriptFilesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action)">
            <summary>
            Adds 'script' tags to the HTML page and waits for the scripts to finish loading.
            </summary>
            <param name="urls">The URLs of the JavaScript files, with the syntax ms-appx:///AssemblyName/Folder/FileName.js or /AssemblyName;component/Folder/FileName.js</param>
            <param name="callback">The method that is called when the scripts have finished loading.</param>
        </member>
        <member name="M:CSHTML5.Interop.LoadCssFile(System.String)">
            <summary>
            Adds a 'link' tag to the HTML page and waits for the CSS file to finish loading.
            </summary>
            <param name="url">The URL of the CSS file, with the syntax ms-appx:///AssemblyName/Folder/FileName.css or /AssemblyName;component/Folder/FileName.css</param>
            <returns>Nothing</returns>
        </member>
        <member name="M:CSHTML5.Interop.LoadCssFilesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action)">
            <summary>
            Adds 'link' tags to the HTML page and waits for the CSS files to finish loading.
            </summary>
            <param name="urls">The URL of the CSS files, with the syntax ms-appx:///AssemblyName/Folder/FileName.css or /AssemblyName;component/Folder/FileName.css</param>
            <param name="callback">The method that is called when the CSS files have finished loading.</param>
        </member>
        <member name="M:CSHTML5.Interop.GetDiv(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Returns the HTML Div that is associated to the specified FrameworkElement.
            Note: the FrameworkElement must be in the visual tree. Consider calling this
            method from the 'Loaded' event to ensure that the element is in the visual tree.
            </summary>
            <param name="frameworkElement"></param>
            <returns></returns>
        </member>
        <member name="P:CSHTML5.Interop.IsRunningInTheSimulator">
            <summary>
            Returns True is the app is running in C# inside the Simulator, and False otherwise.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:CSHTML5.Native.Html.Controls.HtmlCanvas" -->
        <member name="F:CSHTML5.Native.Html.Controls.HtmlCanvas.Children">
            <summary>
            Gets the collection of child elements of the canvas.
            </summary>
        </member>
        <member name="M:CSHTML5.Native.Html.Controls.HtmlCanvas.#ctor">
            <summary>
            Create an html5 native canvas
            </summary>
        </member>
        <member name="M:CSHTML5.Native.Html.Controls.HtmlCanvas.GetPointedElements(CSHTML5.Native.Html.Controls.HtmlCanvas,System.Double,System.Double)">
            <summary>
            Return the path to the topmost element that is under the pointer
            </summary>
            <param name="canvas">The container of the elements</param>
            <returns>The path to the topmost element that is under the pointer</returns>
        </member>
        <member name="M:CSHTML5.Native.Html.Controls.HtmlCanvas.#ctor(System.Double,System.Double)">
            <summary>
            Create an html5 native canvas
            </summary>
            <param name="Width">The Width of the canvas.</param>
            <param name="Height">The Height of the canvas.</param>
        </member>
        <member name="M:CSHTML5.Native.Html.Controls.HtmlCanvas.Draw">
            <summary>
            Render the canvas content
            </summary>
        </member>
        <member name="T:CSHTML5.Native.Html.Controls.HtmlCanvasElement">
            <summary>
            Defines an element which can be in a HtmlCanvas. It cannot be instantiated, but
            it provides some common properties. Every HtmlCanvas child is an HtmlCanvasElement.
            Full documentation is available at:
            http://cshtml5.com/links/how-to-use-the-html5-canvas.aspx
            </summary>
        </member>
        <member name="F:CSHTML5.Native.Html.Controls.HtmlCanvasElement.X">
            <summary>
            X coordinate (relative to its parent)
            </summary>
        </member>
        <member name="F:CSHTML5.Native.Html.Controls.HtmlCanvasElement.Y">
            <summary>
            Y coordinate (relative to its parent)
            </summary>
        </member>
        <member name="F:CSHTML5.Native.Html.Controls.HtmlCanvasElement.Style">
            <summary>
            Common style for this element
            </summary>
        </member>
        <member name="M:CSHTML5.Native.Html.Controls.HtmlCanvasElement.Draw(CSHTML5.Native.Html.Controls.ElementStyle,System.Object,System.Double,System.Double)">
            <summary>
            Abstract draw method
            </summary>
            <param name="currentDrawingStyle">Draw style used for last element (can allow optimizations, null if unknown)</param>
            <param name="jsContext2d">Canvas 2d javascript context</param>
            <param name="xParent">X position of the parent element</param>
            <param name="yParent">Y position of the parent element</param>
            <returns>Draw style used for this element (can be null)</returns>
        </member>
        <member name="M:CSHTML5.Native.Html.Controls.HtmlCanvasElement.Move(System.Double,System.Double)">
            <summary>
            Moves the element relatively to its position
            </summary>
            <param name="x">X movement</param>
            <param name="y">Y movement</param>
        </member>
        <member name="M:CSHTML5.Native.Html.Controls.HtmlCanvasElement.MoveTo(System.Double,System.Double)">
            <summary>
            Moves the element to an absolute position (still relative to its parent)
            </summary>
            <param name="x">X position</param>
            <param name="y">Y position</param>
        </member>
        <member name="M:CSHTML5.Native.Html.Controls.HtmlCanvasElement.ApplyStyle(CSHTML5.Native.Html.Controls.ElementStyle,System.Object)">
            <summary>
            Apply the element's drawing style (if needed)
            </summary>
            <param name="oldStyle">Previous style used to draw</param>
            <param name="jsContext2d">Canvas 2d javascript context</param>
            <returns>Current applied style (can be null)</returns>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.HtmlCanvasElement.IsVisible">
            <summary>
            Visibility status
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.HtmlCanvasElement.FillColor">
            <summary>
            Fill color
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.HtmlCanvasElement.StrokeColor">
            <summary>
            Stroke color
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.HtmlCanvasElement.ShadowColor">
            <summary>
            Shadow color
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.HtmlCanvasElement.ShadowBlur">
            <summary>
            Shadow blur
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.HtmlCanvasElement.ShadowOffsetX">
            <summary>
            Shadow horizontal offset
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.HtmlCanvasElement.ShadowOffsetY">
            <summary>
            Shadow vertical offset
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.HtmlCanvasElement.LineCap">
            <summary>
            Style of the end caps for a line
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.HtmlCanvasElement.LineJoin">
            <summary>
            Type of corner created, when two lines meet
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.HtmlCanvasElement.LineWidth">
            <summary>
            Line Width
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.HtmlCanvasElement.MiterLimit">
            <summary>
            Maximum miter length
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.HtmlCanvasElement.Stroke">
            <summary>
            (Deprecated) Access to StrokeColor with Brush instead of Color
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.HtmlCanvasElement.Background">
            <summary>
            (Deprecated) Access to FillColor with Brush instead of Color
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.HtmlCanvasElement.Fill">
            <summary>
            (Deprecated) Access to FillColor with Brush instead of Color
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.HtmlCanvasElement.StrokeThickness">
            <summary>
            (Deprecated) Exactly the same as LineWidth
            </summary>
        </member>
        <member name="E:CSHTML5.Native.Html.Controls.HtmlCanvasElement.ContextMenuOpening">
            <summary>
            Occurs when any context menu on the element is opened.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:CSHTML5.Native.Html.Controls.ContainerElement" -->
        <member name="F:CSHTML5.Native.Html.Controls.ContainerElement.Children">
            <summary>
            Gets the collection of child elements of the container.
            </summary>
        </member>
        <member name="F:CSHTML5.Native.Html.Controls.ContainerElement.Width">
            <summary>
            Width of the container
            </summary>
        </member>
        <member name="F:CSHTML5.Native.Html.Controls.ContainerElement.Height">
            <summary>
            Height of the container
            </summary>
        </member>
        <member name="M:CSHTML5.Native.Html.Controls.ContainerElement.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CSHTML5.Native.Html.Controls.ContainerElement.Draw(CSHTML5.Native.Html.Controls.ElementStyle,System.Object,System.Double,System.Double)">
            <summary>
            Draws the container and its children only if the container is visible.
            </summary>
            <param name="currentDrawingStyle">Draw style used for last element (can allow optimizations, null if unknown)</param>
            <param name="jsContext2d">Canvas 2d javascript context</param>
            <param name="xParent">X position of the parent element</param>
            <param name="yParent">Y position of the parent element</param>
            <returns>Draw style used for this element (can be null)</returns>
        </member>
        <member name="T:CSHTML5.Native.Html.Controls.ElementStyle">
            <summary>
            Provides a drawing style to an element
            </summary>
        </member>
        <member name="F:CSHTML5.Native.Html.Controls.ElementStyle.IsVisible">
            <summary>
            Visibility of the element
            </summary>
        </member>
        <member name="M:CSHTML5.Native.Html.Controls.ElementStyle.#ctor">
            <summary>
            Empty style constructor
            </summary>
        </member>
        <member name="M:CSHTML5.Native.Html.Controls.ElementStyle.Apply(System.Object)">
            <summary>
            Apply this style as the current drawing style
            </summary>
            <param name="jsContext2d">Canvas 2d javascript context</param>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.ElementStyle.FillColor">
            <summary>
            Fill color
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.ElementStyle.StrokeColor">
            <summary>
            Stroke color
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.ElementStyle.ShadowColor">
            <summary>
            Shadow color
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.ElementStyle.ShadowBlur">
            <summary>
            Shadow blur
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.ElementStyle.ShadowOffsetX">
            <summary>
            Shadow horizontal offset
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.ElementStyle.ShadowOffsetY">
            <summary>
            Shadow vertical offset
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.ElementStyle.LineCap">
            <summary>
            Style of the end caps for a line
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.ElementStyle.LineJoin">
            <summary>
            Type of corner created, when two lines meet
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.ElementStyle.LineWidth">
            <summary>
            Line Width
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.ElementStyle.MiterLimit">
            <summary>
            Maximum miter length
            </summary>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.ElementStyle.Default">
            <summary>
            Default style (can be modified)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:CSHTML5.Native.Html.Controls.ImageElement" -->
        <member name="F:CSHTML5.Native.Html.Controls.ImageElement.Width">
            <summary>
            Width of the container
            </summary>
        </member>
        <member name="F:CSHTML5.Native.Html.Controls.ImageElement.Height">
            <summary>
            Height of the container
            </summary>
        </member>
        <member name="M:CSHTML5.Native.Html.Controls.ImageElement.#ctor">
            <summary>
            Default image constructor
            </summary>
        </member>
        <member name="M:CSHTML5.Native.Html.Controls.ImageElement.Draw(CSHTML5.Native.Html.Controls.ElementStyle,System.Object,System.Double,System.Double)">
            <summary>
            Draws the image
            </summary>
            <param name="CurrentDrawingStyle">Draw style used for last element (can allow optimizations, null if unknown)</param>
            <param name="jsContext2d">Canvas 2d javascript context</param>
            <param name="xParent">X position of the parent element</param>
            <param name="yParent">Y position of the parent element</param>
            <returns>Draw style used for this element (can be null)</returns>
        </member>
        <member name="P:CSHTML5.Native.Html.Controls.ImageElement.Source">
            <summary>
            Gets or sets the source for the image. It is possible to use either the
            syntax "ms-appx:///AssemblyName/FolderName/FileName.png" or the syntax
            "/AssemblyName;component/FolderName/FileName.png".
            </summary>
        </member>
        <member name="T:CSHTML5.Native.Html.Controls.LineElement">
            <summary>
            Html5 canvas line.
            Full documentation is available at:
            http://cshtml5.com/links/how-to-use-the-html5-canvas.aspx
            </summary>
            <example>
            You can add a line to the XAML as follows:
            <code lang="XAML" xml:space="preserve">
            <native:HtmlCanvas Width="1000" Height="500" xmlns:native="using:CSHTML5.Native.Html.Controls">
                <native:LineElement X1="200" Y1="42" X2="100" Y2="50" StrokeColor="Red" LineWidth="2"/>
            </native:HtmlCanvas>
            </code>
            Or in C#:
            <code lang="C#">
            HtmlCanvas myCanvas = new HtmlCanvas() { Width = 1000, Height = 500 };
            LineElement myLine = new LineElement()
            {
                X1 = 200,
                Y1 = 42,
                X2 = 100,
                Y2 = 50,
                StrokeColor = Colors.Red,
                LineWidth = 2
            };
            myCanvas.Children.Add(myLine);
            </code>
            </example>
        </member>
        <member name="F:CSHTML5.Native.Html.Controls.LineElement.X1">
            <summary>
            X coordinate of the start point
            </summary>
        </member>
        <member name="F:CSHTML5.Native.Html.Controls.LineElement.Y1">
            <summary>
            Y coordinate of the start point
            </summary>
        </member>
        <member name="F:CSHTML5.Native.Html.Controls.LineElement.X2">
            <summary>
            X coordinate of the end point
            </summary>
        </member>
        <member name="F:CSHTML5.Native.Html.Controls.LineElement.Y2">
            <summary>
            Y coordinate of the end point
            </summary>
        </member>
        <member name="M:CSHTML5.Native.Html.Controls.LineElement.#ctor">
            <summary>
            Default line constructor
            </summary>
        </member>
        <member name="M:CSHTML5.Native.Html.Controls.LineElement.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create line with specified start and end points
            </summary>
            <param name="X1">X coordinate of the start point</param>
            <param name="Y1">Y coordinate of the start point</param>
            <param name="X2">X coordinate of the end point</param>
            <param name="Y2">Y coordinate of the end point</param>
        </member>
        <member name="M:CSHTML5.Native.Html.Controls.LineElement.Draw(CSHTML5.Native.Html.Controls.ElementStyle,System.Object,System.Double,System.Double)">
            <summary>
            Draws the line
            </summary>
            <param name="currentDrawingStyle">Draw style used for last element (can allow optimizations, null if unknown)</param>
            <param name="jsContext2d">Canvas 2d javascript context</param>
            <param name="xParent">X position of the parent element</param>
            <param name="yParent">Y position of the parent element</param>
            <returns>Draw style used for this element (can be null)</returns>
        </member>
        <member name="T:CSHTML5.Native.Html.Controls.LineCap">
            <summary>
            Line cap type
            </summary>
        </member>
        <member name="T:CSHTML5.Native.Html.Controls.LineJoin">
            <summary>
            Line join type
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:CSHTML5.Native.Html.Controls.RectangleElement" -->
        <member name="F:CSHTML5.Native.Html.Controls.RectangleElement.Width">
            <summary>
            Width of the rectangle
            </summary>
        </member>
        <member name="F:CSHTML5.Native.Html.Controls.RectangleElement.Height">
            <summary>
            Height of the rectangle
            </summary>
        </member>
        <member name="M:CSHTML5.Native.Html.Controls.RectangleElement.#ctor">
            <summary>
            Default rectangle constructor
            </summary>
        </member>
        <member name="M:CSHTML5.Native.Html.Controls.RectangleElement.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructor with specified position and size
            </summary>
            <param name="X">X position</param>
            <param name="Y">Y position</param>
            <param name="Width">Width of the rectangle</param>
            <param name="Height">Height of the rectangle</param>
        </member>
        <member name="M:CSHTML5.Native.Html.Controls.RectangleElement.Draw(CSHTML5.Native.Html.Controls.ElementStyle,System.Object,System.Double,System.Double)">
            <summary>
            Draws the rectangle
            </summary>
            <param name="CurrentDrawingStyle">Draw style used for last element (can allow optimizations, null if unknown)</param>
            <param name="jsContext2d">Canvas 2d javascript context</param>
            <param name="xParent">X position of the parent element</param>
            <param name="yParent">Y position of the parent element</param>
            <returns>Draw style used for this element (can be null)</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:CSHTML5.Native.Html.Controls.TextElement" -->
        <member name="F:CSHTML5.Native.Html.Controls.TextElement.Text">
            <summary>
            Text value
            </summary>
        </member>
        <member name="F:CSHTML5.Native.Html.Controls.TextElement.Font">
            <summary>
            Font of the text, in javascript format (eg. "20px Arial")
            </summary>
        </member>
        <member name="M:CSHTML5.Native.Html.Controls.TextElement.#ctor">
            <summary>
            Default text constructor (Black, 12px, Georgia)
            </summary>
        </member>
        <member name="M:CSHTML5.Native.Html.Controls.TextElement.Draw(CSHTML5.Native.Html.Controls.ElementStyle,System.Object,System.Double,System.Double)">
            <summary>
            Draws the text
            </summary>
            <param name="currentDrawingStyle">Draw style used for last element (can allow optimizations, null if unknown)</param>
            <param name="jsContext2d">Canvas 2d javascript context</param>
            <param name="xParent">X position of the parent element</param>
            <param name="yParent">Y position of the parent element</param>
            <returns>Draw style used for this element (can be null)</returns>
        </member>
        <member name="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs">
            <summary>
            Provides event data for pointer message events related to specific user interface
            elements, such as PointerPressed.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.RoutedEventArgs">
            <summary>
            Contains state information and event data associated with a routed event.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.RoutedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the RoutedEventArgs class.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.RoutedEventArgs.OriginalSource">
            <summary>
            Gets a reference to the object that raised the event.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.RoutedEventArgs.INTERNAL_OriginalJSEventArg">
            <summary>
            (Optional) Gets the original javascript event arg.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Input.PointerRoutedEventArgs.GetCurrentPoint(Windows.UI.Xaml.UIElement)">
            <summary>
            Returns the pointer position for this event occurrence, optionally evaluated
            against a coordinate origin of a supplied UIElement.
            </summary>
            <param name="relativeTo">
            Any UIElement-derived object that is connected to the same object tree. To
            specify the object relative to the overall coordinate system, use a relativeTo value
            of null.
            </param>
            <returns>
            A PointerPoint value that represents the pointer point associated with this
            event. If null was passed as relativeTo, the coordinates are in the frame
            of reference of the overall window. If a non-null relativeTo was passed,
            the coordinates are relative to the object referenced by relativeTo.
            </returns>
        </member>
        <member name="P:Windows.UI.Xaml.Input.PointerRoutedEventArgs.Handled">
            <summary>
            Gets or sets a value that marks the routed event as handled, and prevents
            most handlers along the event route from handling the same event again.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Input.PointerRoutedEventArgs.KeyModifiers">
            <summary>
            Gets a value that indicates which key modifiers were active at the time that
            the pointer event was initiated.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Input.PointerRoutedEventArgs.Pointer">
            <summary>
            Gets a reference to a pointer token.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Input.PointerRoutedEventArgs.ClickCount">
            <summary>
            Gets the number of times the button was clicked.
            </summary>
        </member>
        <member name="T:CSHTML5.Native.Html.Printing.PrintManager">
            <summary>
            Provides methods to print.
            </summary>
        </member>
        <member name="M:CSHTML5.Native.Html.Printing.PrintManager.Print">
            <summary>
            Make the browser Print dialog appear.
            </summary>
        </member>
        <member name="M:CSHTML5.Native.Html.Printing.PrintManager.SetPrintArea(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Define the element that will be printed when pressing Ctrl+P or when clicking the Print command in the browser menu.
            </summary>
            <param name="element">An element in in the Visual Tree.</param>
        </member>
        <member name="M:CSHTML5.Native.Html.Printing.PrintManager.ResetPrintArea">
            <summary>
            Revert to the default print area, which is the area that will be printed when pressing Ctrl+P or when clicking the Print command in the browser menu.
            </summary>
        </member>
        <member name="M:CSHTML5.Native.Html.Printing.PrintManager.Print(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Print a specific element.
            </summary>
            <param name="element">The element to print.</param>
        </member>
        <member name="T:CSHTML5.Profiler">
            <summary>
            Provides static methods for profiling performance in the browser.
            </summary>
        </member>
        <member name="M:CSHTML5.Profiler.StartMeasuringTime">
            <summary>
            Allows measuring the cumulative time between the start and the end of the measure. It returns a number that you need to pass to the "StopMeasuringTime()" method.
            </summary>
            <returns>A number that you need to pass to the "StopMeasuringTime()" method.</returns>
        </member>
        <member name="M:CSHTML5.Profiler.StopMeasuringTime(System.String,System.Double)">
            <summary>
            Allows measuring the time between the start and the end of the measure. The result is "accrued", meaning that it is cumulative if executed multiple times. You can see the result by calling "ViewProfilerResults()" from the browser console.
            </summary>
            <param name="measureDescription">An arbitrary text to describe the measure.</param>
            <param name="numberReturnedByTheStartMeasuringTimeMethod">The number returned by the call to "StartMeasuringTime()". It is used to calculate the time elapsed between the start and the end of the measure.</param>
        </member>
        <member name="M:DotNetForHtml5.Core.INTERNAL_PopupsManager.IsPopupParentVisibleOnScreen(Windows.UI.Xaml.Controls.Primitives.Popup)">
            <summary>
            Determines whether the parent of a popup is visible on screen, and if it is the foremost element (ie. not covered by another element). This is useful for example to hide the TextBox validation tooltips when they become hidden after scrolling (cf. ZenDesk 628).
            </summary>
            <param name="popup">The popup.</param>
            <returns>Returns True if the parent of the popup is visible on screen and it is the foremost element, False otherwise.</returns>
        </member>
        <member name="M:DotNetForHtml5.Core.INTERNAL_PopupsManager.IsElementVisibleOnScreen(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Determines whether an element is visible on screen, and if it is the foremost element (ie. it is not covered by another element). This is useful for example to hide the TextBox validation tooltips when they become hidden after scrolling (cf. ZenDesk 628).
            </summary>
            <param name="element">The element to check.</param>
            <returns>Returns True if the element is visible on screen and it is the foremost element, False otherwise.</returns>
        </member>
        <member name="T:DotNetForHtml5.Core.INTERNAL_VisibilityChangedNotifier">
            <summary>
            The goal of this class is to allow elements to subscribe
            to the Visibility_Changed event of any of its ancestors.
            It is useful for example to work around the fact that
            drawing on a hidden html canvas (in the XAML "Path"
            control for example) is not possible, so if a html
            canvas is hidden, we subscribe to the Visibility_Changed
            event of its ancestors, so as to refresh it when it becomes
            visible.
            </summary>
        </member>
        <member name="M:DotNetForHtml5.Core.INTERNAL_VisibilityChangedNotifier.IsElementVisible(Windows.UI.Xaml.UIElement)">
            <summary>
            Determines whether an element is visible. It can be hidden if any of the
            ancestors have the "Visibility" property set to "Collapsed".
            </summary>
            <param name="element">UI Element</param>
            <returns>True if the element is visible in the visual tree, false otherwise.</returns>
        </member>
        <member name="T:System.ServiceProvider">
            <summary>
            Defines a mechanism for retrieving a service object; that is, an object that
            provides custom support to other objects.
            </summary>
            <exclude/>
        </member>
        <member name="M:System.ServiceProvider.#ctor(System.Object,Windows.UI.Xaml.DependencyProperty,System.Collections.Generic.List{System.Object})">
            <summary>
            Constructor for the  ServiceProvider class
            </summary>
            <param name="element"></param>
            <param name="property"></param>
            <param name="parents"></param>
        </member>
        <member name="M:System.ServiceProvider.GetService(System.Type)">
            <summary>
            Gets the service object of the specified type.
            </summary>
            <param name="serviceType">An object that specifies the type of service object to get.</param>
            <returns>
            A service object of type serviceType.-or- null if there is no service object
            of type serviceType.
            </returns>
        </member>
        <member name="P:System.ServiceProvider.Parents">
            <summary>
            Gets or sets the List of UIElement that are parents of the element.
            </summary>
        </member>
        <member name="M:DotNetForHtml5.Core.INTERNAL_HtmlDomManager.FindElementInHostCoordinates_UsedBySimulatorToo(System.Double,System.Double)">
            <summary>
            Retrieves an object that is located within a specified point of an object's coordinate space.
            </summary>
            <param name="intersectingPoint">The point to use as the determination point.</param>
            <returns>The UIElement object that is determined to be located
            in the visual tree composition at the specified point.</returns>
        </member>
        <member name="M:DotNetForHtml5.Core.INTERNAL_VisualTreeManager.GetChildOfType``1(Windows.UI.Xaml.UIElement)">
            <summary>
            Returns the first child of the specified type (recursively).
            </summary>
            <typeparam name="T">The type to lookup.</typeparam>
            <param name="parent">The parent element.</param>
            <returns>The first child of the specified type.</returns>
        </member>
        <member name="T:Windows.UI.Xaml.Markup.INameScope">
            <summary>
            Defines a contract for how names of elements should be accessed within a
            particular XAML namescope, and how to enforce uniqueness of names within
            that XAML namescope.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Markup.INameScope.FindName(System.String)">
            <summary>
            Returns an object that has the provided identifying name.
            </summary>
            <param name="name">The name identifier for the object being requested.</param>
            <returns>The object, if found. Returns null if no object of that name was found.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Markup.INameScope.RegisterName(System.String,System.Object)">
            <summary>
            Registers the provided name into the current XAML namescope.
            </summary>
            <param name="name">The name to register.</param>
            <param name="scopedElement">The specific element that the provided name refers to.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Markup.INameScope.UnregisterName(System.String)">
            <summary>
            Unregisters the provided name from the current XAML namescope.
            </summary>
            <param name="name">The name to unregister.</param>
        </member>
        <member name="T:System.IO.IsolatedStorage.IsolatedStorageSettings">
            <summary>
            Provides a System.Collections.Generic.Dictionary&lt;TKey,TValue&gt; that stores
            key-value pairs in isolated storage.
            </summary>
            <example>
            Here is how to use the IsolatedStorageSettings:
            <code lang="C#">
            //Write in the IsolatedStorageSettings:
            IsolatedStorageSettings.ApplicationSettings["someKey"] = "someValue";
            //Read from it:
            string value;
            string myString = IsolatedStorageSettings.ApplicationSettings.TryGetValue("someKey", out value);
            </code>
            </example>
        </member>
        <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.Add(System.String,System.Object)">
            <summary>
            Adds an entry to the dictionary for the key-value pair.
            </summary>
            <param name="key">The key for the entry to be stored.</param>
            <param name="value">The value to be stored.</param>
        </member>
        <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.Clear">
            <summary>
            Resets the count of items stored in System.IO.IsolatedStorage.IsolatedStorageSettings
            to zero and releases all references to elements in the collection.
            </summary>
        </member>
        <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.Contains(System.String)">
            <summary>
            Determines if the application settings dictionary contains the specified
            key.
            </summary>
            <param name="key">The key for the entry to be located.</param>
            <returns>true if the dictionary contains the specified key; otherwise, false.</returns>
        </member>
        <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.Remove(System.String)">
            <summary>
            Removes the entry with the specified key.
            </summary>
            <param name="key">The key for the entry to be deleted.</param>
            <returns>true if the specified key was removed; otherwise, false.</returns>
        </member>
        <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.TryGetValue``1(System.String,``0@)">
            <summary>
            Gets a value for the specified key.
            </summary>
            <typeparam name="T">The System.Type of the value parameter.</typeparam>
            <param name="key">The key of the value to get.</param>
            <param name="value">
            When this method returns, the value associated with the specified key if
            the key is found; otherwise, the default value for the type of the value
            parameter. This parameter is passed uninitialized.
            </param>
            <returns>true if the specified key is found; otherwise, false.</returns>
        </member>
        <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.ApplicationSettings">
            <summary>
            Gets an instance of System.IO.IsolatedStorage.IsolatedStorageSettings that
            contains the contents of the application's System.IO.IsolatedStorage.IsolatedStorageFile,
            scoped at the application level, or creates a new instance of System.IO.IsolatedStorage.IsolatedStorageSettings
            if one does not exist.
            </summary>
        </member>
        <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.Count">
            <summary>
            Gets the number of key-value pairs that are stored in the dictionary.
            </summary>
        </member>
        <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.Keys">
            <summary>
            Gets a collection that contains the keys in the dictionary.
            </summary>
        </member>
        <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.Values">
            <summary>
            Gets a collection that contains the values in the dictionary.
            </summary>
        </member>
        <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.Item(System.String)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="key">The key of the item to get or set.</param>
            <returns>
            The value associated with the specified key. If the specified key is not
            found, a get operation throws a System.Collections.Generic.KeyNotFoundException,
            and a set operation creates a new element that has the specified key.
            </returns>
        </member>
        <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettingsForCSharp.#cctor">
            <summary>
                Its static constructor.
            </summary>
        </member>
        <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettingsForCSharp.#ctor">
            <summary>
                Its a private constructor.
            </summary>
        </member>
        <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettingsForCSharp.Save">
            <summary>
                It serializes dictionary in binary format and stores it in a binary file.
            </summary>
        </member>
        <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettingsForCSharp.Instance">
            <summary>
                Its a static singleton instance.
            </summary>
        </member>
        <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettingsForCSharp.Item(System.String,System.Object)">
            <summary>
                It Checks if Dictionary object has item corresponding to passed key,
                if True then it returns that object else it returns default value.
            </summary>
            <param name="key"></param>
            <param name="defaultvalue"></param>
            <returns></returns>
        </member>
        <member name="T:System.ServiceModel.CSHTML5_ClientBase`1">
             <summary>
             Provides the base implementation used to create Windows Communication Foundation
             (WCF) client objects that can call services.
             </summary>
             <typeparam name="TChannel">The channel to be used to connect to the service.</typeparam>
             <example>
             Here is an example on how you can use a WebService to receive data:
             <code lang="C#">
             //We create a new instance of the ServiceClient
             MyServiceClient soapClient =
                 new MyServiceClient(
                     new BasicHttpBinding(),
                     new EndpointAddress(
                         new Uri("http://MyServiceAddress.com/MyService.svc")));
            
             //We call the method that will give us the data we want:
             var result = await soapClient.GetToDosAsync(_ownerId);
             //We get the data from the response:
             ToDoItem[] todos = result.Body.GetToDosResult;
             </code>
             Here is another example that shows how you can send data to a WebService:
             <code lang="C#">
             //We create an item to send to the WebService:
             ToDoItem todo = new ToDoItem()
             {
                 Description = MyTextBox.Text,
                 Id = Guid.NewGuid(),
             };
            
             //We create a new instance of the ServiceClient
             MyServiceClient soapClient =
                 new MyServiceClient(
                     new BasicHttpBinding(),
                     new EndpointAddress(
                         new Uri("http://MyServiceAddress.com/MyService.svc")));
            
             //We send the data by calling a method implemented for that purpose in the WebService:
             await soapClient.AddOrUpdateToDoAsync(todo);
             </code>
             </example>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.ServiceModel.CSHTML5_ClientBase`1.#ctor" -->
        <!-- Badly formed XML comment ignored for member "M:System.ServiceModel.CSHTML5_ClientBase`1.#ctor(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:System.ServiceModel.CSHTML5_ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" -->
        <!-- Badly formed XML comment ignored for member "M:System.ServiceModel.CSHTML5_ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)" -->
        <!-- Badly formed XML comment ignored for member "M:System.ServiceModel.CSHTML5_ClientBase`1.#ctor(System.String,System.String)" -->
        <member name="T:System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller">
            <summary>
            Provides an API to call web methods defined in a WebService
            </summary>
        </member>
        <member name="M:System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.#ctor(System.String)">
            <summary>
            Constructor for the WebMethodsCaller's class
            </summary>
            <param name="addressOfService">The address of the WebService</param>
        </member>
        <member name="M:System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.CallWebMethodAsync``1(System.String,System.Type,System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Asynchronously calls a WebMethod.
            </summary>
            <typeparam name="T">The return type of the WebMethod</typeparam>
            <param name="methodName">The name of the WebMethod</param>
            <param name="interfacetype">The Type of the interface</param>
            <param name="methodReturnType">The return Type of the method</param>
            <param name="args">The addtional arguments for the method</param>
            <returns>The result of the call of the method.</returns>
        </member>
        <member name="M:System.ServiceModel.CSHTML5_ClientBase`1.WebMethodsCaller.CallWebMethod(System.String,System.Type,System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Calls a WebMethod
            </summary>
            <param name="methodName">The name of the Method</param>
            <param name="interfacetype">The Type of the interface</param>
            <returns>The result of the call of the method.</returns>
        </member>
        <member name="T:System.Windows.Browser.HttpUtility">
            <summary>
            Provides methods for encoding and decoding HTML and URL strings.
            </summary>
        </member>
        <member name="M:System.Windows.Browser.HttpUtility.UrlDecode(System.String)">
            <summary>
            Converts a string that has been encoded for transmission in a URL into a
            decoded string.
            </summary>
            <param name="url">A URL-encoded string to decode.</param>
            <returns>A decoded string.</returns>
        </member>
        <member name="M:System.Windows.Browser.HttpUtility.UrlEncode(System.String)">
            <summary>
            Converts a text string into a URL-encoded string.
            </summary>
            <param name="url">The text to URL-encode.</param>
            <returns>A URL-encoded string.</returns>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Dock">
            <summary>
            Specifies the Dock position of a child element that
            is inside a DockPanel.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Dock.Left">
            <summary>
            A child element that is positioned on the left side of the DockPanel.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Dock.Top">
            <summary>
            A child element that is positioned at the top of the DockPanel.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Dock.Right">
            <summary>
            A child element that is positioned on the right side of the DockPanel.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Dock.Bottom">
            <summary>
            A child element that is positioned at the bottom of the DockPanel.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.DockPanel">
            <summary>
            Defines an area where you can arrange child elements either horizontally
            or vertically, relative to each other.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Panel">
            <summary>
            Provides a base class for all Panel elements. Use Panel elements to position
            and arrange child objects in a UI page.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Panel.BackgroundProperty">
            <summary>
            Identifies the Background dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Panel.Background">
            <summary>
            Gets or sets a Brush that is used to fill the panel.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Panel.Children">
            <summary>
            Gets the collection of child elements of the panel.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DockPanel.LastChildFillProperty">
            <summary>
            Identifies the DockPanel.LastChildFill dependency
            property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DockPanel.GetDock(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the value of the DockPanel.Dock attached property
            for a specified System.Windows.UIElement.
            </summary>
            <param name="element">The element from which the property value is read.</param>
            <returns>The DockPanel.Dock property value for the element.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DockPanel.SetDock(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.Controls.Dock)">
            <summary>
            Sets the value of the DockPanel.Dock attached property
            to a specified element.
            </summary>
            <param name="element">The element to which the attached property is written.</param>
            <param name="dock">The needed Dock value.</param>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DockPanel.DockProperty">
            <summary>
            Identifies the DockPanel.Dock attached property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DockPanel.LastChildFill">
            <summary>
            Gets or sets a value that indicates whether the last child element within
            a DockPanel stretches to fill the remaining available
            space.
            </summary>
        </member>
        <member name="T:System.INTERNAL_WebRequestHelper_SimulatorOnly">
            <summary>
            Gives access to methods to help using WebRequests.
            </summary>
        </member>
        <member name="M:System.INTERNAL_WebRequestHelper_SimulatorOnly.#ctor">
            <summary>
            Initializes a new instance of the INTERNAL_WebRequestHelper class.
            </summary>
        </member>
        <member name="M:System.INTERNAL_WebRequestHelper_SimulatorOnly.MakeRequest_CSharpVersion(System.Uri,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Makes a synchronous or asynchronous request at the specified uri, using the specified method, with the specified headers and body, and calls the callbackMethod.
            </summary>
            <param name="address">the uri that identifies the Internet resource.</param>
            <param name="headers">
            A dictionary containing the headers to put in the method.
            The pairs key/values in the dictionary correspond to the pairs key/value in the headers.
            </param>
            <param name="body">The body of the request.</param>
            <param name="callbackMethod">The method to be called after the request has been made.</param>
            <returns>The result of the request as a string.</returns>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Frame">
            <summary>
            Represents a control that supports navigation to and from Silverlight pages.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ContentControl">
            <summary>
            Represents a control with a single piece of content. Controls such as Button,
            CheckBox, and ScrollViewer directly or indirectly inherit from this class.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Control">
            <summary>
            Represents the base class for UI elements that use a ControlTemplate to define
            their appearance.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Control.INTERNAL_DoNotApplyControlTemplate">
            <summary>
            Derived classes can set this flag in their constructor to prevent the "Template" property from being applied.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Control.DisableBaseControlHandlingOfVisualStates">
            <summary>
            Derived classes can set this flag to True in their constructor in order to disable the "GoToState" calls of this class related to PointerOver/Pressed/Disabled, and handle them by themselves. An example is the ToggleButton control, which contains states such as "CheckedPressed", "CheckedPointerOver", etc.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Control.BackgroundProperty">
            <summary>
            Identifies the Background dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Control.BorderBrushProperty">
            <summary>
            Identifies the BorderBrush dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Control.BorderThicknessProperty">
            <summary>
            Identifies the BorderThickness dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Control.FontWeightProperty">
            <summary>
            Identifies the FontWeight dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Control.FontStyleProperty">
            <summary>
            Identifies the FontStyle dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Control.ForegroundProperty">
            <summary>
            Identifies the Foreground dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Control.FontFamilyProperty">
            <summary>
            Identifies the FontFamily dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Control.FontSizeProperty">
            <summary>
            Identifies the FontSize dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Control.PaddingProperty">
            <summary>
            Identifies the Padding dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Control.HorizontalContentAlignmentProperty">
            <summary>
            Identifies the HorizontalContentAlignment dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Control.VerticalContentAlignmentProperty">
            <summary>
            Identifies the VerticalContentAlignment dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Control.TemplateProperty">
            <summary>
            Identifies the Template dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Control.GetTemplateChild(System.String)">
            <summary>
            Retrieves the named element in the instantiated ControlTemplate visual tree.
            </summary>
            <param name="childName">The name of the element to find.</param>
            <returns>
            The named element from the template, if the element is found. Can return
            null if no element with name childName was found in the template.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Control.TryFindTemplateChildFromName(System.String)">
            <summary>
            Finds the UIElement with the specified name. Returns null if not found.
            </summary>
            <param name="name">The name to look for.</param>
            <returns>The object with the specified name if any; otherwise null.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Control.Focus">
            <summary>
            Attempts to set the focus on the control.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Control.CreateDomElementForControlTemplate(System.Object,System.Object@)">
            <summary>
            This method is here to avoid creating the dom for a control which has a Template.
            It creates the basic dom elements in which we will be able to add the template.
            </summary>
            <param name="parentRef">The parent of the FrameworkElement</param>
            <param name="domElementWhereToPlaceChildren">The dom element where the FrameworkElement's template constructed children will be added.</param>
            <returns>The "root" dom element of the FrameworkElement.</returns>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Control.Background">
            <summary>
            Gets or sets a brush that provides the background of the control.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Control.BorderBrush">
            <summary>
            Gets or sets a brush that describes the border background of a control.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Control.BorderThickness">
            <summary>
            Gets or sets the thickness of the border.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Control.FontWeight">
            <summary>
            Gets or sets the thickness of the specified font.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Control.FontStyle">
            <summary>
            Gets or sets the style in which the text is rendered.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Control.Foreground">
            <summary>
            Gets or sets a brush that describes the foreground color.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Control.FontFamily">
            <summary>
            Gets or sets the font used to display text in the control.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Control.FontSize">
            <summary>
            Gets or sets the size of the text in this control.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Control.Padding">
            <summary>
            Gets or sets the distance between the border and its child object.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Control.HorizontalContentAlignment">
            <summary>
            Gets or sets the horizontal alignment of the control's content.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Control.VerticalContentAlignment">
            <summary>
            Gets or sets the vertical alignment of the control's content.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Control.TabIndex">
            <summary>
            Gets or sets a value that determines the order in which elements receive
            focus when the user navigates through controls by pressing the Tab key.
            The default value is MaxValue
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Control.Template">
            <summary>
            Gets or sets a control template.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Control.HasTemplate">
            <summary>
            Returns a value that indicates whether the control is to be rendered with a ControlTemplate.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ContentControl.ContentProperty">
            <summary>
            Identifies the Content dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ContentControl.ContentTemplateProperty">
            <summary>
            Identifies the ContentTemplate dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ContentControl.OnContentChanged(System.Object,System.Object)">
            <summary>
            Invoked when the value of the Content property changes.
            </summary>
            <param name="oldContent">The old value of the Content property.</param>
            <param name="newContent">The new value of the Content property.</param>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ContentControl.Content">
            <summary>
            Gets or sets the content of a ContentControl.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ContentControl.ContentTemplate">
            <summary>
            Gets or sets the data template that is used to display the content of the
            ContentControl.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Frame.#ctor">
            <summary>
            Initializes a new instance of the System.Windows.Controls.Frame class.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Frame.CanGoBackProperty">
            <summary>
            Identifies the System.Windows.Controls.Frame.CanGoBack dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Frame.CanGoForwardProperty">
            <summary>
            Identifies the System.Windows.Controls.Frame.CanGoForward dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Frame.SourceProperty">
            <summary>
            Identifies the System.Windows.Controls.Frame.Source dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Frame.JournalOwnershipProperty">
            <summary>
            Identifies the System.Windows.Controls.Frame.JournalOwnership dependency
            property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Frame.UriMapperProperty">
            <summary>
            Identifies the System.Windows.Controls.Frame.UriMapper dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Frame.GoBack">
            <summary>
            Navigates to the most recent entry in the back navigation history, or throws
            an exception if no entry exists in back navigation.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Frame.GoForward">
            <summary>
            Navigates to the most recent entry in the forward navigation history, or
            throws an exception if no entry exists in forward navigation.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Frame.Navigate(System.Uri)">
            <summary>
            Navigates to the content specified by the uniform resource identifier (URI).
            </summary>
            <param name="source">The URI representing a page to display in the frame.</param>
            <returns>true if the navigation started successfully; otherwise, false.</returns>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Frame.CanGoBack">
            <summary>
            Gets a value that indicates whether there is at least one entry in the back
            navigation history.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Frame.CanGoForward">
            <summary>
            Gets a value that indicates whether there is at least one entry in the forward
            navigation history.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Frame.Source">
            <summary>
            Gets or sets the uniform resource identifier (URI) of the current content
            or the content that is being navigated to.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Frame.JournalOwnership">
            <summary>
            Gets or sets whether a frame is responsible for managing its own navigation
            history, or whether it integrates with the Web browser journal.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Frame.UriMapper">
            <summary>
            Gets or sets the object to manage converting a uniform resource identifier
            (URI) to another URI for this frame.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.Frame.Navigated">
            <summary>
            Occurs when the content that is being navigated to has been found and is
            available.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Frame.FrameCache">
            StopLoading()
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Frame.FrameCache.Add(System.Object,System.Uri)">
            <summary>
            Adds the item to the cache, and handles the cases where:
            - it is the first item,
            - we add it to the end
            - we add it somewhere else.
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Frame.FrameCacheItem.RemoveNext">
            <summary>
            removes the next element(s) if any.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Label">
            <summary>
            Represents the text label for a control and provides support for access keys.
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.AttachableCollection`1">
            <summary>
            Represents a collection of IAttachedObject with a shared AssociatedObject
            and provides change notifications to its contents when that AssociatedObject
            changes.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:System.Windows.Interactivity.IAttachedObject">
            <summary>
            An interface for an object that can be attached to another object.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.IAttachedObject.Attach(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Attaches to the specified object.
            </summary>
            <param name="dependencyObject">The object to attach to.</param>
        </member>
        <member name="M:System.Windows.Interactivity.IAttachedObject.Detach">
            <summary>
            Detaches this instance from its associated object.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.IAttachedObject.AssociatedObject">
            <summary>
            Gets the associated object.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.Attach(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Attaches to the specified object.
            </summary>
            <param name="dependencyObject">The object to attach to.</param>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.Detach">
            <summary>
            Detaches this instance from its associated object.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.OnAttached">
            <summary>
            Called immediately after the collection is attached to an AssociatedObject.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.OnDetaching">
            <summary>
            Called when the collection is being detached from its AssociatedObject, but
            before it has actually occurred.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.AttachableCollection`1.AssociatedObject">
            <summary>
            The object on which the collection is hosted.
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.Behavior">
            <summary>
            Encapsulates state information and zero or more ICommands into an attachable
            object.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.Attach(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Attaches to the specified object.
            </summary>
            <param name="dependencyObject">The object to attach to.</param>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.Detach">
            <summary>
            Detaches this instance from its associated object.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.OnAttached">
            <summary>
            Called after the behavior is attached to an AssociatedObject.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.OnDetaching">
            <summary>
            Called when the behavior is being detached from its AssociatedObject, but
            before it has actually occurred.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.Behavior.AssociatedObject">
            <summary>
            Gets the object to which this behavior is attached.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.Behavior.AssociatedType">
            <summary>
            The type to which this behavior can be attached.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:System.Windows.Interactivity.Behavior`1" -->
        <!-- Badly formed XML comment ignored for member "M:System.Windows.Interactivity.Behavior`1.#ctor" -->
        <!-- Badly formed XML comment ignored for member "P:System.Windows.Interactivity.Behavior`1.AssociatedObject" -->
        <member name="T:System.Windows.Interactivity.BehaviorCollection">
            <summary>
            Represents a collection of behaviors with a shared AssociatedObject and provides
            change notifications to its contents when that AssociatedObject changes.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.OnAttached">
            <summary>
            Called immediately after the collection is attached to an AssociatedObject.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.OnDetaching">
            <summary>
            Called when the collection is being detached from its AssociatedObject, but
            before it has actually occurred.
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.Interaction">
            <summary>
            Static class that owns the Triggers and Behaviors attached properties. Handles
            propagation of AssociatedObject change notifications.
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.Interaction.BehaviorsProperty">
            <summary>
            This property is used as the internal backing store for the public Behaviors
            attached property.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.GetBehaviors(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the System.Windows.Interactivity.BehaviorCollection associated with
            a specified object.
            </summary>
            <param name="obj">The object from which to retrieve the System.Windows.Interactivity.BehaviorCollection.</param>
            <returns>
            A System.Windows.Interactivity.BehaviorCollection containing the behaviors
            associated with the specified object.
            </returns>
        </member>
        <member name="T:Windows.UI.Xaml.Navigation.JournalOwnership">
            <summary>
            Specifies the type of journal used by the frame.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Navigation.JournalOwnership.Automatic">
            <summary>
            If the System.Windows.Controls.Frame control is a top-level frame, it integrates
            with the browser journal; otherwise, it maintains its own journal.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Navigation.JournalOwnership.OwnsJournal">
            <summary>
            The System.Windows.Controls.Frame maintains its own journal. This option
            can be used with any System.Windows.Controls.Frame.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Navigation.JournalOwnership.UsesParentJournal">
            <summary>
            The System.Windows.Controls.Frame integrates with the browser journal. This
            option can be used only with a top-level System.Windows.Controls.Frame; otherwise,
            an exception is thrown.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Navigation.UriMapper">
            <summary>
            Converts a uniform resource identifier (URI) into a new URI based on the
            rules of a matching object specified in a collection of mapping objects.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Navigation.UriMapperBase">
            <summary>
            Represents the base class for classes that convert a requested uniform resource
            identifier (URI) into a new URI based on mapping rules.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Navigation.UriMapperBase.MapUri(System.Uri)">
            <summary>
            When overridden in a derived class, converts a requested uniform resource
            identifier (URI) to a new URI.</summary>
            <param name="uri">The original URI value to be mapped to a new URI.</param>
            <returns>A URI to use for the request instead of the value in the uri parameter.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Navigation.UriMapper.MapUri(System.Uri)">
            <summary>
            Converts a specified uniform resource identifier (URI) into a new URI based
            on the rules of a matching object in the System.Windows.Navigation.UriMapper.UriMappings
            collection.
            </summary>
            <param name="uri">Original URI value to be converted to a new URI.</param>
            <returns>
            A URI to use for handling the request instead of the value of the uri parameter.
            If no object in the System.Windows.Navigation.UriMapper.UriMappings collection
            matches uri, the original value for uri is returned.
            </returns>
        </member>
        <member name="P:Windows.UI.Xaml.Navigation.UriMapper.UriMappings">
            <summary>
            Gets a collection of objects that are used to convert a uniform resource
            identifier (URI) into a new URI.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Navigation.UriMapping">
            <summary>
            Defines the pattern for converting a requested uniform resource identifier
            (URI) into a new URI.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Navigation.UriMapping.MappedUriProperty">
            <summary>
            Identifies the System.Windows.Navigation.UriMapping.MappedUri dependency property
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Navigation.UriMapping.UriProperty">
            <summary>
            Identifies the System.Windows.Navigation.UriMapping.Uri dependency property
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Navigation.UriMapping.MapUri(System.Uri)">
            <summary>
            Converts the specified uniform resource identifier (URI) to a new URI, if
            the specified URI matches the defined template for converting.
            </summary>
            <param name="uri">The URI to convert.</param>
            <returns>The URI that has been converted or null if the URI cannot be converted.</returns>
        </member>
        <member name="P:Windows.UI.Xaml.Navigation.UriMapping.MappedUri">
            <summary>
            Gets or sets the uniform resource identifier (URI) that is navigated to instead
            of the originally requested URI.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Navigation.UriMapping.Uri">
            <summary>
            Gets or sets the pattern to match when determining if the requested uniform
            resource identifier (URI) is converted to a mapped URI.
            </summary>
        </member>
        <member name="T:System.Windows.Deployment">
            <summary>
            Provides application part and localization information in the application
            manifest when deploying a Silverlight-based application.
            </summary>
        </member>
        <member name="P:System.Windows.Deployment.Current">
            <summary>
            Gets the current System.Windows.Deployment object.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.RadialGradientBrush">
            <summary>
            Paints an area with a radial gradient. A focal point defines the beginning
            of the gradient, and a circle defines the end point of the gradient.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.GradientBrush">
            <summary>
            An abstract class that describes a gradient, composed of gradient stops.
            Classes that derive from GradientBrush describe different ways of interpreting
            gradient stops.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Brush">
            <summary>
            Defines objects used to paint graphical objects. Classes that derive from
            Brush describe how the area is painted.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Brush.OpacityProperty">
            <summary>
            Identifies the Opacity dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Brush.Opacity">
            <summary>
            Gets or sets the degree of opacity of a Brush.
            The value of the Opacity property is expressed as a value between 0 and 1.0.
            The default value is 1.0, which is full opacity. 0 is transparent opacity.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.GradientBrush.GradientStopsProperty">
            <summary>
            Identifies the GradientStops dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.GradientBrush.MappingModeProperty">
            <summary>
            Identifies the MappingMode dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.GradientBrush.SpreadMethodProperty">
            <summary>
            Identifies the SpreadMethod dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.GradientBrush.GradientStops">
            <summary>
            Gets or sets the brush's gradient stops, which is a collection of the GradientStop
            objects associated with the brush, each of which specifies a color and an offset
            along the brush's gradient axis. The default is an empty GradientStopCollection.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.GradientBrush.MappingMode">
            <summary>
            Gets or sets a BrushMappingMode enumeration value that specifies whether
            the positioning coordinates of the gradient brush are absolute or relative
            to the output area.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.GradientBrush.SpreadMethod">
            <summary>
            Gets or sets the type of spread method that specifies how to draw a gradient
            that starts or ends inside the bounds of the object to be painted.
            The default is Pad.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.RadialGradientBrush.#ctor">
            <summary>
            Initializes a new instance of the System.Windows.Media.RadialGradientBrush
            class.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.RadialGradientBrush.#ctor(Windows.UI.Xaml.Media.GradientStopCollection)">
            <summary>
            Initializes a new instance of the System.Windows.Media.RadialGradientBrush
            class that has the specified gradient stops.
            </summary>
            <param name="gradientStopCollection">The gradient stops to set on this brush.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Media.RadialGradientBrush.#ctor(Windows.UI.Color,Windows.UI.Color)">
            <summary>
            Initializes a new instance of the System.Windows.Media.RadialGradientBrush
            class with the specified start and stop colors.
            </summary>
            <param name="startColor">
            Color value at the focus (System.Windows.Media.RadialGradientBrush.GradientOrigin)
            of the radial gradient.
            </param>
            <param name="endColor">Color value at the outer edge of the radial gradient.</param>
        </member>
        <member name="F:Windows.UI.Xaml.Media.RadialGradientBrush.CenterProperty">
            <summary>
            Identifies the System.Windows.Media.RadialGradientBrush.Center dependency
            property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.RadialGradientBrush.GradientOriginProperty">
            <summary>
            Identifies the System.Windows.Media.RadialGradientBrush.GradientOrigin dependency
            property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.RadialGradientBrush.RadiusXProperty">
            <summary>
            Identifies the System.Windows.Media.RadialGradientBrush.RadiusX dependency
            property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.RadialGradientBrush.RadiusYProperty">
            <summary>
            Identifies the System.Windows.Media.RadialGradientBrush.RadiusY dependency
            property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.RadialGradientBrush.Center">
            <summary>
            Gets or sets the center of the outermost circle of the radial gradient.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.RadialGradientBrush.GradientOrigin">
            <summary>
            Gets or sets the location of the two-dimensional focal point that defines
            the beginning of the gradient.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.RadialGradientBrush.RadiusX">
            <summary>
            Gets or sets the horizontal radius of the outermost circle of the radial
            gradient.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.RadialGradientBrush.RadiusY">
            <summary>
            Gets or sets the vertical radius of the outermost circle of a radial gradient.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Content.ActualHeight">
            <summary>
            Gets the browser-determined height of the content area.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Content.ActualWidth">
            <summary>
            Gets the browser-determined width of the Silverlight content area.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Content.IsFullScreen">
            <summary>
            Gets or sets a value that indicates whether the page is displaying in full-screen mode.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Host.Content">
            <summary>
            Gets the "Content" sub-object of this Host.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.WebView">
            <summary>
            Provides a control that hosts an HTML page in an app using an iframe.
            Note: some websites explicitly forbid being embedded in an iframe.
            Note: to embed a piece of HTML code without using an iframe, use the HtmlPresenter control instead.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.WebView.SourceProperty">
            <summary>
            Gets or sets the Uniform Resource Identifier (URI) source of the HTML content to display in the control inside an iframe.
            Note: some websites explicitly forbid being embedded in an iframe.
            Note: to embed a piece of HTML code without using an iframe, use the HtmlPresenter control instead.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.WebView.Navigate(System.Uri)">
            <summary>
            Loads the HTML content at the specified Uniform Resource Identifier (URI) inside an iframe.
            Note: some websites explicitly forbid being embedded in an iframe.
            Note: to embed a piece of HTML code without using an iframe, use the HtmlPresenter control instead.
            </summary>
            <param name="source">The Uniform Resource Identifier (URI) to load.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.WebView.NavigateToString(System.String)">
            <summary>
            Displays the specified HTML content inside an iframe.
            Note: to embed a piece of HTML code without using an iframe, use the HtmlPresenter control instead.
            </summary>
            <param name="text">The HTML content to display in the control.</param>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.WebView.Source">
            <summary>
            Gets or sets the Uniform Resource Identifier (URI) source of the HTML content to display in the control inside an iframe.
            Note: some websites explicitly forbid being embedded in an iframe.
            Note: to embed a piece of HTML code without using an iframe, use the HtmlPresenter control instead.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Navigation.NavigatedEventHandler">
            <summary>
            Represents the method that will handle the System.Windows.Navigation.NavigationService.Navigated
            event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The data for the event.</param>
        </member>
        <member name="T:Windows.UI.Xaml.Navigation.NavigationEventArgs">
            <summary>
            Provides data for navigation methods and event handlers that cannot cancel
            the navigation request.</summary>
        </member>
        <member name="M:Windows.UI.Xaml.Navigation.NavigationEventArgs.#ctor(System.Object,System.Uri)">
            <summary>
            Initializes a new instance of the System.Windows.Navigation.NavigationEventArgs
            class, based on content and URI.
            </summary>
            <param name="content">Initializes the System.Windows.Navigation.NavigationEventArgs.Content property.</param>
            <param name="uri">Initializes the System.Windows.Navigation.NavigationEventArgs.Uri property.</param>
        </member>
        <member name="F:Windows.UI.Xaml.Navigation.NavigationEventArgs._content">
            <summary>
            Gets the content of the target being navigated to.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Navigation.NavigationEventArgs._uri">
            <summary>
            Gets the uniform resource identifier (URI) of the target.
            </summary>
        </member>
        <member name="T:System.Windows.Resources.StreamResourceInfo">
            <summary>
            Provides resource stream information for application resources or other packages
            obtained through the System.Windows.Application.GetResourceStream(System.Windows.Resources.StreamResourceInfo,System.Uri)
            method.
            </summary>
        </member>
        <member name="M:System.Windows.Resources.StreamResourceInfo.#ctor">
            <summary>
            Initializes a new instance of the System.Windows.Resources.StreamResourceInfo
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Resources.StreamResourceInfo.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of the System.Windows.Resources.StreamResourceInfo
            class based on a provided stream.
            </summary>
            <param name="stream">The reference stream.</param>
            <param name="contentType">The Multipurpose Internet Mail Extensions (MIME) content type of the stream.</param>
        </member>
        <member name="P:System.Windows.Resources.StreamResourceInfo.ContentType">
            <summary>
            Gets the content type of a stream.
            </summary>
        </member>
        <member name="P:System.Windows.Resources.StreamResourceInfo.Stream">
            <summary>
            Gets the actual stream of the resource.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.RepeatButton">
            <summary>
            Represents a control that raises its Click event repeatedly from the time it is pressed until it is released.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.ButtonBase">
            <summary>
            Represents the base class for all button controls, such as Button, RepeatButton,
            and HyperlinkButton.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.ButtonBase.CommandParameterProperty">
            <summary>
            Identifies the CommandParameter dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.ButtonBase.CommandProperty">
            <summary>
            Identifies the Command dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.ButtonBase.OnClick">
            <summary>
            Raises the Click event
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.ButtonBase.IsPressedProperty">
            <summary>
            Identifies the IsPressed dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.ButtonBase.ClickModeProperty">
            <summary>
            Identifies the ClickMode dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.ButtonBase.CommandParameter">
            <summary>
            Gets or sets the parameter to pass to the <see cref="P:Windows.UI.Xaml.Controls.Primitives.ButtonBase.Command"/> property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.ButtonBase.Command">
            <summary>
            Gets or sets the command to invoke when this button is pressed. 
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.Primitives.ButtonBase.Click">
            <summary>
            Occurs when a button control is clicked.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.ButtonBase.IsPressed">
            <summary>
            Gets a value that indicates whether a ButtonBase is currently in a pressed state.
            The default is false.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.ButtonBase.ClickMode">
            <summary>
            Gets or sets when the Click event occurs. The default value is ClickMode.Release.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.RepeatButton.#ctor">
            <summary>
            Initializes a new instance of the RepeatButton class.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.RepeatButton.DelayProperty">
            <summary>
            Gets or sets the time, in milliseconds, the RepeatButton
            waits when it is pressed before it starts repeating the click action.
            The default is 250.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.RepeatButton.IntervalProperty">
            <summary>
            Gets or sets the time, in milliseconds, between repetitions of the click
            action, as soon as repeating starts. The default is 250.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.RepeatButton.OnClick">
            <summary>
            Raises InvokedAutomationEvent and call the base method to raise the Click event
            </summary>
            <ExternalAPI/>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.RepeatButton.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
                Called when this element loses mouse capture.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.RepeatButton.Delay">
            <summary>
            Gets or sets the time, in milliseconds, the RepeatButton
            waits when it is pressed before it starts repeating the click action.
            The default is 250.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.RepeatButton.Interval">
            <summary>
            Gets or sets the time, in milliseconds, between repetitions of the click
            action, as soon as repeating starts. The default is 250.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.UpDownTextBox">
            <summary>
            Primitive control - TextBox with UpPressed and DownPressed events for use in a NumericUpDown
            to make up and down keys work to increment and decrement the values.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.TextBox">
            <summary>
            Represents a control that can be used to display single-format, multi-line
            text.
            </summary>
            <example>
            <code lang="XAML" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
            <TextBox x:Name="TextBoxName" Text="Some text"/>
            </code>
            <code lang="C#">
                TextBoxName.Text = "Some text";
            </code>
            </example>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TextBox.TextAreaContainerNames">
            <summary>
            The name of the ExpanderButton template part.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TextBox.AcceptsReturnProperty">
            <summary>
            Identifies the AcceptsReturn dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TextBox.TextProperty">
            <summary>
            Identifies the Text dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TextBox.TextAlignmentProperty">
            <summary>
            Identifies the TextAlignment dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TextBox.OnTextChanged(Windows.UI.Xaml.TextChangedEventArgs)">
            <summary>
            Raises the TextChanged event
            </summary>
            <param name="eventArgs">The arguments for the event.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TextBox.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.TextBox" /> control when a new
            template is applied.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TextBox.SelectAll">
            <summary>
            Selects all text in the text box.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TextBox.TextWrappingProperty">
            <summary>
            Identifies the TextWrapping dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TextBox.HorizontalScrollBarVisibilityProperty">
            <summary>
            Identifies the HorizontalScrollBarVisibility dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TextBox.VerticalScrollBarVisibilityProperty">
            <summary>
            Identifies the VerticalScrollBarVisibility dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TextBox.MaxLengthProperty">
            <summary>
            Identifies the MaxLength dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TextBox.TextDecorationsProperty">
            <summary>
            Identifies the TextDecorations dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TextBox.AcceptsReturn">
            <summary>
            Gets or sets the value that determines whether the text box allows and displays
            the newline or return characters.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TextBox.Text">
            <summary>
            Gets or sets the text displayed in the TextBox.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TextBox.TextAlignment">
            <summary>
            Gets or sets how the text should be aligned in the text box.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.TextBox.TextChanged">
            <summary>
            Occurs when the text is changed.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TextBox.TextWrapping">
            <summary>
            Gets or sets how the TextBow wraps text.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TextBox.HorizontalScrollBarVisibility">
            <summary>
            Gets or sets a value that indicates whether a horizontal ScrollBar should
            be displayed.
            
            Returns a ScrollBarVisibility value that indicates whether a horizontal ScrollBar
            should be displayed. The default value is Hidden.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TextBox.VerticalScrollBarVisibility">
            <summary>
            Gets or sets a value that indicates whether a vertical ScrollBar should be displayed.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TextBox.MaxLength">
            <summary>
            Gets or sets the value that determines the maximum number of characters allowed
            for user input.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TextBox.TextDecorations">
            <summary>
            Gets or sets the text decorations (underline, strikethrough...).
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.UpDownTextBox.RaiseUpPressed">
            <summary>
            Raises UpPressed event.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.UpDownTextBox.RaiseDownPressed">
            <summary>
            Raises DownPressed event.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.UpDownTextBox.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Called before the KeyDown event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.Primitives.UpDownTextBox.UpPressed">
            <summary>
            UpPressed event property.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.Primitives.UpDownTextBox.DownPressed">
            <summary>
            DownPressed event property.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ClickMode">
            <summary>
            Specifies when the Click event should be raised for a control.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ClickMode.Release">
            <summary>
            Specifies that the Click event
            should be raised when the left mouse button is pressed and released, and
            the mouse pointer is over the control.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ClickMode.Press">
            <summary>
            Specifies that the Click event
            should be raised when the mouse button is pressed and the mouse pointer is
            over the control.
            </summary>
        </member>
        <member name="T:System.Windows.Markup.NullExtension">
            <summary>
            In XAML markup, specifies a null value for a property.
            </summary>
        </member>
        <member name="M:System.Windows.Markup.NullExtension.#ctor">
            <summary>
            Initializes a new instance of NullExtension.
            </summary>
        </member>
        <member name="T:System.Windows.Clipboard">
            <summary>
            Provides static methods that facilitate transferring data to and from the
            system clipboard. In Silverlight 5, this access is limited to Unicode text
            strings.
            </summary>
        </member>
        <member name="M:System.Windows.Clipboard.SetText(System.String)">
            <summary>
            Sets text data to store on the clipboard.
            </summary>
            <param name="text">A string that contains the Unicode text data to store on the clipboard.</param>
        </member>
        <member name="T:System.Windows.DragDrop">
            <summary>
            Provides helper methods and fields for drag-and-drop operations.
            </summary>
        </member>
        <member name="P:System.Windows.DragDrop.IsDragInProgress">
            <summary>
            Gets a value indicating whether a drag is in progress.
            </summary>
        </member>
        <member name="T:System.Xml.Linq.XAttribute">
            <summary>
            Represents an XML attribute.
            </summary>
        </member>
        <member name="F:System.Xml.Linq.XAttribute.INTERNAL_containerJSNode">
            <summary>
            Note: it is up to the element that sets this to handle the corresponding actions (adding the attribute and setting the value when setting it, removing the attribute when unsetting it).
            </summary>
        </member>
        <member name="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)">
            <summary>
            Initializes a new instance of the System.Xml.Linq.XAttribute class from another
            System.Xml.Linq.XAttribute object.
            </summary>
            <param name="other">An System.Xml.Linq.XAttribute object to copy from.</param>
        </member>
        <member name="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
            <summary>
            Initializes a new instance of the System.Xml.Linq.XAttribute class from the
            specified name and value.
            </summary>
            <param name="name">The System.Xml.Linq.XName of the attribute.</param>
            <param name="value">An System.Object containing the value of the attribute.</param>
        </member>
        <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
            <summary>
            Cast the value of this System.Xml.Linq.XAttribute to a System.Boolean.
            </summary>
            <param name="attribute">The System.Xml.Linq.XAttribute to cast to System.Boolean.</param>
            <returns>A System.Boolean that contains the content of this System.Xml.Linq.XAttribute.</returns>
        </member>
        <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
            <summary>
            Cast the value of this System.Xml.Linq.XAttribute to an System.Int32.
            </summary>
            <param name="attribute">The System.Xml.Linq.XAttribute to cast to System.Int32.</param>
            <returns>A System.Int32 that contains the content of this System.Xml.Linq.XAttribute.</returns>
        </member>
        <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
            <summary>
            Cast the value of this System.Xml.Linq.XAttribute to a System.UInt32.
            </summary>
            <param name="attribute">The System.Xml.Linq.XAttribute to cast to System.UInt32.</param>
            <returns>A System.UInt32 that contains the content of this System.Xml.Linq.XAttribute.</returns>
        </member>
        <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
            <summary>
            Cast the value of this System.Xml.Linq.XAttribute to an System.Int64.
            </summary>
            <param name="attribute">The System.Xml.Linq.XAttribute to cast to System.Int64.</param>
            <returns>A System.Int64 that contains the content of this System.Xml.Linq.XAttribute.</returns>
        </member>
        <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
            <summary>
            Cast the value of this System.Xml.Linq.XAttribute to a System.UInt64.
            </summary>
            <param name="attribute">The System.Xml.Linq.XAttribute to cast to System.UInt64.</param>
            <returns>A System.UInt64 that contains the content of this System.Xml.Linq.XAttribute.</returns>
        </member>
        <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
            <summary>
            Cast the value of this System.Xml.Linq.XAttribute to a System.DateTime.
            </summary>
            <param name="attribute">The System.Xml.Linq.XAttribute to cast to System.DateTime.</param>
            <returns>A System.DateTime that contains the content of this System.Xml.Linq.XAttribute.</returns>
        </member>
        <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
            <summary>
            Cast the value of this System.Xml.Linq.XAttribute to a System.Guid.
            </summary>
            <param name="attribute">The System.Xml.Linq.XAttribute to cast to System.Guid.</param>
            <returns>A System.Guid that contains the content of this System.Xml.Linq.XAttribute.</returns>
        </member>
        <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
            <summary>
            Cast the value of this System.Xml.Linq.XAttribute to a System.TimeSpan.
            </summary>
            <param name="attribute">The System.Xml.Linq.XAttribute to cast to System.TimeSpan.</param>
            <returns>A System.TimeSpan that contains the content of this System.Xml.Linq.XAttribute.</returns>
        </member>
        <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String">
            <summary>
            Cast the value of this System.Xml.Linq.XAttribute to a System.String.
            </summary>
            <param name="attribute">The System.Xml.Linq.XAttribute to cast to System.String.</param>
            <returns>A System.String that contains the content of this System.Xml.Linq.XAttribute.</returns>
        </member>
        <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
            <summary>
            Cast the value of this System.Xml.Linq.XAttribute to a System.Double.
            </summary>
            <param name="attribute">The System.Xml.Linq.XAttribute to cast to System.Double.</param>
            <returns>A System.Double that contains the content of this System.Xml.Linq.XAttribute.</returns>
        </member>
        <member name="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
            <summary>
            Cast the value of this System.Xml.Linq.XAttribute to a System.Single.
            </summary>
            <param name="attribute">The System.Xml.Linq.XAttribute to cast to System.Single.</param>
            <returns>A System.Single that contains the content of this System.Xml.Linq.XAttribute.</returns>
        </member>
        <member name="P:System.Xml.Linq.XAttribute.Name">
            <summary>
            Gets the expanded name of this attribute.
            </summary>
        </member>
        <member name="P:System.Xml.Linq.XAttribute.Value">
            <summary>
            Gets or sets the value of this attribute.
            </summary>
        </member>
        <member name="T:System.Xml.Linq.XContainer">
            <summary>
            Represents a node that can contain other nodes.
            </summary>
        </member>
        <member name="T:System.Xml.Linq.XNode">
            <summary>
            Represents the abstract concept of a node (element, comment, document type,
            processing instruction, or text node) in the XML tree.
            </summary>
        </member>
        <member name="M:System.Xml.Linq.XNode.ToString">
            <summary>
            Returns the indented XML for this node.
            </summary>
            <returns>A System.String containing the indented XML.</returns>
        </member>
        <member name="P:System.Xml.Linq.XNode.Document">
            <summary>
            Gets the System.Xml.Linq.XDocument for this System.Xml.Linq.XObject.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.Xml.Linq.XContainer.Nodes" -->
        <member name="M:System.Xml.Linq.XContainer.Add(System.Object)">
            <summary>
            Adds the specified content as children of this System.Xml.Linq.XContainer.
            </summary>
            <param name="content">
            A content object containing simple content or a collection of content objects
            to be added.
            </param>
        </member>
        <member name="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
            <summary>
            Gets the first (in document order) child element with the specified System.Xml.Linq.XName.
            </summary>
            <param name="name">The System.Xml.Linq.XName to match.</param>
            <returns>
            A System.Xml.Linq.XElement that matches the specified System.Xml.Linq.XName,
            or null.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.Xml.Linq.XContainer.Elements" -->
        <!-- Badly formed XML comment ignored for member "M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)" -->
        <!-- Badly formed XML comment ignored for member "M:System.Xml.Linq.XContainer.Descendants" -->
        <!-- Badly formed XML comment ignored for member "M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)" -->
        <member name="P:System.Xml.Linq.XContainer.FirstNode">
            <summary>
            Get the first child node of this node.
            </summary>
        </member>
        <member name="T:System.Xml.Linq.XDocument">
            <summary>
            Represents an XML document.
            </summary>
        </member>
        <member name="M:System.Xml.Linq.XDocument.#ctor">
            <summary>
            Initializes a new instance of the System.Xml.Linq.XDocument class.
            </summary>
        </member>
        <member name="M:System.Xml.Linq.XDocument.Parse(System.String)">
            <summary>
            Creates a new System.Xml.Linq.XDocument from a string.
            </summary>
            <param name="text">A string that contains XML.</param>
            <returns>An System.Xml.Linq.XDocument populated from the string that contains XML.</returns>
        </member>
        <member name="P:System.Xml.Linq.XDocument.Root">
            <summary>
            Gets the root element of the XML Tree for this document.
            </summary>
        </member>
        <member name="T:System.Xml.Linq.XElement">
            <summary>
            Represents an XML element.
            </summary>
        </member>
        <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
            <summary>
            Initializes a new instance of the System.Xml.Linq.XElement class with the
            specified name.
            </summary>
            <param name="name">An System.Xml.Linq.XName that contains the name of the element.</param>
        </member>
        <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Initializes a new instance of the System.Xml.Linq.XElement class from another
            System.Xml.Linq.XElement object.
            </summary>
            <param name="other">An System.Xml.Linq.XElement object to copy from.</param>
        </member>
        <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
            <summary>
            Initializes a new instance of the System.Xml.Linq.XElement class with the
            specified name and content.
            </summary>
            <param name="name">A System.Xml.Linq.XName that contains the element name.</param>
            <param name="content">The contents of the element.</param>
        </member>
        <member name="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
            <summary>
            Initializes a new instance of the System.Xml.Linq.XElement class with the
            specified name and content.
            </summary>
            <param name="name">A System.Xml.Linq.XName that contains the element name.</param>
            <param name="content">The initial content of the element.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.Xml.Linq.XElement.Attributes" -->
        <!-- Badly formed XML comment ignored for member "M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)" -->
        <member name="M:System.Xml.Linq.XElement.GetDefaultNamespace">
            <summary>
            Gets the default System.Xml.Linq.XNamespace of this System.Xml.Linq.XElement.
            </summary>
            <returns>
            A System.Xml.Linq.XNamespace that contains the default namespace of this
            System.Xml.Linq.XElement.
            </returns>
        </member>
        <member name="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
            <summary>
            Gets the namespace associated with a particular prefix for this System.Xml.Linq.XElement.
            </summary>
            <param name="prefix">A string that contains the namespace prefix to look up.</param>
            <returns>
            An System.Xml.Linq.XNamespace for the namespace associated with the prefix
            for this System.Xml.Linq.XElement.
            </returns>
        </member>
        <member name="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
            <summary>
            Gets the prefix associated with a namespace for this System.Xml.Linq.XElement.
            </summary>
            <param name="ns">An System.Xml.Linq.XNamespace to look up.</param>
            <returns>A System.String that contains the namespace prefix.</returns>
        </member>
        <member name="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
            <summary>
            Sets the value of an attribute, adds an attribute, or removes an attribute.
            </summary>
            <param name="name">An System.Xml.Linq.XName that contains the name of the attribute to change.</param>
            <param name="value">
            The value to assign to the attribute. The attribute is removed if the value
            is null. Otherwise, the value is converted to its string representation and
            assigned to the System.Xml.Linq.XAttribute.Value property of the attribute.
            </param>
        </member>
        <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
            <summary>
            Cast the value of this System.Xml.Linq.XElement to a System.Guid.
            </summary>
            <param name="element">The System.Xml.Linq.XElement to cast to System.Guid.</param>
            <returns>A System.Guid that contains the content of this System.Xml.Linq.XElement.</returns>
        </member>
        <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
            <summary>
            Cast the value of this System.Xml.Linq.XElement to a System.Double.
            </summary>
            <param name="element">The System.Xml.Linq.XElement to cast to System.Double.</param>
            <returns>A System.Double that contains the content of this System.Xml.Linq.XElement.</returns>
        </member>
        <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
            <summary>
            Cast the value of this System.Xml.Linq.XElement to a System.DateTime.
            </summary>
            <param name="element">The System.Xml.Linq.XElement to cast to System.DateTime.</param>
            <returns>A System.DateTime that contains the content of this System.Xml.Linq.XElement.</returns>
        </member>
        <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
            <summary>
            Cast the value of this System.Xml.Linq.XElement to an System.Int64.
            </summary>
            <param name="element">The System.Xml.Linq.XElement to cast to System.Int64.</param>
            <returns>A System.Int64 that contains the content of this System.Xml.Linq.XElement.</returns>
        </member>
        <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
            <summary>
            Cast the value of this System.Xml.Linq.XElement to an System.Int32.
            </summary>
            <param name="element">The System.Xml.Linq.XElement to cast to System.Int32.</param>
            <returns>A System.Int32 that contains the content of this System.Xml.Linq.XElement.</returns>
        </member>
        <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
            <summary>
            Cast the value of this System.Xml.Linq.XElement to a System.Boolean.
            </summary>
            <param name="element">The System.Xml.Linq.XElement to cast to System.Boolean.</param>
            <returns>A System.Boolean that contains the content of this System.Xml.Linq.XElement.</returns>
        </member>
        <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
            <summary>
            Cast the value of this System.Xml.Linq.XElement to a System.UInt64.
            </summary>
            <param name="element">The System.Xml.Linq.XElement to cast to System.UInt64.</param>
            <returns>A System.UInt64 that contains the content of this System.Xml.Linq.XElement.</returns>
        </member>
        <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
            <summary>
            Cast the value of this System.Xml.Linq.XElement to a System.UInt32.
            </summary>
            <param name="element">The System.Xml.Linq.XElement to cast to System.UInt32.</param>
            <returns>A System.UInt32 that contains the content of this System.Xml.Linq.XElement.</returns>
        </member>
        <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
            <summary>
            Cast the value of this System.Xml.Linq.XElement to a System.TimeSpan.
            </summary>
            <param name="element">The System.Xml.Linq.XElement to cast to System.TimeSpan.</param>
            <returns>A System.TimeSpan that contains the content of this System.Xml.Linq.XElement.</returns>
        </member>
        <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
            <summary>
            Cast the value of this System.Xml.Linq.XElement to a System.String.
            </summary>
            <param name="element">The System.Xml.Linq.XElement to cast to System.String.</param>
            <returns>A System.String that contains the content of this System.Xml.Linq.XElement.</returns>
        </member>
        <member name="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
            <summary>
            Cast the value of this System.Xml.Linq.XElement to a System.Single.
            </summary>
            <param name="element">The System.Xml.Linq.XElement to cast to System.Single.</param>
            <returns>A System.Single that contains the content of this System.Xml.Linq.XElement.</returns>
        </member>
        <member name="P:System.Xml.Linq.XElement.Name">
            <summary>
            Gets or sets the name of this element.
            </summary>
        </member>
        <member name="P:System.Xml.Linq.XElement.Value">
            <summary>
            Gets or sets the concatenated text contents of this element.
            </summary>
        </member>
        <member name="T:System.Xml.Linq.XName">
            <summary>
            Represents a name of an XML element or attribute.
            </summary>
        </member>
        <member name="M:System.Xml.Linq.XName.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Xml.Linq.XName is equal to this System.Xml.Linq.XName.
            </summary>
            <param name="obj">The System.Xml.Linq.XName to compare to the current System.Xml.Linq.XName.</param>
            <returns>
            true if the specified System.Xml.Linq.XName is equal to the current System.Xml.Linq.XName;
            otherwise false.
            </returns>
        </member>
        <member name="M:System.Xml.Linq.XName.op_Implicit(System.String)~System.Xml.Linq.XName">
            <summary>
            Converts a string formatted as an expanded XML name (that is,{namespace}localname)
            to an System.Xml.Linq.XName object.
            </summary>
            <param name="expandedName">A string that contains an expanded XML name in the format {namespace}localname.</param>
            <returns>An System.Xml.Linq.XName object constructed from the expanded name.</returns>
        </member>
        <member name="M:System.Xml.Linq.XName.ToString">
            <summary>
            Returns the expanded XML name in the format {namespace}localname.
            </summary>
            <returns>A System.String that contains the expanded XML name in the format {namespace}localname.</returns>
        </member>
        <member name="M:System.Xml.Linq.XName.op_Inequality(System.Xml.Linq.XName,System.Xml.Linq.XName)">
            <summary>
            Returns a value indicating whether two instances of System.Xml.Linq.XName
            are not equal.
            </summary>
            <param name="left">The first System.Xml.Linq.XName to compare.</param>
            <param name="right">The second System.Xml.Linq.XName to compare.</param>
            <returns>true if left and right are not equal; otherwise false.</returns>
        </member>
        <member name="M:System.Xml.Linq.XName.op_Equality(System.Xml.Linq.XName,System.Xml.Linq.XName)">
            <summary>
            Returns a value indicating whether two instances of System.Xml.Linq.XName
            are equal.
            </summary>
            <param name="left">The first System.Xml.Linq.XName to compare.</param>
            <param name="right">The second System.Xml.Linq.XName to compare.</param>
            <returns>true if left and right are equal; otherwise false.</returns>
        </member>
        <member name="P:System.Xml.Linq.XName.LocalName">
            <summary>
            Gets the local (unqualified) part of the name.
            </summary>
        </member>
        <member name="P:System.Xml.Linq.XName.Namespace">
            <summary>
            Gets the namespace part of the fully qualified name.
            </summary>
        </member>
        <member name="P:System.Xml.Linq.XName.NamespaceName">
            <summary>
            Returns the URI of the System.Xml.Linq.XNamespace for this System.Xml.Linq.XName.
            </summary>
        </member>
        <member name="T:System.Xml.Linq.XNamespace">
            <summary>
            Represents an XML namespace. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
            <summary>
            Combines an System.Xml.Linq.XNamespace object with a local name to create
            an System.Xml.Linq.XName.
            </summary>
            <param name="ns">An System.Xml.Linq.XNamespace that contains the namespace.</param>
            <param name="localName">A System.String that contains the local name.</param>
            <returns>The new System.Xml.Linq.XName constructed from the namespace and local name.</returns>
        </member>
        <member name="M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace">
            <summary>
            Converts a string containing a Uniform Resource Identifier (URI) to an System.Xml.Linq.XNamespace.
            </summary>
            <param name="namespaceName">A System.String that contains the namespace URI.</param>
            <returns>An System.Xml.Linq.XNamespace constructed from the URI string.</returns>
        </member>
        <member name="M:System.Xml.Linq.XNamespace.Get(System.String)">
            <summary>
            Gets an System.Xml.Linq.XNamespace for the specified Uniform Resource Identifier
            (URI).
            </summary>
            <param name="namespaceName">A System.String that contains a namespace URI.</param>
            <returns>An System.Xml.Linq.XNamespace created from the specified URI.</returns>
        </member>
        <member name="M:System.Xml.Linq.XNamespace.GetName(System.String)">
            <summary>
            Returns an System.Xml.Linq.XName object created from this System.Xml.Linq.XNamespace
            and the specified local name.
            </summary>
            <param name="localName">A System.String that contains a local name.</param>
            <returns>
            An System.Xml.Linq.XName created from this System.Xml.Linq.XNamespace and
            the specified local name.
            </returns>
        </member>
        <member name="M:System.Xml.Linq.XNamespace.ToString">
            <summary>
            Returns the URI of this System.Xml.Linq.XNamespace.
            </summary>
            <returns>The URI of this System.Xml.Linq.XNamespace.</returns>
        </member>
        <member name="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
            <summary>
            Returns a value indicating whether two instances of System.Xml.Linq.XNamespace
            are not equal.
            </summary>
            <param name="left">The first System.Xml.Linq.XNamespace to compare.</param>
            <param name="right">The second System.Xml.Linq.XNamespace to compare.</param>
            <returns>A System.Boolean that indicates whether left and right are not equal.</returns>
        </member>
        <member name="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
            <summary>
            Returns a value indicating whether two instances of System.Xml.Linq.XNamespace
            are equal.
            </summary>
            <param name="left">The first System.Xml.Linq.XNamespace to compare.</param>
            <param name="right">The second System.Xml.Linq.XNamespace to compare.</param>
            <returns>A System.Boolean that indicates whether left and right are equal.</returns>
        </member>
        <member name="P:System.Xml.Linq.XNamespace.NamespaceName">
            <summary>
            Gets the Uniform Resource Identifier (URI) of this namespace.
            </summary>
        </member>
        <member name="T:System.Xml.Linq.XText">
            <summary>
            Represents a text node.
            </summary>
        </member>
        <member name="M:System.Xml.Linq.XText.#ctor(System.String)">
            <summary>
            Initializes a new instance of the System.Xml.Linq.XText class.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:System.Xml.Linq.XText.Value">
            <summary>
            Gets or sets the value of this node.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.Selector">
            <summary>
            Represents a control that allows a user to select an item from a collection
            of items.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ItemsControl">
            <summary>
            Represents a control that can be used to present a collection of items.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ItemsControl.DisableDefaultRendering">
            <summary>
            Derived classes can call this methed in their constructor if they want to disable the default rendering of the ItemsControl. It can be useful for example to replace the rendering with a custom HTML-based one.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ItemsControl.ItemsPanelProperty">
            <summary>
            Identifies the ItemsPanel dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ItemsControl.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ItemsControl.ItemTemplateProperty">
            <summary>
            Identifies the ItemTemplate dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ItemsControl.#ctor">
            <summary>
            Initializes a new instance of the ItemsControl class.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
             Called when the value of the System.Windows.Controls.ItemsControl.Items property changes.
            </summary>
            <param name="e">A System.Collections.Specialized.NotifyCollectionChangedEventArgs that contains the event data</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ItemsControl.OnItemTemplate_Changed(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when the value of the ItemTemplate property changes.
            </summary>
            <param name="oldItemTemplate">The previous value of the ItemTemplate property.</param>
            <param name="newItemTemplate">The current value of the ItemTemplate property.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ItemsControl.INTERNAL_GenerateContainer(System.Object)">
            <summary>
            Returns the item itself if the item is already a container of the correct type, otherwise it returns null if no container is to be created, or it returns the new container otherwise.
            </summary>
            <param name="item">The item to generate the container with.</param>
            <returns>Returns the item itself if the item is already a container of the correct type, otherwise it returns null if no container is to be created, or it returns the new container otherwise.</returns>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ItemsControl.DisplayMemberPathProperty">
            <summary>
            Identifies the DisplayMemberPath dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ItemsControl.ItemContainerStyleProperty">
            <summary>
            Identifies the ItemContainerStyle dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ItemsControl.Items">
            <summary>
            Gets the collection used to generate the content of the control. WARNING: When ItemsSource is set, it will only return a snapshot. The returned values will not be updated at the same time as the ItemsSource.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ItemsControl.ItemsPanel">
            <summary>
            Gets or sets the template that defines the panel that controls the layout
            of items.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ItemsControl.ItemsSource">
            <summary>
            Gets or sets an object source used to generate the content of the ItemsControl.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ItemsControl.ItemTemplate">
            <summary>
            Gets or sets the DataTemplate used to display each item.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ItemsControl.ItemContainerGenerator">
            <summary>
            Gets the ItemContainerGenerator associated with this ItemsControl.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ItemsControl.DisplayMemberPath">
            <summary>
            Gets or sets a path to a value on the source object to serve as the visual
            representation of the object.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ItemsControl.ItemContainerStyle">
            <summary>
            Gets or sets the style that is used when rendering the item containers.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty">
            <summary>
            Identifies the SelectedIndex dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.Selector.SelectedItemProperty">
            <summary>
            Identifies the SelectedItem dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty">
            <summary>
            Identifies the SelectedValue dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValuePathProperty">
            <summary>
            Identifies the SelectedValuePath dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.Selector.OnSelectionChanged(Windows.UI.Xaml.Controls.SelectionChangedEventArgs)">
            <summary>
            Raises the TextChanged event
            </summary>
            <param name="eventArgs">The arguments for the event.</param>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.Selector.SelectedItemBackgroundProperty">
            <summary>
            Identifies the SelectedItemBackground dependency property
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.Selector.SelectedItemForegroundProperty">
            <summary>
            Identifies the SelectedItemForeground dependency property
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.Selector.UnselectedItemBackgroundProperty">
            <summary>
            Identifies the UnselectedItemBackground dependency property
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.Selector.UnselectedItemForegroundProperty">
            <summary>
            Identifies the UnselectedItemForeground dependency property
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.Selector.SelectedIndex">
            <summary>
            Gets or sets the index of the selected item.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.Selector.SelectedItem">
            <summary>
            Gets or sets the selected item.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValue">
            <summary>
            Gets or sets the value of the selected item, obtained by using the SelectedValuePath.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.Selector.SelectedValuePath">
            <summary>
            Gets or sets the property path that is used to get the SelectedValue property
            of the SelectedItem property.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.Primitives.Selector.SelectionChanged">
            <summary>
            Occurs when the selection is changed.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.Selector.SelectedItemBackground">
            <summary>
            Gets or sets the bakground color of the selected Items.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.Selector.SelectedItemForeground">
            <summary>
            Gets or sets the foreground color of the selected Items.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.Selector.UnselectedItemBackground">
            <summary>
            Gets or sets the bakground color of the Items that are not selected.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.Selector.UnselectedItemForeground">
            <summary>
            Gets or sets the foreground color of the Items that are not selected.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.AutoCompleteBox.#ctor">
            <summary>
            Initializes a new instance of the AutoCompleteBox class.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.AutoCompleteBox.IsDropDownOpenProperty">
            <summary>
            Identifies the IsDropDownOpen dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.AutoCompleteBox.OnDropDownClosed(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Invoked when the DropDownClosed event is raised.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.AutoCompleteBox.OnDropDownOpened(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Invoked when the DropDownOpened event is raised.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.AutoCompleteBox.MaxDropDownHeightProperty">
            <summary>
            Identifies the MaxDropDownHeight dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.AutoCompleteBox.IsDropDownOpen">
            <summary>
            Gets or sets a value that indicates whether the drop-down portion of the
            ComboBox is currently open.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.AutoCompleteBox.IsArrowVisible">
            <summary>
            The IsArrowVisible property is true when it's an AutoCompleteComboBox and false if it is an AutoCompleteBox
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.AutoCompleteBox.MinimumPopulateDelay">
            <summary>
            Gets or sets the minimum delay, in milliseconds, after text is typed in the text box before the AutoCompleteBox control populates the list of possible matches in the drop-down.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.AutoCompleteBox.MinimumPrefixLength">
            <summary>
            Gets or sets the minimum number of characters required to be entered in the text box before the AutoCompleteBox displays possible matches.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.AutoCompleteBox.SearchText">
            <summary>
            Gets the text that is used to filter items in the ItemsSource item collection.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.AutoCompleteBox.Text">
            <summary>
            Gets or sets the text in the text box portion of the AutoCompleteBox control.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Windows.UI.Xaml.Controls.AutoCompleteBox.FilterMode" -->
        <member name="P:Windows.UI.Xaml.Controls.AutoCompleteBox.ItemFilter">
            <summary>
            The custom method that uses the user-entered text to filter the items specified by the ItemsSource property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.AutoCompleteBox.MaxDropDownHeight">
            <summary>
            Gets or sets the maximum height for a combo box drop-down.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.AutoCompleteBox.TextChanged">
            <summary>
            Occurs when the text in the text box portion of the AutoCompleteBox changes.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.AutoCompleteBox.DropDownClosed">
            <summary>
            Occurs when the drop-down portion of the ComboBox closes.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.AutoCompleteBox.DropDownOpened">
            <summary>
            Occurs when the drop-down portion of the ComboBox opens.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Windows.UI.Xaml.Controls.AutoCompleteBox.AutoCompleteFilterMode" -->
        <member name="T:Windows.UI.Xaml.Controls.Validation">
            <summary>
            Provides methods and attached properties that support data validation.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Windows.UI.Xaml.Controls.Validation.GetErrors(Windows.UI.Xaml.DependencyObject)" -->
        <member name="F:Windows.UI.Xaml.Controls.Validation.ErrorsProperty">
            <summary>
            Identifies the System.Windows.Controls.Validation.Errors attached property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Validation.GetHasError(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the value of the System.Windows.Controls.Validation.HasError attached
            property of the specified element.
            </summary>
            <param name="element">
            The System.Windows.UIElement or System.Windows.ContentElement object to read
            the value from.
            </param>
            <returns>
            The value of the System.Windows.Controls.Validation.HasError attached property
            of the specified element.
            </returns>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Validation.HasErrorProperty">
            <summary>
            Identifies the System.Windows.Controls.Validation.HasError attached property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Validation.ClearInvalid(Windows.UI.Xaml.Data.BindingExpression)">
            <summary>
            Removes all System.Windows.Controls.ValidationError objects from the specified
            System.Windows.Data.BindingExpressionBase object.
            </summary>
            <param name="bindingExpression">The object to turn valid.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Validation.MarkInvalid(Windows.UI.Xaml.Data.BindingExpression,Windows.UI.Xaml.Controls.ValidationError)">
            <summary>
            Marks the specified System.Windows.Data.BindingExpression object as invalid
            with the specified System.Windows.Controls.ValidationError object.
            </summary>
            <param name="bindingExpression">The System.Windows.Data.BindingExpression object to mark as invalid.</param>
            <param name="validationError">The System.Windows.Controls.ValidationError object to use.</param>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ValidationError">
            <summary>
            Represents a validation error that is created either by the binding engine
            when a System.Windows.Controls.ValidationRule reports a validation error,
            or through the System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)
            method explicitly.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ValidationError.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the System.Windows.Controls.ValidationError
            class with the specified parameters.
            </summary>
            <param name="bindingInError">
            The System.Windows.Data.BindingExpression or System.Windows.Data.MultiBindingExpression
            object with the validation error.
            </param>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ValidationError.BindingInError">
            <summary>
            Gets the System.Windows.Data.BindingExpression or System.Windows.Data.MultiBindingExpression
            object of this System.Windows.Controls.ValidationError. The object is either
            marked invalid explicitly or has a failed validation rule.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ValidationError.ErrorContent">
            <summary>
            Gets or sets an object that provides additional context for this System.Windows.Controls.ValidationError,
            such as a string describing the error.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ValidationError.Exception">
            <summary>
            Gets or sets the System.Exception object that was the cause of this System.Windows.Controls.ValidationError,
            if the error is the result of an exception.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ValidationErrorEventAction">
            <summary>
            Describes the reason a System.Windows.FrameworkElement.BindingValidationError
            event has occurred.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ValidationErrorEventAction.Added">
            <summary>
            A new System.Windows.Controls.ValidationError has occurred.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ValidationErrorEventAction.Removed">
            <summary>
            An existing System.Windows.Controls.ValidationError has been removed.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ValidationErrorEventArgs">
            <summary>
            Provides information for the System.Windows.Controls.Validation.Error attached
            event.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ValidationErrorEventArgs.Action">
            <summary>
            Gets a value that indicates whether the error is a new error or an existing
            error that has now been cleared.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ValidationErrorEventArgs.Error">
            <summary>
            Gets the error that caused this System.Windows.Controls.Validation.Error
            event.
            </summary>
        </member>
        <member name="T:System.Windows.Input.Keyboard">
            <summary>
            Represents the keyboard device.
            </summary>
        </member>
        <member name="P:System.Windows.Input.Keyboard.Modifiers">
            <summary>
            Gets the set of System.Windows.Input.ModifierKeys that are currently pressed.
            </summary>
        </member>
        <member name="T:System.Windows.DataObject">
            <summary>
            Provides a basic implementation of the IDataObject interface,
            which defines a format-independent mechanism for transferring data.
            </summary>
        </member>
        <member name="T:System.Windows.IDataObject">
            <summary>
            Provides a format-independent mechanism for transferring data.
            </summary>
            <QualityBand>Experimental</QualityBand>
        </member>
        <member name="M:System.Windows.IDataObject.GetData(System.String)">
            <summary>
            Retrieves a data object in a specified format; the data format is specified
            by a string.
            </summary>
            <param name="format">A string that specifies what format to retrieve
            the data as.</param>
            <returns>A data object with the data in the specified format, or null if the data
            is not available in the specified format.</returns>
        </member>
        <member name="M:System.Windows.IDataObject.GetDataPresent(System.String)">
            <summary>
            Checks to see whether the data is available in, or can be converted 
            to, a specified format; the data format is specified by a string.
            </summary>
            <param name="format">A string that specifies what format to check for.</param>
            <returns>True if the data is in, or can be converted to, the specified format; otherwise,
            false.</returns>
        </member>
        <member name="M:System.Windows.IDataObject.GetFormats">
            <summary>
            Returns a list of formats in which the data in this data object is stored,
            or can be converted to.
            </summary>
            <returns>An array of strings, with each string specifying the name of a format that
            this data object supports.</returns>
        </member>
        <member name="M:System.Windows.IDataObject.SetData(System.Object)">
            <summary>
            Stores the specified data in this data object, automatically determining
            the data format from the source object type.
            </summary>
            <param name="data">An object that represents the data to store in this data object.</param>
        </member>
        <member name="M:System.Windows.IDataObject.SetData(System.String,System.Object)">
            <summary>
            Stores the specified data in this data object. The data format is specified by a string.
            </summary>
            <param name="format">A string that specifies what format to store the data in.</param>
            <param name="data">The data to store in this data object.</param>
        </member>
        <member name="M:System.Windows.DataObject.GetData(System.String)">
            <summary>
            Retrieves a data object in a specified format; the data format is specified 
            by a string. 
            </summary>
            <param name="format">A string that specifies what format to retrieve the data as.</param>
            <returns>
            A data object that has the data in the specified format, or null if the data
            is not available in the specified format.
            </returns>
        </member>
        <member name="M:System.Windows.DataObject.GetDataPresent(System.String)">
            <summary>
            Checks to see whether the data is available in, or can be converted to, a
            specified format; the data format is specified by a string.
            </summary>
            <param name="format">A string that specifies the format to check for.</param>
            <returns>True if the data is in, or can be converted to, the specified format; otherwise,
            false.</returns>
        </member>
        <member name="M:System.Windows.DataObject.GetFormats">
            <summary>
            Returns a list of all formats that the data in this data object is stored
            in, or can be converted to.
            </summary>
            <returns>
            An array of strings, with each string specifying the name of a format supported
            by this data object.
            </returns>
        </member>
        <member name="M:System.Windows.DataObject.SetData(System.Object)">
            <summary>
            Stores the specified data in this data object, automatically determining
            the data format from the source object type.
            </summary>
            <param name="data">The data to store in this data object.</param>
        </member>
        <member name="M:System.Windows.DataObject.SetData(System.String,System.Object)">
            <summary>
            Stores the specified data in this data object. The data format is specified by a string.
            </summary>
            <param name="format">A string that specifies what format to store the data in.</param>
            <param name="data">The data to store in this data object.</param>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ContextMenuService.ContextMenuProperty">
            <summary>
                The DependencyProperty for the ContextMenu property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ContextMenuService.GetContextMenu(Windows.UI.Xaml.DependencyObject)">
            <summary>
                Gets the value of the ContextMenu property on the specified object.
            </summary>
            <param name="element">The object on which to query the ContextMenu property.</param>
            <returns>The value of the ContextMenu property.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ContextMenuService.SetContextMenu(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.Controls.ContextMenu)">
            <summary>
                Sets the ContextMenu property on the specified object.
            </summary>
            <param name="element">The object on which to set the ContextMenu property.</param>
            <param name="value">
                The value of the ContextMenu property. If the value is of type ContextMenu, then
                that is the ContextMenu that will be used (without any modification). If the value
                is of any other type, then that value will be used as the content for a ContextMenu
                provided by this service, and the other attached properties of this service
                will be used to configure the ContextMenu.
            </param>
        </member>
        <member name="T:System.Windows.DragDropEffects">
            <summary>
            Specifies the effects of a drag-and-drop operation.
            </summary>
        </member>
        <member name="F:System.Windows.DragDropEffects.None">
            <summary>
            The drop target does not accept the data.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.DragDropTarget`2">
            <summary>
            A control that enabled drag and drop operations on an ItemsControl.
            </summary>
            <typeparam name="TItemsControlType">The type of the items control.</typeparam>
            <typeparam name="TItemContainerType">The type of the item container.</typeparam>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DragDropTarget`2.#ctor">
            <summary>
            Initializes a new instance of the DragDropTarget class.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DragDropTarget`2.OnDragOver(System.Windows.DragEventArgs)">
            <summary>
            Raises the DragOver event.
            </summary>
            <param name="dragOverEventArgs">Information about the event.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DragDropTarget`2.ContainerFromIndex(`0,System.Int32)">
            <summary>
            Retrieves the item container at a given index.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="index">The index at which to retrieve the container.
            </param>
            <returns>The item container at a given index.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DragDropTarget`2.AddItem(`0,System.Object)">
            <summary>
            Adds an item to an items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="data">The data to be inserted.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DragDropTarget`2.INTERNAL_ReturnNewTItemsControl">
            <summary>
            Create a new TItemsControlType
            </summary>
            <returns>A new TItemsControlType</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DragDropTarget`2.InsertItem(`0,System.Int32,System.Object)">
            <summary>
            Inserts an item into an items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="index">The index at which to insert the item.</param>
            <param name="data">The data to be inserted.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DragDropTarget`2.IndexFromContainer(`0,Windows.UI.Xaml.UIElement)">
            <summary>
            Retrieves the index of an item container.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="itemContainer">The item container.</param>
            <returns>The index of an item container.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DragDropTarget`2.RemoveItem(`0,System.Object)">
            <summary>
            Removes an item from an items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="data">The data to be removed.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DragDropTarget`2.RemoveItemAtIndex(`0,System.Int32)">
            <summary>
            Removes data from an ItemsControl.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="index">The index at which to remove an item.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DragDropTarget`2.GetDragDropTargetUnderPointer(System.Double,System.Double,`1@)">
            <summary>
            This method returns null if no DragDropTarget is under the pointer, else it returns the DragDropTarget under it (the first Parent found)
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="itemContainerUnderPointer">The ListBoxItem or other container that is being moved. If there is no container, it is the item directly.</param>
            <returns>Null if no DragDropTarget is under the pointer, else it returns the DragDropTarget under it (the first Parent found)</returns>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.DragDropTarget`2.ItemDragStarting">
            <summary>
            An event raised when a drag operation is starting on an item.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.DragDropTarget`2.ItemDragCompleted">
            <summary>
            Fires when the DragDropTarget control loses mouse capture.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.DragDropTarget`2.DragEnter">
            <summary>
            Raises the DragEnter event.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.DragDropTarget`2.DragLeave">
            <summary>
            Raises the DragLeave event.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.DragDropTarget`2.DragOver">
            <summary>
            Raises the DragOver event.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.DragDropTarget`2.Drop">
            <summary>
            Raises the Drop event
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.DragDropTarget`2.ItemDroppedOnSource">
            <summary>
            Raises the ItemDroppedOnSource event
            </summary>
        </member>
        <member name="T:System.Windows.DragEventArgs">
            <summary>
            Provides data for drag-and-drop events in Silverlight.
            </summary>
        </member>
        <member name="P:System.Windows.ExtendedRoutedEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether the present state of the 
            event handling for a routed event as it travels the route.
            </summary>
        </member>
        <member name="M:System.Windows.DragEventArgs.#ctor(System.Windows.IDataObject)">
            <summary>
            Initializes a new instance of the DragEventArgs class.
            </summary>
        </member>
        <member name="M:System.Windows.DragEventArgs.GetPosition(Windows.UI.Xaml.UIElement)">
            <summary>
            Returns a drop point that is relative to a specified UIElement
            </summary>
            <param name="relativeTo">The UIElement for which to get a relative drop point.</param>
            <returns> A drop point that is relative to the element specified in relativeTo.</returns>
        </member>
        <member name="P:System.Windows.DragEventArgs.Effects">
            <summary>
            Gets or sets the target drop-and-drop operation.
            </summary>
        </member>
        <member name="P:System.Windows.DragEventArgs.Data">
            <summary>
            Gets a data object (implements IDataObject) that contains
            the data associated with the corresponding drag event. This value is not
            useful in all event cases; see Remarks.
            </summary>
        </member>
        <member name="P:System.Windows.DragEventArgs.Handled">
            <summary>
            Gets or sets a value that indicates the present state of the event handling
            for a routed event as it travels the route.
            </summary>
        </member>
        <member name="T:System.Windows.DragEventHandler">
            <summary>
            Represents the method that will handle the UIElement.DragEnter,
            UIElement.DragLeave, UIElement.DragOver, and
            UIElement.Drop events of a UIElement.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.GridSplitter">
            <summary>
            Represents the control that redistributes space between columns or rows of a Grid control.
            </summary>
            <summary>
            Represents the control that redistributes space between columns or rows of a Grid control.
            </summary>
            <summary>
            Represents the control that redistributes space between columns or rows of a Grid control.
            </summary>
            <summary>
            Represents the control that redistributes space between columns or rows of a Grid control.
            </summary>
            <summary>
            Represents the control that redistributes space between columns or rows of a Grid control.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.GridSplitter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Windows.UI.Xaml.Controls.GridSplitter"/> class.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.GridSplitter.OnApplyTemplate">
            <inheritdoc />
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.ElementProperty">
            <summary>
            Identifies the <see cref="P:Windows.UI.Xaml.Controls.GridSplitter.Element"/> dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.ResizeDirectionProperty">
            <summary>
            Identifies the <see cref="P:Windows.UI.Xaml.Controls.GridSplitter.ResizeDirection"/> dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.ResizeBehaviorProperty">
            <summary>
            Identifies the <see cref="P:Windows.UI.Xaml.Controls.GridSplitter.ResizeBehavior"/> dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GripperForegroundProperty">
            <summary>
            Identifies the <see cref="P:Windows.UI.Xaml.Controls.GridSplitter.GripperForeground"/> dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.ParentLevelProperty">
            <summary>
            Identifies the <see cref="P:Windows.UI.Xaml.Controls.GridSplitter.ParentLevel"/> dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GripperCursorProperty">
            <summary>
            Identifies the <see cref="P:Windows.UI.Xaml.Controls.GridSplitter.GripperCursor"/> dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GripperCustomCursorResourceProperty">
            <summary>
            Identifies the <see cref="P:Windows.UI.Xaml.Controls.GridSplitter.GripperCustomCursorResource"/> dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.CursorBehaviorProperty">
            <summary>
            Identifies the <see cref="P:Windows.UI.Xaml.Controls.GridSplitter.CursorBehavior"/> dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.GridSplitter.TargetControl">
            <summary>
            Gets the target parent grid from level
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.GridSplitter.Resizable">
            <summary>
            Gets GridSplitter Container Grid
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.GridSplitter.CurrentColumn">
            <summary>
            Gets the current Column definition of the parent Grid
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.GridSplitter.SiblingColumn">
            <summary>
            Gets the Sibling Column definition of the parent Grid
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.GridSplitter.CurrentRow">
            <summary>
            Gets the current Row definition of the parent Grid
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.GridSplitter.SiblingRow">
            <summary>
            Gets the Sibling Row definition of the parent Grid
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.GridSplitter.Element">
            <summary>
            Gets or sets the visual content of this Grid Splitter
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.GridSplitter.ResizeDirection">
            <summary>
            Gets or sets whether the Splitter resizes the Columns, Rows, or Both.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.GridSplitter.ResizeBehavior">
            <summary>
            Gets or sets which Columns or Rows the Splitter resizes.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.GridSplitter.GripperForeground">
            <summary>
            Gets or sets the foreground color of grid splitter grip
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.GridSplitter.ParentLevel">
            <summary>
            Gets or sets the level of the parent grid to resize
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.GridSplitter.GripperCursor">
            <summary>
            Gets or sets the gripper Cursor type
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.GridSplitter.GripperCustomCursorResource">
            <summary>
            Gets or sets the gripper Custom Cursor resource number
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.GridSplitter.CursorBehavior">
            <summary>
            Gets or sets splitter cursor on hover behavior
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.GridSplitter.GridResizeDirection">
            <summary>
            Enum to indicate whether GridSplitter resizes Columns or Rows
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GridResizeDirection.Auto">
            <summary>
            Determines whether to resize rows or columns based on its Alignment and
            width compared to height
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GridResizeDirection.Columns">
            <summary>
            Resize columns when dragging Splitter.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GridResizeDirection.Rows">
            <summary>
            Resize rows when dragging Splitter.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.GridSplitter.GridResizeBehavior">
            <summary>
            Enum to indicate what Columns or Rows the GridSplitter resizes
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GridResizeBehavior.BasedOnAlignment">
            <summary>
            Determine which columns or rows to resize based on its Alignment.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GridResizeBehavior.CurrentAndNext">
            <summary>
            Resize the current and next Columns or Rows.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GridResizeBehavior.PreviousAndCurrent">
            <summary>
            Resize the previous and current Columns or Rows.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GridResizeBehavior.PreviousAndNext">
            <summary>
            Resize the previous and next Columns or Rows.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.GridSplitter.GripperCursorType">
            <summary>
             Enum to indicate the supported gripper cursor types.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GripperCursorType.Default">
            <summary>
            Change the cursor based on the splitter direction
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GripperCursorType.Arrow">
            <summary>
            Standard Arrow cursor
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GripperCursorType.Cross">
            <summary>
            Standard Cross cursor
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GripperCursorType.Custom">
            <summary>
            Standard Custom cursor
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GripperCursorType.Hand">
            <summary>
            Standard Hand cursor
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GripperCursorType.Help">
            <summary>
            Standard Help cursor
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GripperCursorType.IBeam">
            <summary>
            Standard IBeam cursor
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GripperCursorType.SizeAll">
            <summary>
            Standard SizeAll cursor
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GripperCursorType.SizeNortheastSouthwest">
            <summary>
            Standard SizeNortheastSouthwest cursor
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GripperCursorType.SizeNorthSouth">
            <summary>
            Standard SizeNorthSouth cursor
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GripperCursorType.SizeNorthwestSoutheast">
            <summary>
            Standard SizeNorthwestSoutheast cursor
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GripperCursorType.SizeWestEast">
            <summary>
            Standard SizeWestEast cursor
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GripperCursorType.UniversalNo">
            <summary>
            Standard UniversalNo cursor
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GripperCursorType.UpArrow">
            <summary>
            Standard UpArrow cursor
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.GripperCursorType.Wait">
            <summary>
            Standard Wait cursor
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.GridSplitter.SplitterCursorBehavior">
            <summary>
             Enum to indicate the behavior of window cursor on grid splitter hover
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.SplitterCursorBehavior.ChangeOnSplitterHover">
            <summary>
            Update window cursor on Grid Splitter hover
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.GridSplitter.SplitterCursorBehavior.ChangeOnGripperHover">
            <summary>
            Update window cursor on Grid Splitter Gripper hover
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.GripperHoverWrapper.#ctor(Windows.UI.Xaml.UIElement,Windows.UI.Xaml.Controls.GridSplitter.GridResizeDirection,Windows.UI.Xaml.Controls.GridSplitter.GripperCursorType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Windows.UI.Xaml.Controls.GripperHoverWrapper"/> class that add cursor change on hover functionality for GridSplitter.
            </summary>
            <param name="element">UI element to apply cursor change on hover</param>
            <param name="gridSplitterDirection">GridSplitter resize direction</param>
            <param name="gripperCursor">GridSplitter gripper on hover cursor type</param>
            <param name="gripperCustomCursorResource">GridSplitter gripper custom cursor resource number</param>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ItemDragEventArgs">
            <summary>
            Information describing a drag event on a UIElement.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ItemDragEventArgs.#ctor(Windows.UI.Xaml.Controls.SelectionCollection)">
            <summary>
            Initializes a new instance of the ItemDragEventArgs class.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ItemDragEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether an item drag
            operation was handled.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ItemDragEventArgs.Effects">
            <summary>
            Gets or sets the effects of the completed drag operation.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ItemDragEventArgs.Data">
            <summary>
            Gets or sets the data associated with the item container being dragged.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ItemDragEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to cancel the action.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.NumericUpDownValueBarVisibility">
            <summary>
            Determins whether the value bar behind the value text should be visible
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.NumericUpDownValueBarVisibility.Visible">
            <summary>
            Visible
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.NumericUpDownValueBarVisibility.Collapsed">
            <summary>
            Collapsed
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.NumericUpDown">
            <summary>
            NumericUpDown control - for representing values that can be
            entered with keyboard,
            using increment/decrement buttons
            as well as swiping over the control.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.RangeBase">
            <summary>
            Represents an element that has a value within a specific range, such as the ProgressBar, ScrollBar, and Slider controls.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.RangeBase.#ctor">
            <summary>
            Provides base class initialization behavior for RangeBase-derived classes.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.RangeBase.LargeChangeProperty">
            <summary>
            Identifies the LargeChange dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.RangeBase.MaximumProperty">
            <summary>
            Identifies the Maximum dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.RangeBase.MinimumProperty">
            <summary>
            Identifies the Minimum dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.RangeBase.SmallChangeProperty">
            <summary>
            The identifier for the SmallChange dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty">
            <summary>
            The identifier for the Value dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.RangeBase.OnMaximumChanged(System.Double,System.Double)">
            <summary>
            Called when the Maximum property changes.
            </summary>
            <param name="oldMaximum">Old value of the Maximum property.</param>
            <param name="newMaximum">New value of the Maximum property.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.RangeBase.OnMinimumChanged(System.Double,System.Double)">
            <summary>
            Called when the Minimum property changes.
            </summary>
            <param name="oldMinimum">Old value of the Minimum property.</param>
            <param name="newMinimum">New value of the Minimum property.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.RangeBase.OnValueChanged(System.Double,System.Double)">
            <summary>
            Fires the ValueChanged routed event.
            </summary>
            <param name="oldValue">Old value of the Value property.</param>
            <param name="newValue">New value of the Value property.</param>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.RangeBase.LargeChange">
            <summary>
            Gets or sets a value to be added to or subtracted from the Value of a RangeBase control. The default is 1.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.RangeBase.Maximum">
            <summary>
            Gets or sets the highest possible Value of the range element. The default is 1.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.RangeBase.Minimum">
            <summary>
            Gets or sets the Minimum possible Value of the range element. The default is 0.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.RangeBase.SmallChange">
            <summary>
            Gets or sets a Value to be added to or subtracted from the Value of a RangeBase control. The default is 0.1.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.RangeBase.Value">
            <summary>
            Gets or sets the current setting of the range control, which may be coerced. The default is 0.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.Primitives.RangeBase.ValueChanged">
            <summary>
            Occurs when the range value changes.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.NumericUpDown.ValueBarVisibilityProperty">
            <summary>
            ValueBarVisibility Dependency Property
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.NumericUpDown.OnValueBarVisibilityChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ValueBarVisibility property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.NumericUpDown.OnValueBarVisibilityChanged">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the ValueBarVisibility property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.NumericUpDown.IsReadOnlyProperty">
            <summary>
            IsReadOnly Dependency Property
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.NumericUpDown.OnIsReadOnlyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the IsReadOnly property.
            </summary>
            <param name="d">
            The <see cref="T:Windows.UI.Xaml.DependencyObject"/> on which
            the property has changed value.
            </param>
            <param name="e">
            Event data that is issued by any event that
            tracks changes to the effective value of this property.
            </param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.NumericUpDown.OnIsReadOnlyChanged">
            <summary>
            Provides derived classes an opportunity to handle changes
            to the IsReadOnly property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.NumericUpDown.DragSpeedProperty">
            <summary>
            DragSpeed Dependency Property
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.NumericUpDown.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Windows.UI.Xaml.Controls.NumericUpDown"/> class.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.NumericUpDown.OnApplyTemplate">
            <summary>
            Invoked whenever application code or internal processes (such as a rebuilding layout pass) call ApplyTemplate. In simplest terms, this means the method is called just before a UI element displays in your app. Override this method to influence the default post-template logic of a class.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.NumericUpDown.DoDecrement">
            <summary>
            Decrements the value by Increment.
            </summary>
            <returns><c>true</c> if the value was decremented by exactly <c>Increment</c>; <c>false</c> if it was constrained.</returns>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.NumericUpDown.IncrementProperty">
            <summary>
            The identifier for the Increment dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.NumericUpDown.OnValueChanged(System.Double,System.Double)">
            <summary>
            Fires the ValueChanged routed event.
            </summary>
            <param name="oldValue">Old value of the Value property.</param>
            <param name="newValue">New value of the Value property.</param>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.NumericUpDown.ValueBarVisibility">
            <summary>
            Gets or sets the ValueBarVisibility property. This dependency property 
            indicates whether the value bar should be shown.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.NumericUpDown.IsReadOnly">
            <summary>
            Gets or sets the IsReadOnly property. This dependency property 
            indicates whether the box should only allow to read the values by copying and pasting them.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.NumericUpDown.DragSpeed">
            <summary>
            Gets or sets the DragSpeed property. This dependency property 
            indicates the speed with which the value changes when manipulated with dragging.
            The default value of double.NaN indicates that the value will change by (Maximum - Minimum),
            when the control is dragged a full screen length.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.NumericUpDown.Increment">
            <summary>
            Gets or sets a value added or subtracted from the value property. The default values is one.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.PanelDragDropTarget.#ctor">
            <summary>
            Initializes a new instance of the PanelDragDropTarget class.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.PanelDragDropTarget.AddItem(Windows.UI.Xaml.Controls.Panel,System.Object)">
            <summary>
            Adds an item to an items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="data">The data to be inserted.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.PanelDragDropTarget.ContainerFromIndex(Windows.UI.Xaml.Controls.Panel,System.Int32)">
            <summary>
            Retrieves the item container at a given index.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="index">The index at which to retrieve the container.
            </param>
            <returns>The item container at a given index.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.PanelDragDropTarget.InsertItem(Windows.UI.Xaml.Controls.Panel,System.Int32,System.Object)">
            <summary>
            Inserts an item into an items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="index">The index at which to insert the item.</param>
            <param name="data">The data to be inserted.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.PanelDragDropTarget.IndexFromContainer(Windows.UI.Xaml.Controls.Panel,Windows.UI.Xaml.UIElement)">
            <summary>
            Retrieves the index of an item container.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="itemContainer">The item container.</param>
            <returns>The index of an item container.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.PanelDragDropTarget.RemoveItem(Windows.UI.Xaml.Controls.Panel,System.Object)">
            <summary>
            Removes an item from an items control.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="data">The data to be removed.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.PanelDragDropTarget.RemoveItemAtIndex(Windows.UI.Xaml.Controls.Panel,System.Int32)">
            <summary>
            Removes data from an ItemsControl.
            </summary>
            <param name="itemsControl">The items control.</param>
            <param name="index">The index at which to remove an item.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.PanelDragDropTarget.OnContentChanged(System.Object,System.Object)">
            <summary>
            Confirms that the Content property is set to an object
            of type Panel.
            </summary>
            <param name="oldContent">The old content value.</param>
            <param name="newContent">The new content value.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.PanelDragDropTarget.INTERNAL_ReturnNewTItemsControl">
            <summary>
            Create a new TItemsControlType
            </summary>
            <returns>A new TItemsControlType</returns>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Selection">
            <summary>
            A class that holds a selected item.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Selection.#ctor(System.Nullable{System.Int32},System.Object)">
            <summary>
            Initializes an instance of the Selection class.
            </summary>
            <param name="index">The index of the selected item within the 
            source collection.</param>
            <param name="item">The selected item.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Selection.#ctor(System.Object)">
            <summary>
            Initializes an instance of the Selection class.
            </summary>
            <param name="item">The selected item.</param>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Selection.Index">
            <summary>
            Gets the index of the selection within the source collection.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Selection.Item">
            <summary>
            Gets the selected item.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.SelectionCollection">
            <summary>
            A collection of selected items.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.SelectionCollection.#ctor">
            <summary>
            Initializes a new instance of a SelectionCollection.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.SelectionCollection.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Initializes a new instance of a SelectionCollection.
            </summary>
            <param name="items">The items to include in the selection 
            collection.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.SelectionCollection.ToSelectionCollection(System.Object)">
            <summary>
            Returns data as a SelectionCollection.
            </summary>
            <param name="data">The data object.</param>
            <returns>A selection collection.</returns>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.SelectionCollection.SelectedItems">
            <summary>
            Gets a sequence of the items in the selection collection.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.StretchDirection">
            <summary>
            Describes the direction that content is scaled.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.StretchDirection.UpOnly">
            <summary>
            The content scales upward only when it is smaller than the parent. If the
            content is larger, no scaling downward is performed.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.StretchDirection.DownOnly">
            <summary>
            The content scales downward only when it is larger than the parent. If the
            content is smaller, no scaling upward is performed.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.StretchDirection.Both">
            <summary>
            The content stretches to fit the parent according to the Stretch property.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Viewbox">
            <summary>
            Defines a content decorator that can stretch and scale a single child to
            fill the available space.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Viewbox.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.Viewbox" /> class.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Viewbox.StretchProperty">
            <summary>
            Identifies the Viewbox.Stretch dependency property.
            </summary>
            <value>
            The identifier for the Viewbox.Stretch dependency
            property.
            </value>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Viewbox.StretchDirectionProperty">
            <summary>
            Identifies the Viewbox.StretchDirection dependency property.
            </summary>
            <value>
            The identifier for the Viewbox.StretchDirection dependency property.
            </value>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Viewbox.OnStretchDirectionPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            StretchDirectionProperty property changed handler.
            </summary>
            <param name="d">Viewbox that changed its StretchDirection.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Viewbox.OnApplyTemplate">
            <summary>
            Builds the visual tree for the Viewbox control when a new
            template is applied.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Viewbox.ComputeScaleFactor(Windows.Foundation.Size,Windows.Foundation.Size)">
            <summary>
            Compute the scale factor of the Child content.
            </summary>
            <param name="availableSize">
            Available size to fill with content.
            </param>
            <param name="contentSize">Desired size of the content.</param>
            <returns>Width and Height scale factors.</returns>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Viewbox.ChildElement">
            <summary>
            Gets or sets the element of the Viewbox that will render the child.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Viewbox.RootCanvas">
            <summary>
            Gets or sets the Canvas element so that the child does not force its size on the parent.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Viewbox.Scale">
            <summary>
            Gets or sets the transformation on the ChildElement used to scale the
            Child content.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Viewbox.Child">
            <summary>
            Gets or sets the single child element of a Viewbox element.
            </summary>
            <value>
            The single child element of a Viewbox element.
            </value>
            <remarks>
            Child must be an alias of ContentControl.Content property to ensure 
            continuous namescope, ie, named element within Viewbox can be found.
            </remarks>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Viewbox.Stretch">
            <summary>
            Gets or sets the Stretch mode, which determines how content
            fits into the available space. The default is Stretch.Uniform.
            </summary>
            <value>
            A Stretch mode, which determines how content fits in the
            available space. The default is Stretch.Uniform.
            </value>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Viewbox.StretchDirection">
            <summary>
            Gets or sets the StretchDirection, which determines how scaling
            is applied to the contents of a Viewbox. The default is
            StretchDirection.Both.
            </summary>
            <value>
            A StretchDirection, which determines how scaling is applied to the
            contents of a Viewbox. The default is StretchDirection.Both.
            </value>
        </member>
        <member name="T:Windows.UI.Xaml.Data.BindingOperations">
            <summary>
            Provides the static BindingOperations.SetBinding(DependencyObject,DependencyProperty,BindingBase) method.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Data.BindingOperations.SetBinding(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.Binding)">
            <summary>
            Creates and associates a new BindingExpression with the specified binding target property.
            </summary>
            <param name="target">The target to set the binding to.</param>
            <param name="dp">The property on the target to bind.</param>
            <param name="binding">The binding to assign to the target property.</param>
            <returns>An object that contains information about the binding.</returns>
        </member>
        <member name="T:Windows.UI.Xaml.Documents.Bold">
            <summary>
            Provides an inline-level content element that causes content to render with a bold font weight.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Documents.Span">
            <summary>
            Groups other Inline flow content elements.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Documents.Inline">
            <summary>
            Provides a base class for inline text elements, such as Span and Run.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Documents.TextElement">
            <summary>
            An abstract class used as the base class for the also-abstract Block and Inline classes. 
            TextElement supports common API for classes involved in the XAML text object model,
            such as properties that control text size, font families and so on.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Documents.Inline.TextDecorationsProperty">
            <summary>
            Identifies the TextDecorations dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Documents.Inline.TextDecorations">
            <summary>
            Gets or sets the text decorations (underline, strikethrough...).
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Documents.Span.#ctor">
            <summary>
            Initializes a new instance of the Span class.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Documents.Span.Inlines">
             <summary>
            Gets an InlineCollection containing the top-level inline elements that include the contents of Span.
             </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Documents.Bold.#ctor">
            <summary>
            Initializes a new instance of the Bold class.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Documents.Underline">
            <summary>
            Provides an inline-level content element that causes content to render with a bold font weight.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Documents.Underline.#ctor">
            <summary>
            Initializes a new instance of the Underline class.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Documents.Italic">
            <summary>
            Provides an inline-level content element that causes content to render with a bold font weight.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Documents.Italic.#ctor">
            <summary>
            Initializes a new instance of the Italic class.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Documents.Hyperlink">
            <summary>
            Provides an inline-level content element that provides facilities for hosting hyperlinks.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Documents.Hyperlink.#ctor">
            <summary>
            Initializes a new instance of the Hyperlink class.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Documents.Hyperlink.Click">
            <summary>
            Occurs when the left mouse button is clicked on a Hyperlink.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Documents.Hyperlink.NavigateUri">
            <summary>
            Gets or sets a URI to navigate to when the Hyperlink
            is activated. The default is null.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Documents.InlineCollection">
            <summary>
            Represents a collection of Inline elements.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Documents.InlineCollection.Add(System.String)">
            <summary>
            Adds a string to the collection.
            </summary>
            <param name="text">The text to add.</param>
        </member>
        <member name="T:Windows.UI.Xaml.Documents.LineBreak">
            <summary>
            Represents an inline element that causes a new line to begin in content when rendered in a text container.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Documents.Run">
            <summary>
            Represents a discrete section of formatted or unformatted text.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Documents.Run.TextProperty">
            <summary>
            Identifies the Text dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Documents.Run.Text">
            <summary>
            Get or Set the Text property
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.RepeatBehaviorType">
            <summary>
            Specifies the repeat mode that a Windows.UI.Xaml.Media.Animation.RepeatBehavior
            raw value represents.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.RepeatBehaviorType.Count">
            <summary>
            The Windows.UI.Xaml.Media.Animation.RepeatBehavior represents a case where
            the timeline should repeat for a fixed number of complete runs.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.RepeatBehaviorType.Forever">
            <summary>
            The Windows.UI.Xaml.Media.Animation.RepeatBehavior represents a case where
            the timeline should repeat indefinitely.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.BrushMappingMode">
            <summary>
            Specifies the coordinate system used by a System.Windows.Media.Brush.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.BrushMappingMode.Absolute">
            <summary>
            The coordinate system is not relative to a bounding box. Values are interpreted
            directly in local space.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.BrushMappingMode.RelativeToBoundingBox">
            <summary>
            The coordinate system is relative to a bounding box: 0 indicates 0 percent
            of the bounding box, and 1 indicates 100 percent of the bounding box. For
            example, (0.5, 0.5) describes a point in the middle of the bounding box,
            and (1, 1) describes a point at the bottom right of the bounding box.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.GradientSpreadMethod">
            <summary>
            Specifies how to draw the gradient outside a gradient brush's gradient vector
            or space.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.GradientSpreadMethod.Pad">
            <summary>
            The color values at the ends of the gradient vector fill the remaining space.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.GradientSpreadMethod.Repeat">
            <summary>
            The gradient is repeated in the original direction until the space is filled.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.AutoCompleteFilterPredicate`1">
            <summary>
            Represents the filter used by the AutoCompleteBox
            control to determine whether an item is a possible match for the specified
            text.
            </summary>
            <typeparam name="T">The type used for filtering the AutoCompleteBox.
            This type can be either a string or an object.</typeparam>
            <param name="search">The string used as the basis for filtering.</param>
            <param name="item">The item that is compared with the search parameter.</param>
            <returns>true to indicate item is a possible match for search; otherwise false.</returns>
        </member>
        <member name="T:Windows.UI.Xaml.MessageBoxButton">
            <summary>
            Specifies the buttons to include when you display a message box.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.MessageBoxButton.OK">
            <summary>
            Displays only the OK button.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.MessageBoxButton.OKCancel">
            <summary>
            Displays both the OK and Cancel buttons.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.MessageBoxResult">
            <summary>
            Represents a user's response to a message box.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.MessageBoxResult.None">
            <summary>
            This value is not currently used.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.MessageBoxResult.OK">
            <summary>
            The user clicked the OK button.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.MessageBoxResult.Cancel">
            <summary>
            The user clicked the Cancel button or pressed ESC.
            </summary>
        </member>
        <member name="T:Windows.UI.Text.FontStyle">
            <summary>
            Represents the style of a font face (for example, normal or italic).
            </summary>
        </member>
        <member name="F:Windows.UI.Text.FontStyle.Normal">
            <summary>
            Represents a normal font style.
            </summary>
        </member>
        <member name="F:Windows.UI.Text.FontStyle.Oblique">
            <summary>
            Represents an oblique font style.
            </summary>
        </member>
        <member name="F:Windows.UI.Text.FontStyle.Italic">
            <summary>
            Represents an italic font style.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.DragCompletedEventArgs">
            <summary>
            Provides data for the DragCompleted event that occurs when a user completes
            a drag operation with the mouse of a Thumb control.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.DragCompletedEventArgs.#ctor(System.Double,System.Double,System.Boolean)">
            <summary>
            Initializes a new instance of the DragCompletedEventArgs class.
            </summary>
            <param name="horizontalChange">The horizontal change in position of the Thumb control, resulting from the drag operation.</param>
            <param name="verticalChange">The vertical change in position of the Thumb control, resulting from the drag operation.</param>
            <param name="canceled">A value that indicates whether the drag operation was canceled by a call to the CancelDrag method.</param>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.DragCompletedEventArgs.Canceled">
            <summary>
            Gets a value that indicates whether the drag operation was canceled.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.DragCompletedEventArgs.HorizontalChange">
            <summary>
            Gets the horizontal distance between the current mouse position and the thumb
            coordinates.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.DragCompletedEventArgs.VerticalChange">
            <summary>
            Gets the vertical distance between the current mouse position and the thumb coordinates.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.DragCompletedEventHandler">
            <summary>
            Represents the method that will handle the DragCompleted event of a Thumb.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.DragDeltaEventArgs">
            <summary>
            Provides data for the DragDelta event that occurs one or more times when
            a user drags a Thumb control with the mouse.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.DragDeltaEventArgs.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the DragDeltaEventArgs class.
            </summary>
            <param name="horizontalChange">The horizontal change in the Thumb position since the last DragDelta event.</param>
            <param name="verticalChange">The vertical change in the Thumb position since the last DragDelta event.</param>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.DragDeltaEventArgs.HorizontalChange">
            <summary>
            Gets the horizontal change in the Thumb position since the last DragDelta event.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.DragDeltaEventArgs.VerticalChange">
            <summary>
            Gets the vertical change in the Thumb position since the last DragDelta event.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.DragDeltaEventHandler">
            <summary>
            Represents the method that will handle the DragDelta event of a Thumb.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.DragStartedEventArgs">
            <summary>
            Provides data for the DragStarted event that occurs when a user drags a Thumb control with the mouse.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.DragStartedEventArgs.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the DragStartedEventArgs class.
            </summary>
            <param name="horizontalOffset">The horizontal distance between the current mouse position and the thumb coordinates.</param>
            <param name="verticalOffset">The vertical distance between the current mouse position and the thumb coordinates.</param>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.DragStartedEventArgs.HorizontalOffset">
            <summary>
            Gets the horizontal distance between the current mouse position and the thumb
            coordinates.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.DragStartedEventArgs.VerticalOffset">
            <summary>
            Gets the vertical distance between the current mouse position and the thumb
            coordinates.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.DragStartedEventHandler">
            <summary>
            Represents the method that will handle the DragStarted event of a Thumb.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.MenuBase">
            <summary>
            Represents a control that defines choices for users to select.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.MenuBase.#ctor">
            <summary>
            Initializes a new instance of the System.Windows.Controls.Primitives.MenuBase class.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.PlacementMode">
            <summary>
            Specifies the preferred location for positioning a ToolTip relative to a visual element.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.PlacementMode.Bottom">
            <summary>
            Indicates that the preferred location of the tooltip is at the bottom of the target element.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.PlacementMode.Right">
            <summary>
            Indicates that the preferred location of the tooltip is at the right of the target element.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.PlacementMode.Mouse">
            <summary>
            Indicates that the preferred location of the tooltip is at the mouse pointer location.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.PlacementMode.Left">
            <summary>
            Indicates that the preferred location of the tooltip is at the left of the target element.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.PlacementMode.Top">
            <summary>
            Indicates that the preferred location of the tooltip is at the top of the target element.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.Popup">
            <summary>
            Displays content on top of existing content, within the bounds of the application window.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.Popup.ChildProperty">
            <summary>
            Gets the identifier for the Child dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.Popup.IsOpenProperty">
            <summary>
            Gets the identifier for the IsOpen dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.Popup.HorizontalOffsetProperty">
            <summary>
            Gets the identifier for the HorizontalOffset dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.Popup.VerticalOffsetProperty">
            <summary>
            Gets the identifier for the VerticalOffset dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.Popup.HorizontalContentAlignmentProperty">
            <summary>
            Identifies the HorizontalContentAlignment dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.Popup.VerticalContentAlignmentProperty">
            <summary>
            Identifies the VerticalContentAlignment dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.Popup.PlacementTarget">
            <summary>
            Gets or Sets the UIElement that the Popup will stick to. A null value will make the Popup stay at its originally defined position.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.Popup.Placement">
            <summary>
            Gets or sets the position of the Popup relative to the UIElement it is attached to. NOTE: The only currently supported positions are Right and Bottom.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.Popup.Child">
            <summary>
             Gets or sets the content to be hosted in the popup.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.Popup.IsOpen">
            <summary>
            Gets or sets whether the popup is currently displayed on the screen.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.Popup.HorizontalOffset">
            <summary>
            Gets or sets the distance between the left side of the application window and the left side of the popup.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.Popup.VerticalOffset">
            <summary>
            Gets or sets the distance between the top of the application window and the top of the popup.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.Popup.HorizontalContentAlignment">
            <summary>
            Gets or sets the horizontal alignment of the control's content.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.Popup.VerticalContentAlignment">
            <summary>
            Gets or sets the vertical alignment of the control's content.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.DataGridColumnHeader">
            <summary>
            Represents an individual System.Windows.Controls.DataGrid column header.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.DataGridColumnHeader.#ctor">
            <summary>
            Initializes a new instance of the System.Windows.Controls.Primitives.DataGridColumnHeader
            class.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.DataGridColumnHeader.Column">
            <summary>
            Gets the System.Windows.Controls.DataGridColumn associated with this column
            header.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.PopupRoot.ContentProperty">
            <summary>
            Identifies the PopupRoot.Content dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.PopupRoot.Content">
            <summary>
            Gets or sets the visual root of a popup
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs">
            <summary>
            Provides data about a change in range value for the ValueChanged event.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the RangeBaseValueChangedEventArgs class.
            </summary>
            <param name="newValue">The new value of a range value property.</param>
            <param name="oldValue">The previous value of a range value property.</param>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs.NewValue">
            <summary>
            Gets the new value of a range value property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventArgs.OldValue">
            <summary>
            Gets the previous value of a range value property.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.RangeBaseValueChangedEventHandler">
            <summary>
            Represents the method that will handle a ValueChanged event.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.ScrollBar">
            <summary>
            Represents a control that provides a scroll bar that has a sliding Thumb whose position corresponds to a value.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.ScrollBar.#ctor">
            <summary>
            Initializes a new instance of the ScrollBar class.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.ScrollBar.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.ScrollBar.ViewportSizeProperty">
            <summary>
            Identifies the ViewportSize dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.ScrollBar.Orientation">
            <summary>
            Gets or sets a value that indicates whether the ScrollBar is displayed horizontally or vertically.
            The default is Horizontal.  Specific control templates might change this value, which would cause the templated value to be the apparent runtime default.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.ScrollBar.ViewportSize">
            <summary>
            Gets or sets the amount of the scrollable content that is currently visible. The default is 0.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.Primitives.ScrollBar.Scroll">
            <summary>
            Occurs one or more times as content scrolls in a ScrollBar when the user moves the Thumb by using the mouse.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.ScrollEventArgs">
            <summary>
            Provides data for the Scroll event.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.ScrollEventArgs.#ctor(System.Double,Windows.UI.Xaml.Controls.Primitives.ScrollEventType)">
            <summary>
            Initializes a new instance of the ScrollEventArgs class.
            </summary>
            <param name="newValue">The new Value of the ScrollBar.</param>
            <param name="scrollEventType">A ScrollEventType describing the event.</param>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.ScrollEventArgs.NewValue">
            <summary>
            Gets the new Value of the ScrollBar.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.ScrollEventArgs.ScrollEventType">
            <summary>
            Gets a ScrollEventType describing the event.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.ScrollEventHandler">
            <summary>
            Represents the method that will handle the Scroll event of a ScrollBar.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.ScrollEventType">
            <summary>
            Specifies the type of Scroll event that occurred.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.ScrollEventType.SmallDecrement">
            <summary>
            Specifies that the Thumb moved a specified distance, as determined by the
            value of SmallChange. The Thumb moved to the left for a horizontal ScrollBar
            or upward for a vertical ScrollBar.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.ScrollEventType.SmallIncrement">
            <summary>
            Specifies that the Thumb moved a specified distance, as determined by the
            value of SmallChange. The Thumb moved to the right for a horizontal ScrollBar
            or downward for a vertical ScrollBar.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.ScrollEventType.LargeDecrement">
            <summary>
            Specifies that the Thumb moved a specified distance, as determined by the
            value of LargeChange. The Thumb moved to the left for a horizontal ScrollBar
            or upward for a vertical ScrollBar.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.ScrollEventType.LargeIncrement">
            <summary>
            Specifies that the Thumb moved a specified distance, as determined by the
            value of LargeChange. The Thumb moved to the right for a horizontal ScrollBar
            or downward for a vertical ScrollBar.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.ScrollEventType.ThumbTrack">
            <summary>
            The Thumb was dragged and caused a PointerMoved event. A Scroll event of
            this ScrollEventType may occur more than one time when the Thumb is dragged
            in the ScrollBar.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.ScrollEventType.EndScroll">
            <summary>
            Specifies that the Thumb was dragged to a new position and is now no longer
            being dragged by the user.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.SelectorItem">
            <summary>
            Provides a base class for ListBoxItem, ComboBoxItem, or potentially for other item types.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.SelectorItem.INTERNAL_CorrespondingItem">
            <summary>
            The business object that the SelectorItem (ListBoxItem, ComboBoxItem, etc.) represents. For example, if the ItemsSource is a collection of business objects, each of them will be stored in this variable.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.SelectorItem.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.SelectorItem.#ctor">
            <summary>
            Provides base class initialization behavior for SelectorItem-derived classes.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.SelectorItem.IsSelectedProperty">
            <summary>
            Identifies the IsSelected dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.SelectorItem.IsSelected">
            <summary>
            Gets or sets a value that indicates whether the item is selected in a selector.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.Thumb">
            <summary>
            Represents a control that can be dragged by the user.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.Thumb.#ctor">
            <summary>
            Initializes a new instance of the Thumb class.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.Thumb.CancelDrag">
            <summary>
            Cancels a drag operation for the Thumb.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.Thumb.IsDraggingProperty">
            <summary>
            Identifies the IsDragging dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.Thumb.IsDragging">
            <summary>
            Gets whether the Thumb control has focus and mouse capture. The default is false.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.Primitives.Thumb.DragCompleted">
            <summary>
            Fires when the Thumb control loses mouse capture.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.Primitives.Thumb.DragDelta">
            <summary>
            Fires one or more times as the mouse pointer is moved when a Thumb control has logical focus and mouse capture.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.Primitives.Thumb.DragStarted">
            <summary>
            Fires when a Thumb control receives logical focus and mouse capture.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ChildWindow">
            <summary>
            Provides a window that can be displayed over a parent window and blocks
            interaction with the parent window.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow.PART_Chrome">
            <summary>
            The name of the Chrome template part.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow.PART_CloseButton">
            <summary>
            The name of the CloseButton template part.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow.PART_ContentPresenter">
            <summary>
            The name of the ContentPresenter template part.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow.PART_ContentRoot">
            <summary>
            The name of the ContentRoot template part.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow.PART_Overlay">
            <summary>
            The name of the Overlay template part.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow.PART_Root">
            <summary>
            The name of the Root template part.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow.VSMGROUP_Window">
            <summary>
            The name of the WindowStates VSM group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow.VSMSTATE_StateClosed">
            <summary>
            The name of the Closing VSM state.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow.VSMSTATE_StateOpen">
            <summary>
            The name of the Opening VSM state.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow.HasCloseButtonProperty">
            <summary>
            Identifies the HasCloseButton
            dependency property.
            </summary>
            <value>
            The identifier for the HasCloseButton
            dependency property.
            </value>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.OnHasCloseButtonPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            HasCloseButtonProperty PropertyChangedCallback call back static function.
            </summary>
            <param name="d">ChildWindow object whose HasCloseButton property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs which contains the old and new values.</param>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow.OverlayBrushProperty">
            <summary>
            Identifies the OverlayBrush
            dependency property.
            </summary>
            <value>
            The identifier for the OverlayBrush
            dependency property.
            </value>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.OnOverlayBrushPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            OverlayBrushProperty PropertyChangedCallback call back static function.
            </summary>
            <param name="d">ChildWindow object whose OverlayBrush property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs which contains the old and new values.</param>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow.OverlayOpacityProperty">
            <summary>
            Identifies the OverlayOpacity
            dependency property.
            </summary>
            <value>
            The identifier for the OverlayOpacity
            dependency property.
            </value>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.OnOverlayOpacityPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            OverlayOpacityProperty PropertyChangedCallback call back static function.
            </summary>
            <param name="d">ChildWindow object whose OverlayOpacity property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs which contains the old and new values.</param>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow.TitleProperty">
            <summary>
            Identifies the ChildWindow.Title" />
            dependency property.
            </summary>
            <value>
            The identifier for the ChildWindow
            dependency property.
            </value>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow._chrome">
            <summary>
            Private accessor for the Chrome.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow._clickPoint">
            <summary>
            Private accessor for the click point on the chrome.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow._closed">
            <summary>
            Private accessor for the Closing storyboard.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow._contentPresenter">
            <summary>
            Private accessor for the ContentPresenter.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow._contentRootTransform">
            <summary>
            Private accessor for the translate transform that needs to be applied on to the ContentRoot.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow._desiredContentWidth">
            <summary>
            Content area desired width.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow._desiredContentHeight">
            <summary>
            Content area desired height.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow._desiredMargin">
            <summary>
            Desired margin for the window.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow._dialogresult">
            <summary>
            Private accessor for the Dialog Result property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow._isAppExit">
            <summary>
            Boolean value that specifies whether the application is exit or not.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow._isClosing">
            <summary>
            Boolean value that specifies whether the window is in closing state or not.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow._isOpen">
            <summary>
            Boolean value that specifies whether the window is opened.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow._opened">
            <summary>
            Private accessor for the Opening storyboard.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow._isMouseCaptured">
            <summary>
            Boolean value that specifies whether the mouse is captured or not.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow._root">
            <summary>
            Private accessor for the Root of the window.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ChildWindow._windowPosition">
            <summary>
            Private accessor for the position of the window with respect to RootVisual.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.#ctor">
            <summary>
            Initializes a new instance of the
            ChildWindow class.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.Application_Exit(System.Object,System.EventArgs)">
            <summary>
            Executed when the application is exited.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.ChangeVisualState">
            <summary>
            Changes the visual state of the ChildWindow.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.Close">
            <summary>
            Closes a ChildWindow.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.CloseButton_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Executed when the CloseButton is clicked.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Routed event args.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.Closing_Completed(System.Object,System.EventArgs)">
            <summary>
            Executed when the Closing storyboard ends.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.ChildWindow_LostFocus(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Executed when the window loses focus.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Routed event args.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            ChildWindow control when a
            new template is applied.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.OnClosed(System.EventArgs)">
            <summary>
            Raises the ChildWindow.Closed event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the ChildWindow.Closing event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.OnOpened">
            <summary>
            This method is called every time a
            ChildWindow is displayed.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.Page_Resized(System.Object,System.EventArgs)">
            <summary>
            Executed when the page resizes.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.RootVisual_GotFocus(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Executed when the root visual gets focus.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Routed event args.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.Show">
            <summary>
            Opens a ChildWindow and
            returns without waiting for the
            ChildWindow to close.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The child window is already in the visual tree.
            </exception>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.ShowAndWait">
            <summary>
            Opens a ChildWindow and waits for the ChildWindow to close.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The child window is already in the visual tree.
            </exception>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.SubscribeToEvents">
            <summary>
            Subscribes to events when the ChildWindow is opened.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.SubscribeToStoryBoardEvents">
            <summary>
            Subscribes to events that are on the storyboards. 
            Unsubscribing from these events happen in the event handlers individually.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.SubscribeToTemplatePartEvents">
            <summary>
            Subscribes to events on the template parts.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.UnSubscribeFromEvents">
            <summary>
            Unsubscribe from events when the ChildWindow is closed.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.UnsubscribeFromTemplatePartEvents">
            <summary>
            Unsubscribe from the events that are subscribed on the template part elements.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.UpdateOverlaySize">
            <summary>
            Updates the size of the overlay of the window.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.UpdatePosition">
            <summary>
            Updates the position of the window in case the size of the content changes.
            This allows ChildWindow only scale from right and bottom.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.UpdateRenderTransform">
            <summary>
            Updates the render transform applied on the overlay.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ChildWindow.UpdateContentRootTransform(System.Double,System.Double)">
            <summary>
            Updates the ContentRootTranslateTransform.
            </summary>
            <param name="X">X coordinate of the transform.</param>
            <param name="Y">Y coordinate of the transform.</param>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ChildWindow.HasCloseButton">
            <summary>
            Gets or sets a value indicating whether the
            ChildWindow has a close
            button.
            </summary>
            <value>
            True if the child window has a close button; otherwise, false. The
            default is true.
            </value>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ChildWindow.OverlayBrush">
            <summary>
            Gets or sets the visual brush that is used to cover the parent
            window when the child window is open.
            </summary>
            <value>
            The visual brush that is used to cover the parent window when the
            ChildWindow is open. The
            default is null.
            </value>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ChildWindow.OverlayOpacity">
            <summary>
            Gets or sets the opacity of the overlay brush that is used to cover
            the parent window when the child window is open.
            </summary>
            <value>
            The opacity of the overlay brush that is used to cover the parent
            window when the ChildWindow
            is open. The default is 1.0.
            </value>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ChildWindow.RootVisual">
            <summary>
            Gets the root visual element.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ChildWindow.Title">
            <summary>
            Gets or sets the title that is displayed in the frame of the
            ChildWindow.
            </summary>
            <value>
            The title displayed at the top of the window. The default is null.
            </value>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.ChildWindow.Closed">
            <summary>
            Occurs when the ChildWindow
            is closed.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.ChildWindow.Closing">
            <summary>
            Occurs when the ChildWindow
            is closing.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ChildWindow.ContentRoot">
            <summary>
            Gets the internal accessor for the ContentRoot of the window.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ChildWindow.DialogResult">
            <summary>
            Gets or sets a value indicating whether the
            ChildWindow was accepted or
            canceled.
            </summary>
            <value>
            True if the child window was accepted; false if the child window was
            canceled. The default is null.
            </value>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ChildWindow.ChildWindowPopup">
            <summary>
            Gets the internal accessor for the PopUp of the window.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ChildWindow.CloseButton">
            <summary>
            Gets the internal accessor for the close button of the window.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ChildWindow.IsOpen">
            <summary>
            Gets a value indicating whether the PopUp is open or not.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ChildWindow.Overlay">
            <summary>
            Gets the internal accessor for the overlay of the window.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ComboBoxItem">
            <summary>
            Represents the container for an item in a ListBox control.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ContextMenu">
            <summary>
            Represents a pop-up menu that enables a control to expose functionality that is specific to the context of the control.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ContextMenu.#ctor">
            <summary>
            Initializes a new instance of the System.Windows.Controls.ContextMenu class.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ContextMenu.IsOpenProperty">
            <summary>
            Identifies the IsOpen dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ContextMenu.HorizontalOffsetProperty">
            <summary>
            Identifies the HorizontalOffset dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ContextMenu.VerticalOffsetProperty">
            <summary>
            Identifies the VerticalOffset dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ContextMenu.OnClosed(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Called when the System.Windows.Controls.ContextMenu.Closed event occurs.
            </summary>
            <param name="e">The event data for the System.Windows.Controls.ContextMenu.Closed event.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ContextMenu.OnOpened(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Called when the System.Windows.Controls.ContextMenu.Opened event occurs.
            </summary>
            <param name="e">The event data for the System.Windows.Controls.ContextMenu.Opened event.</param>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ContextMenu.IsOpen">
            <summary>
            Gets or sets a value that indicates whether the ContextMenu is visible. True if the ContextMenu is visible; otherwise, false. The default is false.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ContextMenu.HorizontalOffset">
            <summary>
            Gets or sets the horizontal distance between the target origin and the pop-up alignment point. The default is 0.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ContextMenu.VerticalOffset">
            <summary>
            Gets or sets the vertical distance between the target origin and the pop-up alignment point. The default is 0.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.ContextMenu.Closed">
            <summary>
            Occurs when a particular instance of a System.Windows.Controls.ContextMenu closes.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.ContextMenu.Opened">
            <summary>
            Occurs when a particular instance of a context menu opens.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ContextMenuEventArgs">
            <summary>
            Provides data for the context menu event.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ContextMenuEventArgs.PointerLeft">
            <summary>
            Gets the horizontal position of the mouse.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ContextMenuEventArgs.PointerTop">
            <summary>
            Gets the vertical position of the mouse.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ContextMenuEventHandler">
            <summary>
            Represents the method that will handle the ContextMenuOpening routed events.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Grid">
            <summary>
            Defines a flexible grid area that consists of columns and rows. Child elements
            of the Grid are measured and arranged according to their row/column assignments
            and internal class logic.
            </summary>
            <example>
            You can add a Grid with two rows and columns to the XAML as follows:
            <code lang="XAML" xml:space="preserve">
            <Grid Width="300"
                  Height="200"
                  Background="Blue"
                  HorizontalAlignment="Left">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                    <!--Children here.-->
                </Grid>
            </code>
            Or in C#:
            <code lang="C#">
            Grid myGrid = new Grid();
            myGrid.Width = 300;
            myGrid.Height = 200;
            myGrid.Background = new SolidColorBrush(Windows.UI.Colors.Blue);
            myGrid.HorizontalAlignment = HorizontalAlignment.Left;
            
            //We create and add the rows and columns:
            //First column:
            ColumnDefinition columnDefinition = new ColumnDefinition();
            columnDefinition.Width = new GridLength(70, GridUnitType.Pixel);
            myGrid.ColumnDefinitions.Add(columnDefinition);
            //Second column:
            ColumnDefinition columnDefinition2 = new ColumnDefinition();
            columnDefinition2.Width = new GridLength(1, GridUnitType.Star);
            myGrid.ColumnDefinitions.Add(columnDefinition2);
            
            //First row:
            RowDefinition rowDefinition = new RowDefinition();
            rowDefinition.Height = new GridLength(40, GridUnitType.Pixel);
            myGrid.RowDefinitions.Add(rowDefinition);
            //Second Row:
            RowDefinition rowDefinition2 = new RowDefinition();
            rowDefinition2.Height = new GridLength(1, GridUnitType.Star);
            myGrid.RowDefinitions.Add(rowDefinition2);
            
            //Do not forget to add the Grid to the visual tree.
            </code>
            </example>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Grid.MakeGridPositionCorrect(System.Int32@,System.Int32)">
            <summary>
            Makes sure that the given index of Grid.Row or Grid.Column is between 0 and the maximum Row/Column index
            </summary>
            <param name="gridPosition">the row/column index to "coerce"</param>
            <param name="maxValue">the maximum value for a row/column index</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Grid.#ctor">
            <summary>
            Initializes a new instance of the Grid class.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Grid.SetRow(Windows.UI.Xaml.UIElement,System.Int32)">
            <summary>
            Sets the value of the Grid.Row XAML attached property on the specified FrameworkElement.
            </summary>
            <param name="element">The target element on which to set the Grid.Row XAML attached property.</param>
            <param name="value">The property value to set.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Grid.GetRow(Windows.UI.Xaml.UIElement)">
            <summary>
            Gets the value of the Grid.Row XAML attached property from the specified
            FrameworkElement.
            </summary>
            <param name="element">The element from which to read the property value.</param>
            <returns>The value of the Grid.Row XAML attached property on the target element.</returns>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Grid.RowProperty">
            <summary>
            Identifies the Grid.Row XAML attached property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Grid.SetColumn(Windows.UI.Xaml.UIElement,System.Int32)">
            <summary>
            Sets the value of the Grid.Column XAML attached property on the specified FrameworkElement.
            </summary>
            <param name="element">The target element on which to set the Grid.Row XAML attached property.</param>
            <param name="value">The property value to set.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Grid.GetColumn(Windows.UI.Xaml.UIElement)">
            <summary>
            Gets the value of the Grid.Column XAML attached property from the specified
            FrameworkElement.
            </summary>
            <param name="element">The element from which to read the property value.</param>
            <returns>The value of the Grid.Column XAML attached property on the target element.</returns>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Grid.ColumnProperty">
            <summary>
            Identifies the Grid.Column XAML attached property
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Grid.ColumnDefinitions">
            <summary>
            Gets a list of ColumnDefinition objects defined on this instance of Grid.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Grid.RowDefinitions">
            <summary>
            Gets a list of RowDefinition objects defined on this instance of Grid.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ItemContainerGenerator.ContainerFromItem(System.Object)">
            <summary>
            Returns the container corresponding to the specified item, or null if no container was found.
            </summary>
            <param name="item">The item to retrieve the container for.</param>
            <returns>A container that corresponds to the specified item, if the item has a container
            and exists in the collection; otherwise, null.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ItemContainerGenerator.INTERNAL_TryUnregisterContainer(System.Object,System.Object)">
            <summary>
            Removes the container associated to the item.
            </summary>
            <param name="container">The container to remove.</param>
            <param name="correspondingItem">The item that corresponds to the container to remove.</param>
            <returns>True if found and removed, false otherwise.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ItemContainerGenerator.INTERNAL_Clear">
            <summary>
            Resets the ItemContainerGenerator.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ItemContainerGenerator.INTERNAL_RegisterContainer(System.Object,System.Object)">
            <summary>
            Adds a container to the collection of containers.
            </summary>
            <param name="container">The container to add.</param>
            <param name="correspondingItem">The item that corresponds to the container to add.</param>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ItemContainerGenerator.INTERNAL_AllContainers">
            <summary>
            Gets all the containers associated to all the items.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ItemsPresenter">
            <summary>
            Displays the content of a ItemsPresenter.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.DataGrid">
             <summary>
             Represents a control that displays data in a customizable grid.
             </summary>
             <example>
             <code lang="XAML" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
             <DataGrid x:Name="DataGrid1" Margin="0,10,0,0" AutoGenerateColumns="True" IsReadOnly="True" HorizontalGridLinesBrush="Gray" VerticalGridLinesBrush="Gray" HorizontalAlignment="Left">
                 <DataGrid.ColumnHeaderStyle>
                     <Style TargetType="DataGridColumnHeader">
                         <Setter Property="Background" Value="Gray"/>
                         <Setter Property="Foreground" Value="White"/>
                     </Style>
                 </DataGrid.ColumnHeaderStyle>
             </DataGrid>
             </code>
             <code lang="C#">
             DataGrid1.ItemsSource = Planet.GetListOfPlanets();
             public class Planet
             {
                public string Name { get; set; }
                public string ImagePath { get; set; }
            
                public static ObservableCollection&lt;Planet&gt; GetListOfPlanets()
                {
                    return new ObservableCollection&lt;Planet&gt;()
                    {
                        new Planet() { Name = "Mercury", ImagePath = "ms-appx:/Planets/Mercury.png" },
                        new Planet() { Name = "Venus", ImagePath = "ms-appx:/Planets/Venus.png" },
                        new Planet() { Name = "Earth", ImagePath = "ms-appx:/Planets/Earth.png" },
                        new Planet() { Name = "Mars", ImagePath = "ms-appx:/Planets/Mars.png" },
                        new Planet() { Name = "Jupiter", ImagePath = "ms-appx:/Planets/Jupiter.png" },
                        new Planet() { Name = "Saturn", ImagePath = "ms-appx:/Planets/Saturn.png" },
                        new Planet() { Name = "Uranus", ImagePath = "ms-appx:/Planets/Uranus.png" },
                        new Planet() { Name = "Neptune", ImagePath = "ms-appx:/Planets/Neptune.png" }
                        new Planet() { Name = "Pluto", ImagePath = "ms-appx:/Planets/Pluto.png" }
                    };
                }
            } 
             </code>
             </example>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.MultiSelector">
            <summary>
            Provides an abstract class for controls that allow multiple items to be selected.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.MultiSelector.#ctor">
            <summary>
            Initializes a new instance of the System.Windows.Controls.Primitives.MultiSelector
            class.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.MultiSelector.SelectedItemsProperty">
            <summary>
            Identifies the SelectedItems dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.MultiSelector.SelectedItems">
            <summary>
            Gets the items in the System.Windows.Controls.Primitives.MultiSelector that
            are selected.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DataGrid.#ctor">
            <summary>
            Initializes a new instance of the System.Windows.Controls.DataGrid class.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGrid.AutoGenerateColumnsProperty">
            <summary>
            Identifies the System.Windows.Controls.DataGrid.AutoGenerateColumns dependency
            property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGrid.ColumnHeaderStyleProperty">
            <summary>
            Identifies the System.Windows.Controls.DataGrid.ColumnHeaderStyle dependency
            property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGrid.ColumnsProperty">
            <summary>
            Identifies the System.Windows.Controls.DataGrid.Columns dependency property.</summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGrid.IsReadOnlyProperty">
            <summary>
            Identifies the System.Windows.Controls.DataGrid.IsReadOnly dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGrid.SelectionModeProperty">
            <summary>
            Identifies the System.Windows.Controls.DataGrid.SelectionMode dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGrid.HorizontalGridLinesBrushProperty">
            <summary>
            Identifies the System.Windows.Controls.DataGrid.HorizontalGridLinesBrush dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGrid.RowHeaderTemplateProperty">
            <summary>
            Identifies the System.Windows.Controls.DataGrid.RowHeaderTemplate dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGrid.VerticalGridLinesBrushProperty">
            <summary>
            Identifies the System.Windows.Controls.DataGrid.VerticalGridLinesBrush dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DataGrid.INTERNAL_OnAttachedToVisualTree">
            <exclude/>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DataGrid.MakeUIStructure">
            <summary>
            Creates the structure: creates the grid that will contain the elements and sets its columns
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DataGrid.AddChild(System.Object)">
            <summary>
            Adds a row to the DataGrid. NOTE: The element can only be added at the end of the list.
            </summary>
            <param name="childData"></param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DataGrid.OnItemsSourceChanged_BeforeVisualUpdate(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Prepares the DataGrid for the update of its display (removes the autogenerated Columns if needed and registers to the ItemsSource.CollectionChanged event.
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGrid.AutoGenerateColumns">
            <summary>
            Gets or sets a value that indicates whether the columns are created automatically.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGrid.ColumnHeaderStyle">
            <summary>
            Gets or sets the style applied to all column headers in the System.Windows.Controls.DataGrid.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGrid.Columns">
            <summary>
            Gets a collection that contains all the columns in the System.Windows.Controls.DataGrid.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGrid.IsReadOnly">
            <summary>
            Gets or sets a value that indicates whether the user can edit values in the
            System.Windows.Controls.DataGrid.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGrid.SelectionMode">
            <summary>
            Gets or sets a value that indicates how rows and cells are selected in the
            System.Windows.Controls.DataGrid.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGrid.HorizontalGridLinesBrush">
            <summary>
            Temporary solution to allow the choice of the DataGrid's horizontal lines colors
            </summary>
            <exclude/>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGrid.RowHeaderTemplate">
            <summary>
            Gets or set the template for the row headers.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGrid.VerticalGridLinesBrush">
            <summary>
            Temporary solution to allow the choice of the DataGrid's vertical lines colors
            </summary>
            <exclude/>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.DataGridBoundColumn">
            <summary>
            Serves as the base class for columns that can bind to a property in the data
            source of a System.Windows.Controls.DataGrid.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.DataGridColumn">
            <summary>
            Represents a System.Windows.Controls.DataGrid column.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DataGridColumn.SetHeaderStyleIfColumnsStyleNotSet(Windows.UI.Xaml.Style)">
            <summary>
            This method allows to set the header's style without changing the DataGridColumn's HeaderStyle Property. This way, we will still be able to set a new header via DataGrid's ColumnHeaderStyle property.
            </summary>
            <param name="style">The new style to apply to the header</param>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGridColumn.HeaderStyleProperty">
            <summary>
            Identifies the System.Windows.Controls.DataGridColumn.HeaderStyle dependency
            property.</summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGridColumn.HeaderTemplateProperty">
            <summary>
            Identifies the System.Windows.Controls.DataGridColumn.HeaderTemplate dependency
            property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGridColumn.IsAutoGeneratedProperty">
            <summary>
            Identifies the System.Windows.Controls.DataGridColumn.IsAutoGenerated dependency
            property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGridColumn.IsReadOnlyProperty">
            <summary>
            Identifies the System.Windows.Controls.DataGridColumn.IsAutoGenerated dependency
            property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGridColumn.WidthProperty">
            <summary>
            Identifies the System.Windows.Controls.DataGridColumn.Width dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DataGridColumn.GenerateEditingElement(System.Object)">
            <summary>
            When overridden in a derived class, gets an editing element that is bound
            to the System.Windows.Controls.DataGridBoundColumn.Binding property value
            of the column.
            </summary>
            <param name="childData">The data item that is represented by the row that contains the intended cell.</param>
            <returns>
            A new editing element that is bound to the System.Windows.Controls.DataGridBoundColumn.Binding
            property value of the column.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DataGridColumn.GenerateElement(System.Object)">
            <summary>
            When overridden in a derived class, gets a read-only element that is bound
            to the System.Windows.Controls.DataGridBoundColumn.Binding property value
            of the column.
            </summary>
            <param name="childData">The data item that is represented by the row that contains the intended cell.</param>
            <returns>
            A new read-only element that is bound to the System.Windows.Controls.DataGridBoundColumn.Binding
            property value of the column.
            </returns>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGridColumn.Header">
            <summary>
            Gets or sets the content of the column header.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGridColumn.HeaderStyle">
            <summary>
            Gets or sets the style that is used when rendering the column header.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGridColumn.HeaderTemplate">
            <summary>
            Gets or sets the template that defines the visual representation of the column
            header.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGridColumn.IsAutoGenerated">
            <summary>
            Gets a value that indicates whether the column is auto-generated.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGridColumn.Width">
            <summary>
            Gets or sets the column width or automatic sizing mode.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGridBoundColumn.BindingProperty">
            <summary>
            Identifies the System.Windows.Controls.DataGridBoundColumn.Binding dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGridBoundColumn.Binding">
            <summary>
            Gets or sets the binding that associates the column with a property in the
            data source.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.DataGridCell">
            <summary>
            Represents a cell of a System.Windows.Controls.DataGrid control.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGridCell.ColumnProperty">
            <summary>
            Identifies the System.Windows.Controls.DataGridCell.Column dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGridCell.IsEditingProperty">
            <summary>
            Identifies the System.Windows.Controls.DataGridCell.IsEditing dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGridCell.IsSelectedProperty">
            <summary>
            Identifies the System.Windows.Controls.DataGridCell.IsSelected dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGridCell.Column">
            <summary>
            Gets the column that the cell is in.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGridCell.IsEditing">
            <summary>
            Gets or sets a value that indicates whether the cell is in edit mode.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGridCell.IsSelected">
            <summary>
            Gets or sets a value that indicates whether the cell is selected.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.DataGridCheckBoxColumn">
            <summary>
            Represents a System.Windows.Controls.DataGrid column that hosts System.Windows.Controls.CheckBox
            controls in its cells.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.DataGridComboBoxColumn">
            <summary>
            Represents a System.Windows.Controls.DataGrid column that hosts System.Windows.Controls.ComboBox
            controls in its cells.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.DataGridHyperlinkColumn">
            <summary>
            Represents a System.Windows.Controls.DataGrid column that hosts System.Uri
            elements in its cells.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGridHyperlinkColumn.ContentBindingProperty">
            <summary>
            Identifies the System.Windows.Controls.DataGridBoundColumn.Binding dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGridHyperlinkColumn.ContentBinding">
            <summary>
            Gets or sets the binding to the text of the hyperlink.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.DataGridLength">
            <summary>
            Represents the lengths of elements within the System.Windows.Controls.DataGrid
            control.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DataGridLength.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the System.Windows.Controls.DataGridLength
            class with an absolute value in pixels.
            </summary>
            <param name="pixels">The absolute pixel value (96 pixels-per-inch) to initialize the length to.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DataGridLength.#ctor(System.Double,Windows.UI.Xaml.Controls.DataGridLengthUnitType)">
            <summary>
            Initializes a new instance of the System.Windows.Controls.DataGridLength
            class with a specified value and unit.
            </summary>
            <param name="value">The requested size of the element.</param>
            <param name="type">The type that is used to determine how the size of the element is calculated.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DataGridLength.op_Inequality(Windows.UI.Xaml.Controls.DataGridLength,Windows.UI.Xaml.Controls.DataGridLength)">
            <summary>
            Compares two System.Windows.Controls.DataGridLength structures to determine
            whether they are not equal.
            </summary>
            <param name="gl1">The first System.Windows.Controls.DataGridLength instance to compare.</param>
            <param name="gl2">The second System.Windows.Controls.DataGridLength instance to compare.</param>
            <returns>
            true if the two System.Windows.Controls.DataGridLength instances do not have
            the same value or sizing mode; otherwise, false.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DataGridLength.op_Equality(Windows.UI.Xaml.Controls.DataGridLength,Windows.UI.Xaml.Controls.DataGridLength)">
            <summary>
            Compares two System.Windows.Controls.DataGridLength structures for equality.
            </summary>
            <param name="gl1">The first System.Windows.Controls.DataGridLength instance to compare.</param>
            <param name="gl2">The second System.Windows.Controls.DataGridLength instance to compare.</param>
            <returns>
            true if the two System.Windows.Controls.DataGridLength instances have the
            same value or sizing mode; otherwise, false.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DataGridLength.op_Implicit(System.Double)~Windows.UI.Xaml.Controls.DataGridLength">
            <summary>
            Converts a System.Double to an instance of the System.Windows.Controls.DataGridLength
            class.
            </summary>
            <param name="value">The absolute pixel value (96 pixels-per-inch) to initialize the length to.</param>
            <returns>An object that represents the specified length.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DataGridLength.Equals(Windows.UI.Xaml.Controls.DataGridLength)">
            <summary>
            Determines whether the specified System.Windows.Controls.DataGridLength is
            equal to the current System.Windows.Controls.DataGridLength.
            </summary>
            <param name="other">The System.Windows.Controls.DataGridLength to compare to the current instance.</param>
            <returns>
            true if the specified object is a System.Windows.Controls.DataGridLength
            with the same value or sizing mode as the current System.Windows.Controls.DataGridLength;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DataGridLength.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current System.Windows.Controls.DataGridLength.
            </summary>
            <param name="obj">The object to compare to the current instance.</param>
            <returns>
            true if the specified object is a System.Windows.Controls.DataGridLength
            with the same value or sizing mode as the current System.Windows.Controls.DataGridLength;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DataGridLength.GetHashCode">
            <summary>
            Gets a hash code for the System.Windows.Controls.DataGridLength.
            </summary>
            <returns>A hash code for the current System.Windows.Controls.DataGridLength.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.DataGridLength.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represent the current object.</returns>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGridLength.Auto">
            <summary>
            Gets a System.Windows.Controls.DataGridLength structure that represents the
            standard automatic sizing mode.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGridLength.IsAbsolute">
            <summary>
            Gets a value that indicates whether this instance sizes elements based on
            a fixed pixel value.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGridLength.IsAuto">
            <summary>
            Gets a value that indicates whether this instance automatically sizes elements
            based on both the content of cells and the column headers.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGridLength.IsStar">
            <summary>
            Gets a value that indicates whether this instance automatically sizes elements
            based on a weighted proportion of available space.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGridLength.UnitType">
            <summary>
            Gets the type that is used to determine how the size of the element is calculated.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGridLength.Value">
            <summary>
            Gets the absolute value of the System.Windows.Controls.DataGridLength in
            pixels, or 1.0 if the System.Windows.Controls.DataGridLength.UnitType property is
            set to System.Windows.Controls.DataGridLengthUnitType.Auto.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.DataGridLengthUnitType">
            <summary>
            Defines constants that specify how elements in a System.Windows.Controls.DataGrid
            are sized. Note: SizeToCells and SizeToHeader are not available yet.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGridLengthUnitType.Auto">
            <summary>
            The size is based on the contents of both the cells and the column header.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGridLengthUnitType.Pixel">
            <summary>
            The size is a fixed value expressed in pixels.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.DataGridRow">
            <summary>
            Represents a System.Windows.Controls.DataGrid row.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.DataGridSelectionMode">
            <summary>
            Defines constants that specify whether single or multiple item selections
            are supported by a System.Windows.Controls.DataGrid control.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGridSelectionMode.Single">
            <summary>
            Only one item in the System.Windows.Controls.DataGrid can be selected at
            a time.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGridSelectionMode.Extended">
            <summary>
            Multiple items in the System.Windows.Controls.DataGrid can be selected at
            the same time.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.DataGridTemplateColumn">
            <summary>
            Represents a System.Windows.Controls.DataGrid column that hosts template-specified
            content in its cells.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGridTemplateColumn.CellTemplateProperty">
            <summary>
            Identifies the System.Windows.Controls.DataGridTemplateColumn.CellTemplate
            dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.DataGridTemplateColumn.CellEditingTemplateProperty">
            <summary>
            Identifies the System.Windows.Controls.DataGridTemplateColumn.CellEditingTemplate
            dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGridTemplateColumn.CellTemplate">
            <summary>
            Gets or sets the template to use to display the contents of a cell that is
            not in editing mode.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.DataGridTemplateColumn.CellEditingTemplate">
            <summary>
            Gets or sets the template to use to display the contents of a cell that is
            in editing mode.</summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.DataGridTextColumn">
            <summary>
            Represents a System.Windows.Controls.DataGrid column that hosts textual content
            in its cells.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.HeaderedContentControl">
            <summary>
            Provides the base implementation for controls that contain a single
            content element and a header.
            </summary>
            <remarks>
            HeaderedContentControl adds Header and HeaderTemplatefeatures to a
            ContentControl. HasHeader and HeaderTemplateSelector are removed for
            lack of support and consistency with other Silverlight controls.
            </remarks>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.HeaderedContentControl.HeaderProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            dependency property.
            </value>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.HeaderedContentControl.OnHeaderPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            HeaderProperty property changed handler.
            </summary>
            <param name="d">HeaderedContentControl whose Header property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs, which contains the old and new value.</param>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.HeaderedContentControl.HeaderTemplateProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
            dependency property.
            </value>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.HeaderedContentControl.OnHeaderTemplatePropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            HeaderTemplateProperty property changed handler.
            </summary>
            <param name="d">HeaderedContentControl whose HeaderTemplate property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs, which contains the old and new value.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.HeaderedContentControl.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.HeaderedContentControl" />
            class.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.HeaderedContentControl.OnHeaderChanged(System.Object,System.Object)">
            <summary>
            Called when the value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            property changes.
            </summary>
            <param name="oldHeader">
            The old value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            property.
            </param>
            <param name="newHeader">
            The new value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            property.
            </param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.HeaderedContentControl.OnHeaderTemplateChanged(Windows.UI.Xaml.DataTemplate,Windows.UI.Xaml.DataTemplate)">
            <summary>
            Called when the value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
            property changes.
            </summary>
            <param name="oldHeaderTemplate">
            The old value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
            property.
            </param>
            <param name="newHeaderTemplate">
            The new value of the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate" />
            property.
            </param>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.HeaderedContentControl.Header">
            <summary>
            Gets or sets the content for the header of the control.
            </summary>
            <value>
            The content for the header of the control. The default value is
            null.
            </value>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.HeaderedContentControl.HeaderTemplate">
            <summary>
            Gets or sets the template that is used to display the content of the
            control's header.
            </summary>
            <value>
            The template that is used to display the content of the control's
            header. The default is null.
            </value>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Expander.ElementExpanderButtonName">
            <summary>
            The name of the ExpanderButton template part.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Expander.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.Expander" /> class.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Expander._expanderButton">
            <summary>
            The ExpanderButton template part is a templated ToggleButton that's used 
            to expand and collapse the ExpandSite, which hosts the content.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Expander.IsExpandedProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.Expander.IsExpanded" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.Expander.IsExpanded" />
            dependency property.
            </value>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Expander.OnIsExpandedPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            ExpandedProperty PropertyChangedCallback static function.
            </summary>
            <param name="d">Expander object whose Expanded property is changed.</param>
            <param name="e">DependencyPropertyChangedEventArgs which contains the old and new values.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Expander.OnExpanded">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.Expander.Expanded" /> event
            when the
            <see cref="P:System.Windows.Controls.Expander.IsExpanded" />
            property changes from false to true.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Expander.OnCollapsed">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.Expander.Collapsed" /> event
            when the
            <see cref="P:System.Windows.Controls.Expander.IsExpanded" />
            property changes from true to false.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Expander.ToggleExpanded(Windows.UI.Xaml.RoutedEventHandler,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Handle changes to the IsExpanded property.
            </summary>
            <param name="handler">Event handler.</param>
            <param name="args">Event arguments.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Expander.RaiseEvent(Windows.UI.Xaml.RoutedEventHandler,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Raise a RoutedEvent.
            </summary>
            <param name="handler">Event handler.</param>
            <param name="args">Event arguments.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Expander.OnExpanderButtonClicked(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Handle ExpanderButton's click event.
            </summary>
            <param name="sender">The ExpanderButton in template.</param>
            <param name="e">Routed event arg.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Expander.UpdateVisualState(System.Boolean)">
            <summary>
            Update the current visual state of the button.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Expander.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.Expander" /> control when a new
            template is applied.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Expander.IsExpanded">
            <summary>
            Gets or sets a value indicating whether the
            <see cref="T:System.Windows.Controls.Expander" /> content window is
            visible.
            </summary>
            <value>
            True if the content window is expanded; otherwise, false. The
            default is false.
            </value>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.Expander.Expanded">
            <summary>
            Occurs when the content window of an
            <see cref="T:System.Windows.Controls.Expander" /> control opens to
            display both its header and content.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.Expander.Collapsed">
            <summary>
            Occurs when the content window of an
            <see cref="T:System.Windows.Controls.Expander" /> control closes and
            only the
            <see cref="P:System.Windows.Controls.HeaderedContentControl.Header" />
            is visible.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Expander.ExpanderButton">
            <summary>
            Gets or sets the ExpanderButton template part.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.MenuItem">
            <summary>
            Represents a selectable item inside a Menu.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Button">
            <summary>
            Represents a templated button control that interprets a Click user interaction.
            </summary>
            <example>
            <code lang="XAML">
            <Button Content="Click me" Margin="0,5,0,0" Foreground="White" Background="#FFE44D26" HorizontalAlignment="Left" Click="MyButton_Click"/>
            </code>
            <code lang="C#">
            void MyButton_Click(object sender, RoutedEventArgs e)
            {
                MessageBox.Show("You clicked me.");
                Window.Current.IsEnabled = false;
            }
            </code>
            </example>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.MenuItem.#ctor">
            <summary>
            Initializes a new instance of the MenuItem class.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.MenuItem.IconProperty">
            <summary>
            Identifies the System.Windows.Controls.MenuItem.Icon dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.MenuItem.HeaderProperty">
            <summary>
            Identifies the System.Windows.Controls.HeaderedItemsControl.Header dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.MenuItem.Icon">
            <summary>
            Gets or sets the icon that appears in a MenuItem.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.MenuItem.Header">
            <summary>
            Gets or sets the item that labels the control.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.TabControl">
            <summary>
            Represents a control that contains multiple items that share the same
            space on the screen.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TabControl.ElementTemplateTopName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TabControl.ElementTabPanelTopName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TabControl.ElementContentTopName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabControl.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.TabControl" /> class.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabControl.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.TabControl" /> when a new
            template is applied.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TabControl.SelectedItemProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TabControl.SelectedItem" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TabControl.SelectedItem" />
            dependency property.
            </value>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabControl.OnSelectedItemChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedItem property changed handler.
            </summary>
            <param name="d">TabControl that changed its SelectedItem.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TabControl.SelectedIndexProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TabControl.SelectedIndex" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TabControl.SelectedIndex" />
            dependency property.
            </value>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabControl.OnSelectedIndexChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedIndex property changed handler.
            </summary>
            <param name="d">TabControl that changed its SelectedIndex.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabControl.SelectItem(Windows.UI.Xaml.Controls.TabItem,Windows.UI.Xaml.Controls.TabItem)">
            <summary>
            Given the TabItem in the list of Items, we will set that item as the
            currently selected item, and un-select the rest of the items.
            </summary>
            <param name="oldItem">Previous TabItem that was unselected.</param>
            <param name="newItem">New TabItem to set as the SelectedItem.</param>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TabControl.SelectedContentProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TabControl.SelectedContent" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TabControl.SelectedContent" />
            dependency property.
            </value>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabControl.OnSelectedContentChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedContent property changed handler.
            </summary>
            <param name="d">TabControl that changed its SelectedContent.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabControl.OnIsEnabledChanged(System.Object,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the IsEnabled property changes.
            </summary>
            <param name="sender">
            Control that triggers this property change.
            </param>
            <param name="e">Property changed args.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabControl.UpdateTabPanelLayout">
            <summary>
            This will hide the templates for the TabStripPlacements that are not
            being displayed, and show the template for the TabStripPlacement
            that is currently selected.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabControl.UpdateVisualState">
            <summary>
            Update the current visual state of the TabControl.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabControl.ChangeVisualState(System.Boolean)">
            <summary>
            Change to the correct visual state for the TabControl.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabControl.OnSelectionChanged(Windows.UI.Xaml.Controls.SelectionChangedEventArgs)">
            <summary>
            Raises the
            <see cref="E:System.Windows.Controls.TabControl.SelectionChanged" />
            event.
            </summary>
            <param name="args">
            Provides data for the
            <see cref="E:System.Windows.Controls.TabControl.SelectionChanged" />
            event.
            </param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabControl.FindNextTabItem(System.Int32,System.Int32)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="startIndex">Inherited code: Requires comment 1.</param>
            <param name="direction">Inherited code: Requires comment 2.</param>
            <returns>Inherited code: Requires comment 3.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabControl.GetItemAtIndex(System.Int32)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="index">Inherited code: Requires comment 1.</param>
            <returns>Inherited code: Requires comment 2.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabControl.UpdateSelectedContent(System.Object)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="content">Inherited code: Requires comment 1.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabControl.AddToTabPanel(Windows.UI.Xaml.Controls.TabItem)">
            <summary>
            Inherited code: Requires comment.
            </summary>
            <param name="tabItem">Inherited code: Requires comment 1.</param>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TabControl._desiredIndex">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TabControl._updateIndex">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TabControl.SelectedItem">
            <summary>
            Gets or sets the currently selected
            <see cref="T:System.Windows.Controls.TabItem" />.
            </summary>
            <value>
            The currently selected
            <see cref="T:System.Windows.Controls.TabItem" />, or null if a
            <see cref="T:System.Windows.Controls.TabItem" /> is not selected.
            </value>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TabControl.SelectedIndex">
            <summary>
            Gets or sets the index of the currently selected
            <see cref="T:System.Windows.Controls.TabItem" />.
            </summary>
            <value>
            The index of the currently selected
            <see cref="T:System.Windows.Controls.TabItem" />, or -1 if a
            <see cref="T:System.Windows.Controls.TabItem" /> is not selected.
            </value>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TabControl.SelectedContent">
            <summary>
            Gets the content of the currently selected
            <see cref="T:System.Windows.Controls.TabItem" />.
            </summary>
            <value>
            The content of the currently selected
            <see cref="T:System.Windows.Controls.TabItem" />. The default is
            null.
            </value>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.TabControl.SelectionChanged">
            <summary>
            Occurs when the selected
            <see cref="T:System.Windows.Controls.TabItem" /> changes.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TabControl.ElementTemplateTop">
            <summary>
            Gets or sets the TabStripPlacement Top template.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TabControl.ElementTabPanelTop">
            <summary>
            Gets or sets the TabPanel of the TabStripPlacement Top template.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TabControl.ElementContentTop">
            <summary>
            Gets or sets the ContentHost of the TabStripPlacement Top template.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.TabItem">
            <summary>
            Represents a selectable item in a
            <see cref="T:System.Windows.Controls.TabControl" />.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TabItem.ElementTemplateTopSelectedName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TabItem.ElementTemplateTopUnselectedName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TabItem.ElementHeaderTopSelectedName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TabItem.ElementHeaderTopUnselectedName">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabItem.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Windows.Controls.TabItem" /> class.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabItem.OnApplyTemplate">
            <summary>
            Builds the visual tree for the
            <see cref="T:System.Windows.Controls.TabItem" /> when a new template
            is applied.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TabItem.HeaderProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TabItem.Header" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TabItem.Header" />
            dependency property.
            </value>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabItem.OnHeaderChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Header property changed handler.
            </summary>
            <param name="d">TabItem that changed its Header.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabItem.OnHeaderChanged(System.Object,System.Object)">
            <summary>
            Called when the
            <see cref="P:System.Windows.Controls.TabItem.Header" /> property
            changes.
            </summary>
            <param name="oldHeader">
            The previous value of the
            <see cref="P:System.Windows.Controls.TabItem.Header" />
            property.
            </param>
            <param name="newHeader">
            The new value of the
            <see cref="P:System.Windows.Controls.TabItem.Header" />
            property.
            </param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabItem.UpdateHeaderVisuals">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TabItem.HasHeaderProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TabItem.HasHeader" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TabItem.HasHeader" />
            dependency property.
            </value>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TabItem.HeaderTemplateProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TabItem.HeaderTemplate" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TabItem.HeaderTemplate" />
            dependency property.
            </value>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabItem.OnHeaderTemplateChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            HeaderTemplate property changed handler.
            </summary>
            <param name="d">TabItem that changed its HeaderTemplate.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabItem.OnHeaderTemplateChanged(Windows.UI.Xaml.DataTemplate,Windows.UI.Xaml.DataTemplate)">
            <summary>
            Called when the
            <see cref="P:System.Windows.Controls.TabItem.HeaderTemplate" />
            property changes.
            </summary>
            <param name="oldHeaderTemplate">
            The previous value of the
            <see cref="P:System.Windows.Controls.TabItem.HeaderTemplate" />
            property.
            </param>
            <param name="newHeaderTemplate">
            The new value of the
            <see cref="P:System.Windows.Controls.TabItem.HeaderTemplate" />
            property.
            </param>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TabItem.IsSelectedProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TabItem.IsSelected" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TabItem.IsSelected" />
            dependency property.
            </value>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabItem.OnIsSelectedChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            IsSelected changed handler.
            </summary>
            <param name="d">TabItem that changed IsSelected.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabItem.OnSelected(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Called to indicate that the
            <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> property
            has changed to true.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the
            event data.
            </param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabItem.OnUnselected(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Called to indicate that the
            <see cref="P:System.Windows.Controls.TabItem.IsSelected" /> property
            has changed to false.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the
            event data.
            </param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabItem.OnContentChanged(System.Object,System.Object)">
            <summary>
            This method is invoked when the Content property changes.
            </summary>
            <param name="oldContent">
            The previous <see cref="T:System.Windows.Controls.TabItem" />
            content.
            </param>
            <param name="newContent">
            The new <see cref="T:System.Windows.Controls.TabItem" /> content.
            </param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabItem.OnIsEnabledChanged(System.Object,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the IsEnabled property changes.
            </summary>
            <param name="sender">
            Control that triggers this property change.
            </param>
            <param name="e">Property changed args.</param>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TabItem.IsFocusedProperty">
            <summary>
            Identifies the
            <see cref="P:System.Windows.Controls.TabItem.IsFocused" />
            dependency property.
            </summary>
            <value>
            The identifier for the
            <see cref="P:System.Windows.Controls.TabItem.IsFocused" />
            dependency property.
            </value>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabItem.OnIsFocusedPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            IsFocusedProperty property changed handler.
            </summary>
            <param name="d">TabItem that changed IsFocused.</param>
            <param name="e">The DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabItem.OnIsFocusChanged(Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the IsFocused property changes.
            </summary>
            <param name="e">
            A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />
            that contains the event data.
            </param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabItem.UpdateVisualState">
            <summary>
            Change to the correct visual state for the TabItem.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabItem.ChangeVisualState(System.Boolean)">
            <summary>
            Change to the correct visual state for the TabItem.
            </summary>
            <param name="useTransitions">
            True to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabItem.UpdateTabItemVisuals">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabItem.OnPointerExited(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Handles when the mouse leaves the control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The MouseEventArgs.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabItem.OnPointerEntered(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Handles when the mouse enters the control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The MouseEventArgs.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.TabItem.OnPointerPressed(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Handles the mouse left button down.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The MouseButtonEventArgs.</param>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TabItem._previousTemplate">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TabItem._previousHeader">
            <summary>
            Inherited code: Requires comment.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TabItem.SelectedBackgroundProperty">
            <summary>
            Identifies the SelectedBackground dependency property
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TabItem.SelectedForegroundProperty">
            <summary>
            Identifies the SelectedForeground dependency property
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TabItem.SelectedAccentProperty">
            <summary>
            Identifies the SelectedAccent dependency property
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TabItem.Header">
            <summary>
            Gets or sets the header of the
            <see cref="T:System.Windows.Controls.TabItem" />.
            </summary>
            <value>
            The current header of the
            <see cref="T:System.Windows.Controls.TabItem" />.
            </value>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TabItem.HasHeader">
            <summary>
            Gets a value indicating whether the
            <see cref="T:System.Windows.Controls.TabItem" /> has a header.
            </summary>
            <value>
            True if <see cref="P:System.Windows.Controls.TabItem.Header" /> is
            not null; otherwise, false.
            </value>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TabItem.HeaderTemplate">
            <summary>
            Gets or sets the template that is used to display the content of the
            <see cref="T:System.Windows.Controls.TabItem" /> header.
            </summary>
            <value>
            The current template that is used to display
            <see cref="T:System.Windows.Controls.TabItem" /> header content.
            </value>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TabItem.IsSelected">
            <summary>
            Gets or sets a value indicating whether the
            <see cref="T:System.Windows.Controls.TabItem" /> is currently
            selected.
            </summary>
            <value>
            True if the <see cref="T:System.Windows.Controls.TabItem" /> is
            selected; otherwise, false.
            </value>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TabItem.IsFocused">
            <summary>
            Gets a value indicating whether this element has logical focus.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TabItem.TabControlParent">
            <summary>
            Gets a reference to the TabControl that holds this TabItem.  It will
            step up the UI tree to find the TabControl that contains this
            TabItem.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TabItem.ElementTemplateTopSelected">
            <summary>
            Gets or sets the TabStripPlacement Top Selected template.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TabItem.ElementTemplateTopUnselected">
            <summary>
            Gets or sets the TabStripPlacement Top Unselected template.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TabItem.ElementHeaderTopSelected">
            <summary>
            Gets or sets the Header of the TabStripPlacement Top Selected
            template.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TabItem.ElementHeaderTopUnselected">
            <summary>
            Gets or sets the Header of the TabStripPlacement Top Unselected
            template.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TabItem._isMouseOver">
            <summary>
            Gets or sets a value indicating whether Inherited code: Requires comment.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TabItem.SelectedBackground">
            <summary>
            Gets or sets the bakground color of the selected INTERNAL_CorrespondingItem.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TabItem.SelectedForeground">
            <summary>
            Gets or sets the foreground color of the selected INTERNAL_CorrespondingItem.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TabItem.SelectedAccent">
            <summary>
            Gets or sets the accent color of the selected INTERNAL_CorrespondingItem.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.TabPanel">
            <summary>
            Handles the layout of <see cref="T:System.Windows.Controls.TabItem" />
            objects on a <see cref="T:System.Windows.Controls.TabControl" />.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.WrapPanel">
            <summary>
            Positions child elements in sequential position from left to right, breaking
            content to the next line at the edge of the containing box. Subsequent ordering
            happens sequentially from top to bottom or from right to left, depending
            on the value of the System.Windows.Controls.WrapPanel.Orientation property.
            </summary>
            <example>
            You can add a WrapPanel to the XAML as follows:
            <code lang="XAML" xml:space="preserve">
            <WrapPanel Background="Blue">
                <Border Width="80" Height="20" Background="White" Margin="5"/>
                <Border Width="60" Height="20" Background="Green" Margin="5"/>
                <Border Width="90" Height="20" Background="Red" Margin="5"/>
            </WrapPanel>
            </code>
            Or in C#:
            <code lang="C#">
            WrapPanel myWrapPanel = new WrapPanel();
            myWrapPanel.Width = 100;
            myWrapPanel.Height = 100;
            myWrapPanel.Background = new SolidColorBrush(Windows.UI.Colors.Blue);
            myWrapPanel.HorizontalAlignment=HorizontalAlignment.Left;
            //Then you can add the children element using myWrapPanel.Children.Add(...).
            //Do not forget to add the WrapPanel itself to the visual tree.
            </code>
            </example>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.WrapPanel.#ctor">
            <summary>
            Initializes a new instance of the System.Windows.Controls.WrapPanel class.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.WrapPanel.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.WrapPanel.Orientation">
            <summary>
            Gets or sets a value that specifies the dimension in which child content
            is arranged.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ToolTip">
            <summary>
            Represents a control that creates a pop-up window that displays information for an element in the UI.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ToolTip.#ctor">
            <summary>
            Initializes a new instance of the ToolTip class.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ToolTip.IsOpenProperty">
            <summary>
            Identifies the IsOpen dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ToolTip.HorizontalOffsetProperty">
            <summary>
            Identifies the HorizontalOffset dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ToolTip.VerticalOffsetProperty">
            <summary>
            Identifies the VerticalOffset dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ToolTip.IsOpen">
            <summary>
            Gets or sets a value that indicates whether the ToolTip is visible. True if the ToolTip is visible; otherwise, false. The default is false.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.ToolTip.Closed">
            <summary>
            Occurs when a ToolTip is closed and is no longer visible.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.ToolTip.Opened">
            <summary>
            Occurs when a ToolTip becomes visible.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ToolTip.HorizontalOffset">
            <summary>
            Gets or sets the horizontal distance between the target origin and the pop-up alignment point. The default is 0.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ToolTip.VerticalOffset">
            <summary>
            Gets or sets the vertical distance between the target origin and the pop-up alignment point. The default is 0.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ToolTipService">
            <summary>
            Represents a service that provides static methods to display a tooltip.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ToolTipService.PlacementProperty">
            <summary>
            Identifies the ToolTipService.Placement XAML attached property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ToolTipService.PlacementTargetProperty">
            <summary>
            Identifies the ToolTipService.PlacementTarget XAML attached property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ToolTipService.ToolTipProperty">
            <summary>
            Identifies the ToolTipService.ToolTip XAML attached property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ToolTipService.GetToolTip(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the value of the ToolTipService.ToolTip XAML attached property for an object.
            </summary>
            <param name="element">The object from which the property value is read.</param>
            <returns>The object's tooltip content.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ToolTipService.SetToolTip(Windows.UI.Xaml.DependencyObject,System.Object)">
            <summary>
            Sets the value of the ToolTipService.ToolTip XAML attached property.
            </summary>
            <param name="element">The object to set tooltip content on.</param>
            <param name="value">The value to set for tooltip content.</param>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.VisualStates">
            <summary>
            Names and helpers for visual states in the controls.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.GroupCommon">
            <summary>
            Common state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateNormal">
            <summary>
            Normal state of the Common state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateReadOnly">
            <summary>
            Normal state of the Common state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateMouseOver">
            <summary>
            MouseOver state of the Common state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StatePressed">
            <summary>
            Pressed state of the Common state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateDisabled">
            <summary>
            Disabled state of the Common state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.GroupFocus">
            <summary>
            Focus state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateUnfocused">
            <summary>
            Unfocused state of the Focus state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateFocused">
            <summary>
            Focused state of the Focus state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.GroupSelection">
            <summary>
            Selection state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateSelected">
            <summary>
            Selected state of the Selection state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateUnselected">
            <summary>
            Unselected state of the Selection state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateSelectedInactive">
            <summary>
            Selected inactive state of the Selection state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.GroupExpansion">
            <summary>
            Expansion state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateExpanded">
            <summary>
            Expanded state of the Expansion state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateCollapsed">
            <summary>
            Collapsed state of the Expansion state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.GroupPopup">
            <summary>
            Popup state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StatePopupOpened">
            <summary>
            Opened state of the Popup state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StatePopupClosed">
            <summary>
            Closed state of the Popup state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.GroupValidation">
            <summary>
            ValidationStates state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateValid">
            <summary>
            The valid state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateInvalidFocused">
            <summary>
            Invalid, focused state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateInvalidUnfocused">
            <summary>
            Invalid, unfocused state for the ValidationStates group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.GroupExpandDirection">
            <summary>
            ExpandDirection state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateExpandDown">
            <summary>
            Down expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateExpandUp">
            <summary>
            Up expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateExpandLeft">
            <summary>
            Left expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateExpandRight">
            <summary>
            Right expand direction state of ExpandDirection state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.GroupHasItems">
            <summary>
            HasItems state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateHasItems">
            <summary>
            HasItems state of the HasItems state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateNoItems">
            <summary>
            NoItems state of the HasItems state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.GroupIncrease">
            <summary>
            Increment state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateIncreaseEnabled">
            <summary>
            State enabled for increment group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateIncreaseDisabled">
            <summary>
            State disabled for increment group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.GroupDecrease">
            <summary>
            Decrement state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateDecreaseEnabled">
            <summary>
            State enabled for decrement group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateDecreaseDisabled">
            <summary>
            State disabled for decrement group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.GroupInteractionMode">
            <summary>
            InteractionMode state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateEdit">
            <summary>
            Edit of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateDisplay">
            <summary>
            Display of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.GroupLocked">
            <summary>
            DisplayMode state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateLocked">
            <summary>
            Edit of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateUnlocked">
            <summary>
            Display of the DisplayMode state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateActive">
            <summary>
            Active state.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateInactive">
            <summary>
            Inactive state.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.GroupActive">
            <summary>
            Active state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateUnwatermarked">
            <summary>
            Non-watermarked state.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateWatermarked">
            <summary>
            Watermarked state.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.GroupWatermark">
            <summary>
            Watermark state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateCalendarButtonUnfocused">
            <summary>
            Unfocused state for Calendar Buttons.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateCalendarButtonFocused">
            <summary>
            Focused state for Calendar Buttons.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.GroupCalendarButtonFocus">
            <summary>
            CalendarButtons Focus state group.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateBusy">
            <summary>
            Busy state for BusyIndicator.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateIdle">
            <summary>
            Idle state for BusyIndicator.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.GroupBusyStatus">
            <summary>
            Busyness group name.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateVisible">
            <summary>
            Visible state name for BusyIndicator.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.StateHidden">
            <summary>
            Hidden state name for BusyIndicator.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.VisualStates.GroupVisibility">
            <summary>
            BusyDisplay group.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.VisualStates.GoToState(Windows.UI.Xaml.Controls.Control,System.Boolean,System.String[])">
            <summary>
            Use VisualStateManager to change the visual state of the control.
            </summary>
            <param name="control">
            Control whose visual state is being changed.
            </param>
            <param name="useTransitions">
            A value indicating whether to use transitions when updating the
            visual state, or to snap directly to the new visual state.
            </param>
            <param name="stateNames">
            Ordered list of state names and fallback states to transition into.
            Only the first state to be found will be used.
            </param>
        </member>
        <member name="T:System.Windows.Input.Cursor">
            <summary>
            Represents the image used for the mouse pointer.
            </summary>
        </member>
        <member name="M:System.Windows.Input.Cursor.Dispose">
            <summary>
            Releases the resources used by the System.Windows.Input.Cursor class.
            </summary>
        </member>
        <member name="T:System.Windows.Input.Cursors">
            <summary>
            Defines a set of default cursors.
            </summary>
        </member>
        <member name="P:System.Windows.Input.Cursors.AppStarting">
            <summary>
            Gets the System.Windows.Input.Cursor that appears when an application is
            starting.
            </summary>
        </member>
        <member name="P:System.Windows.Input.Cursors.Arrow">
            <summary>
            Gets the Arrow System.Windows.Input.Cursor.
            </summary>
        </member>
        <member name="P:System.Windows.Input.Cursors.Cross">
            <summary>
            Gets the crosshair System.Windows.Input.Cursor.
            </summary>
        </member>
        <member name="P:System.Windows.Input.Cursors.Hand">
            <summary>
            Gets a hand System.Windows.Input.Cursor.
            </summary>
        </member>
        <member name="P:System.Windows.Input.Cursors.Help">
            <summary>
             Gets a help System.Windows.Input.Cursor which is a combination of an arrow
             and a question mark.
             </summary>
        </member>
        <member name="P:System.Windows.Input.Cursors.IBeam">
            <summary>
            Gets an I-beam System.Windows.Input.Cursor, which is used to show where the
            text cursor appears when the mouse is clicked.
            </summary>
        </member>
        <member name="P:System.Windows.Input.Cursors.No">
            <summary>
            Gets a System.Windows.Input.Cursor with which indicates that a particular
            region is invalid for a given operation.
            </summary>
        </member>
        <member name="P:System.Windows.Input.Cursors.None">
            <summary>
            Gets a special cursor that is invisible.
            </summary>
        </member>
        <member name="P:System.Windows.Input.Cursors.SizeAll">
            <summary>
            Gets a four-headed sizing System.Windows.Input.Cursor, which consists of
            four joined arrows that point north, south, east, and west.
            </summary>
        </member>
        <member name="P:System.Windows.Input.Cursors.SizeNESW">
            <summary>
            Gets a two-headed northeast/southwest sizing System.Windows.Input.Cursor.
            </summary>
        </member>
        <member name="P:System.Windows.Input.Cursors.SizeNS">
            <summary>
            Gets a two-headed north/south sizing System.Windows.Input.Cursor.
            </summary>
        </member>
        <member name="P:System.Windows.Input.Cursors.SizeNWSE">
            <summary>
            Gets a two-headed northwest/southeast sizing System.Windows.Input.Cursor.
            </summary>
        </member>
        <member name="P:System.Windows.Input.Cursors.SizeWE">
            <summary>
            Gets a two-headed west/east sizing System.Windows.Input.Cursor.
            </summary>
        </member>
        <member name="P:System.Windows.Input.Cursors.Wait">
            <summary>
            Specifies a wait (or hourglass) System.Windows.Input.Cursor.
            </summary>
        </member>
        <member name="T:System.Windows.Markup.StaticResourceExtension">
            <summary>
            Class used to access elements inside the XAML code
            </summary>
        </member>
        <member name="M:System.Windows.Markup.StaticResourceExtension.#ctor">
            <summary>
            Initializes a new instance of StaticResource.
            </summary>
        </member>
        <member name="M:System.Windows.Markup.StaticResourceExtension.#ctor(System.String)">
            <summary>
            Initializes a new instance of StaticResource with the given ResourceKey.
            </summary>
            <param name="resourceKey">The ResourceKey for the StaticResource</param>
        </member>
        <member name="M:System.Windows.Markup.StaticResourceExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            returns an object that is provided as the value of the target property for this StaticResource.
            </summary>
            <param name="serviceProvider">A service provider helper that can provide services for the StaticResource.</param>
            <returns>An object that is provided as the value of the target property for this StaticResource.</returns>
        </member>
        <member name="P:System.Windows.Markup.StaticResourceExtension.ResourceKey">
            <summary>
            The key of the StaticResource.
            </summary>
        </member>
        <member name="M:System.Windows.Markup.XamlParseException.#ctor">
            <summary>
            Initializes a new instance of the System.Windows.Markup.XamlParseException
            class.
            </summary>
        </member>
        <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the System.Windows.Markup.XamlParseException
            class, using the specified exception message string.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the System.Windows.Markup.XamlParseException
            class, using the specified exception message string and inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The initial exception that occurred.</param>
        </member>
        <member name="T:System.Windows.Media.Effects.DropShadowEffect">
            <summary>
            A bitmap effect that paints a drop shadow around the target texture.
            </summary>
        </member>
        <member name="T:System.Windows.Media.Effects.Effect">
            <summary>
            Provides a custom bitmap effect.
            </summary>
        </member>
        <member name="M:System.Windows.Media.Effects.Effect.#ctor">
            <summary>
            Initializes a new instance of the System.Windows.Media.Effects.Effect class.
            </summary>
        </member>
        <member name="M:System.Windows.Media.Effects.DropShadowEffect.#ctor">
            <summary>
            Initializes a new instance of the System.Windows.Media.Effects.DropShadowEffect
            class.
            </summary>
        </member>
        <member name="F:System.Windows.Media.Effects.DropShadowEffect.BlurRadiusProperty">
            <summary>
            Identifies the System.Windows.Media.Effects.DropShadowEffect.BlurRadius dependency
            property.
            </summary>
        </member>
        <member name="F:System.Windows.Media.Effects.DropShadowEffect.ColorProperty">
            <summary>
            Identifies the System.Windows.Media.Effects.DropShadowEffect.Color dependency
            property.
            </summary>
        </member>
        <member name="F:System.Windows.Media.Effects.DropShadowEffect.DirectionProperty">
            <summary>
            Identifies the System.Windows.Media.Effects.DropShadowEffect.Direction dependency
            property.
            </summary>
        </member>
        <member name="F:System.Windows.Media.Effects.DropShadowEffect.OpacityProperty">
            <summary>
            Identifies the System.Windows.Media.Effects.DropShadowEffect.Opacity dependency
            property.
            </summary>
        </member>
        <member name="F:System.Windows.Media.Effects.DropShadowEffect.ShadowDepthProperty">
            <summary>
            Identifies the System.Windows.Media.Effects.DropShadowEffect.ShadowDepth
            dependency property.
            </summary>
        </member>
        <member name="P:System.Windows.Media.Effects.DropShadowEffect.BlurRadius">
            <summary>
            Gets or sets a value that indicates the radius of the shadow's blur effect.
            </summary>
        </member>
        <member name="P:System.Windows.Media.Effects.DropShadowEffect.Color">
            <summary>
            Gets or sets the color of the drop shadow.
            </summary>
        </member>
        <member name="P:System.Windows.Media.Effects.DropShadowEffect.Direction">
            <summary>
            Gets or sets the direction of the drop shadow.
            </summary>
        </member>
        <member name="P:System.Windows.Media.Effects.DropShadowEffect.Opacity">
            <summary>
            Gets or sets the opacity of the drop shadow.
            </summary>
        </member>
        <member name="P:System.Windows.Media.Effects.DropShadowEffect.ShadowDepth">
            <summary>
            Gets or sets the distance of the drop shadow below the texture.
            </summary>
        </member>
        <member name="T:Windows.System.VirtualKey">
            <summary>
            Specifies the values for each virtual key.
            </summary>
        </member>
        <member name="F:Windows.System.VirtualKey.None">
            <summary>
            No virtual key value.
            </summary>
        </member>
        <member name="F:Windows.System.VirtualKey.LeftButton">
            <summary>
            The left mouse button.
            </summary>
        </member>
        <member name="F:Windows.System.VirtualKey.RightButton">
            <summary>
            The right mouse button.
            </summary>
        </member>
        <member name="T:Windows.UI.Core.CoreDispatcher">
            <summary>
            Provides the Windows Runtime core event message dispatcher. Instances of
            this type are responsible for processing the window messages and dispatching
            the events to the client.
            </summary>
        </member>
        <member name="M:Windows.UI.Core.CoreDispatcher.BeginInvoke(System.Action)">
            <summary>
            Executes the specified delegate asynchronously on the thread that the System.Windows.Threading.Dispatcher was created on.
            </summary>
            <param name="method">
            The delegate to a method, which is
            pushed onto the System.Windows.Threading.Dispatcher event queue.
            </param>
        </member>
        <member name="T:Windows.UI.Text.FontWeight">
            <summary>
            Refers to the density of a typeface, in terms of the lightness or heaviness
            of the strokes.
            </summary>
        </member>
        <member name="F:Windows.UI.Text.FontWeight.Weight">
            <summary>
            The font weight expressed as a numeric value. See Remarks.
            </summary>
        </member>
        <member name="T:Windows.Devices.Input.PointerDeviceType">
            <summary>
            Enumerates pointer device types.
            </summary>
        </member>
        <member name="F:Windows.Devices.Input.PointerDeviceType.Touch">
            <summary>
            A touch-enabled device
            </summary>
        </member>
        <member name="F:Windows.Devices.Input.PointerDeviceType.Pen">
            <summary>
            Pen
            </summary>
        </member>
        <member name="F:Windows.Devices.Input.PointerDeviceType.Mouse">
            <summary>
            Mouse
            </summary>
        </member>
        <member name="T:Windows.Foundation.Point">
            <summary>
            Represents an x- and y-coordinate pair in two-dimensional
            space. Can also represent a logical point for certain property usages.
            </summary>
        </member>
        <member name="M:Windows.Foundation.Point.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a Windows.Foundation.Point structure that
            contains the specified values.
            </summary>
            <param name="x">The x-coordinate value of the Windows.Foundation.Point structure.</param>
            <param name="y">The y-coordinate value of the Windows.Foundation.Point structure.</param>
        </member>
        <member name="M:Windows.Foundation.Point.op_Inequality(Windows.Foundation.Point,Windows.Foundation.Point)">
            <summary>
            Compares two Windows.Foundation.Point structures for inequality
            </summary>
            <param name="point1">The first point to compare.</param>
            <param name="point2">The second point to compare.</param>
            <returns>
            true if point1 and point2 have different Windows.Foundation.Point.X or Windows.Foundation.Point.Y
            values; false if point1 and point2 have the same Windows.Foundation.Point.X
            and Windows.Foundation.Point.Y values.
            </returns>
        </member>
        <member name="M:Windows.Foundation.Point.op_Equality(Windows.Foundation.Point,Windows.Foundation.Point)">
            <summary>
            Compares two Windows.Foundation.Point structures for equality
            </summary>
            <param name="point1">The first point to compare.</param>
            <param name="point2">The second point to compare.</param>
            <returns>
            true if both the Windows.Foundation.Point.X and Windows.Foundation.Point.Y
            values of point1 and point2 are equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Windows.Foundation.Point.Equals(System.Object)">
            <summary>
            Determines whether the specified object is a Windows.Foundation.Point
            and whether it contains the same values as this Windows.Foundation.Point.
            </summary>
            <param name="o">The object to compare.</param>
            <returns>
            true if obj is a Windows.Foundation.Point and contains the same Windows.Foundation.Point.X
            and Windows.Foundation.Point.Y values as this Windows.Foundation.Point; otherwise,
            false.
            </returns>
        </member>
        <member name="M:Windows.Foundation.Point.Equals(Windows.Foundation.Point)">
            <summary>
            Compares two Windows.Foundation.Point structures for
            equality.
            </summary>
            <param name="value">The point to compare to this instance.</param>
            <returns>
            true if both Windows.Foundation.Point structures contain the same Windows.Foundation.Point.X
            and Windows.Foundation.Point.Y values; otherwise, false.
            </returns>
        </member>
        <member name="M:Windows.Foundation.Point.GetHashCode">
            <summary>
            Returns the hash code for this Windows.Foundation.Point.
            </summary>
            <returns>The hash code for this Windows.Foundation.Point.</returns>
        </member>
        <member name="M:Windows.Foundation.Point.ToString">
            <summary>
            Creates a System.String representation of this Windows.Foundation.Point.
            </summary>
            <returns>
            A System.String containing the Windows.Foundation.Point.X and Windows.Foundation.Point.Y
            values of this Windows.Foundation.Point structure.
            </returns>
        </member>
        <member name="M:Windows.Foundation.Point.#cctor">
            <summary>
            Creates a System.String representation of this Windows.Foundation.Point.
            </summary>
            <param name="provider">Culture-specific formatting information.</param>
            <returns>
            A System.String containing the Windows.Foundation.Point.X and Windows.Foundation.Point.Y
            values of this Windows.Foundation.Point structure.
            </returns>
        </member>
        <member name="P:Windows.Foundation.Point.X">
            <summary>
            Gets or sets the Windows.Foundation.Point.X-coordinate
            value of this Windows.Foundation.Point structure.
            </summary>
        </member>
        <member name="P:Windows.Foundation.Point.Y">
            <summary>
            Gets or sets the Windows.Foundation.Point.Y-coordinate
            value of this Windows.Foundation.Point.
            </summary>
        </member>
        <member name="T:Windows.Foundation.Rect">
            <summary>
            Describes the width, height, and point origin of a rectangle.
            </summary>
        </member>
        <member name="M:Windows.Foundation.Rect.#ctor(Windows.Foundation.Point,Windows.Foundation.Point)">
            <summary>
            Initializes a Windows.Foundation.Rect structure that
            is exactly large enough to contain the two specified points.
            </summary>
            <param name="point1">The first point that the new rectangle must contain.</param>
            <param name="point2">The second point that the new rectangle must contain.</param>
        </member>
        <member name="M:Windows.Foundation.Rect.#ctor(Windows.Foundation.Point,Windows.Foundation.Size)">
            <summary>
            Initializes a Windows.Foundation.Rect structure based
            on an origin and size.
            </summary>
            <param name="location">The origin of the new Windows.Foundation.Rect.</param>
            <param name="size">The size of the new Windows.Foundation.Rect.</param>
        </member>
        <member name="M:Windows.Foundation.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a Windows.Foundation.Rect structure that
            has the specified x-coordinate, y-coordinate, width, and height.
            </summary>
            <param name="x">The x-coordinate of the top-left corner of the rectangle.</param>
            <param name="y">The y-coordinate of the top-left corner of the rectangle.</param>
            <param name="width">The width of the rectangle.</param>
            <param name="height">The height of the rectangle.</param>
        </member>
        <member name="M:Windows.Foundation.Rect.op_Inequality(Windows.Foundation.Rect,Windows.Foundation.Rect)">
            <summary>
            Compares two Windows.Foundation.Rect structures for inequality.
            </summary>
            <param name="rect1">The first rectangle to compare.</param>
            <param name="rect2">The second rectangle to compare.</param>
            <returns>
            true if the Windows.Foundation.Rect structures do not have the same x,y,width,height
            property values; otherwise, false.
            </returns>
        </member>
        <member name="M:Windows.Foundation.Rect.op_Equality(Windows.Foundation.Rect,Windows.Foundation.Rect)">
            <summary>
            Compares two Windows.Foundation.Rect structures for equality.
            </summary>
            <param name="rect1">The first rectangle to compare.</param>
            <param name="rect2">The second rectangle to compare.</param>
            <returns>
            true if the Windows.Foundation.Rect structures have the same x,y,width,height
            property values; otherwise, false.
            </returns>
        </member>
        <member name="M:Windows.Foundation.Rect.Contains(Windows.Foundation.Point)">
            <summary>
            Indicates whether the rectangle described by the Windows.Foundation.Rect
            contains the specified point.
            </summary>
            <param name="point">The point to check.</param>
            <returns>
            true if the rectangle described by the Windows.Foundation.Rect contains the
            specified point; otherwise, false.
            </returns>
        </member>
        <member name="M:Windows.Foundation.Rect.Equals(System.Object)">
            <summary>
            Indicates whether the specified object is equal to the
            current Windows.Foundation.Rect.
            </summary>
            <param name="o">The object to compare to the current rectangle.</param>
            <returns>
            true if o is a Windows.Foundation.Rect and has the same x,y,width,height
            values as the current Windows.Foundation.Rect; otherwise, false.
            </returns>
        </member>
        <member name="M:Windows.Foundation.Rect.Equals(Windows.Foundation.Rect)">
            <summary>
            Indicates whether the specified Windows.Foundation.Rect
            is equal to the current Windows.Foundation.Rect.
            </summary>
            <param name="value">The rectangle to compare to the current rectangle.</param>
            <returns>
            true if the specified Windows.Foundation.Rect has the same x,y,width,height
            property values as the current Windows.Foundation.Rect; otherwise, false.
            </returns>
        </member>
        <member name="M:Windows.Foundation.Rect.GetHashCode">
            <summary>
            Creates a hash code for the Windows.Foundation.Rect.
            </summary>
            <returns>A hash code for the current Windows.Foundation.Rect structure.</returns>
        </member>
        <member name="M:Windows.Foundation.Rect.ToString">
            <summary>
            Returns a string representation of the Windows.Foundation.Rect
            structure.
            </summary>
            <returns>
            A string representation of the current Windows.Foundation.Rect structure.
            The string has the following form: "Windows.Foundation.Rect.X,Windows.Foundation.Rect.Y,Windows.Foundation.Rect.Width,Windows.Foundation.Rect.Height".
            </returns>
        </member>
        <member name="M:Windows.Foundation.Rect.Union(Windows.Foundation.Point)">
            <summary>
            Expands the rectangle represented by the current Windows.Foundation.Rect
            exactly enough to contain the specified point.
            </summary>
            <param name="point">The point to include.</param>
        </member>
        <member name="M:Windows.Foundation.Rect.Union(Windows.Foundation.Rect)">
            <summary>
            Expands the rectangle represented by the current Windows.Foundation.Rect
            exactly enough to contain the specified rectangle.
            </summary>
            <param name="rect">The rectangle to include.</param>
        </member>
        <member name="P:Windows.Foundation.Rect.Bottom">
            <summary>
            Gets the y-axis value of the bottom of the rectangle.
            </summary>
        </member>
        <member name="P:Windows.Foundation.Rect.Empty">
            <summary>
            Gets a special value that represents a rectangle with
            no position or area.
            </summary>
        </member>
        <member name="P:Windows.Foundation.Rect.Height">
            <summary>
            Gets or sets the height of the rectangle.
            </summary>
        </member>
        <member name="P:Windows.Foundation.Rect.IsEmpty">
            <summary>
            Gets a value that indicates whether the rectangle is
            the Windows.Foundation.Rect.Empty rectangle.
            </summary>
        </member>
        <member name="P:Windows.Foundation.Rect.Left">
            <summary>
            Gets the x-axis value of the left side of the rectangle.
            </summary>
        </member>
        <member name="P:Windows.Foundation.Rect.Right">
            <summary>
            Gets the x-axis value of the right side of the rectangle.
            </summary>
        </member>
        <member name="P:Windows.Foundation.Rect.Top">
            <summary>
            Gets the y-axis position of the top of the rectangle.
            </summary>
        </member>
        <member name="P:Windows.Foundation.Rect.Width">
            <summary>
            Gets or sets the width of the rectangle.
            </summary>
        </member>
        <member name="P:Windows.Foundation.Rect.X">
            <summary>
            Gets or sets the x-axis value of the left side of the
            rectangle.
            </summary>
        </member>
        <member name="P:Windows.Foundation.Rect.Y">
            <summary>
            Gets or sets the y-axis value of the top side of the
            rectangle.
            </summary>
        </member>
        <member name="T:Windows.Foundation.Size">
            <summary>
            Describes the width and height of an object.
            </summary>
        </member>
        <member name="M:Windows.Foundation.Size.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the Windows.Foundation.Size
            structure and assigns it an initial width and height.
            </summary>
            <param name="width">The initial width of the instance of Windows.Foundation.Size.</param>
            <param name="height">The initial height of the instance of Windows.Foundation.Size.</param>
        </member>
        <member name="M:Windows.Foundation.Size.op_Inequality(Windows.Foundation.Size,Windows.Foundation.Size)">
            <summary>
            Compares two instances of Windows.Foundation.Size for
            inequality.</summary>
            <param name="size1">The first instance of Windows.Foundation.Size to compare.</param>
            <param name="size2">The second instance of Windows.Foundation.Size to compare.</param>
            <returns>
            true if the instances of Windows.Foundation.Size are not equal; otherwise
            false.
            </returns>
        </member>
        <member name="M:Windows.Foundation.Size.op_Equality(Windows.Foundation.Size,Windows.Foundation.Size)">
            <summary>
            Compares two instances of Windows.Foundation.Size for
            equality.</summary>
            <param name="size1">The first instance of Windows.Foundation.Size to compare.</param>
            <param name="size2">The second instance of Windows.Foundation.Size to compare.</param>
            <returns>
            true if the two instances of Windows.Foundation.Size are equal; otherwise
            false.
            </returns>
        </member>
        <member name="M:Windows.Foundation.Size.Equals(System.Object)">
            <summary>
            Compares an object to an instance of Windows.Foundation.Size
            for equality.
            </summary>
            <param name="o">The System.Object to compare.</param>
            <returns>true if the sizes are equal; otherwise, false.</returns>
        </member>
        <member name="M:Windows.Foundation.Size.Equals(Windows.Foundation.Size)">
            <summary>
            Compares a value to an instance of Windows.Foundation.Size
            for equality.
            </summary>
            <param name="value">The size to compare to this current instance of Windows.Foundation.Size.</param>
            <returns>true if the instances of Windows.Foundation.Size are equal; otherwise, false.</returns>
        </member>
        <member name="M:Windows.Foundation.Size.GetHashCode">
            <summary>
            Gets the hash code for this instance of Windows.Foundation.Size.
            </summary>
            <returns>The hash code for this instance of Windows.Foundation.Size.</returns>
        </member>
        <member name="M:Windows.Foundation.Size.ToString">
            <summary>
            Returns a string representation of this Windows.Foundation.Size.
            </summary>
            <returns>A string representation of this Windows.Foundation.Size.</returns>
        </member>
        <member name="P:Windows.Foundation.Size.Empty">
            <summary>
            Gets a value that represents a static empty Windows.Foundation.Size.
            </summary>
        </member>
        <member name="P:Windows.Foundation.Size.Height">
            <summary>
            Gets or sets the height of this instance of Windows.Foundation.Size in pixels. The default is 0. The value cannot be negative.
            </summary>
        </member>
        <member name="P:Windows.Foundation.Size.IsEmpty">
            <summary>
            Gets a value that indicates whether this instance of
            Windows.Foundation.Size is Windows.Foundation.Size.Empty.
            </summary>
        </member>
        <member name="P:Windows.Foundation.Size.Width">
            <summary>
            Gets or sets the width of this instance of Windows.Foundation.Size.
            </summary>
        </member>
        <member name="T:Windows.System.VirtualKeyModifiers">
            <summary>
            Specifies the virtual key used to modify another keypress.
            </summary>
        </member>
        <member name="F:Windows.System.VirtualKeyModifiers.None">
            <summary>
            No virtual key modifier.
            </summary>
        </member>
        <member name="F:Windows.System.VirtualKeyModifiers.Control">
            <summary>
            The Ctrl (control) virtual key.
            </summary>
        </member>
        <member name="F:Windows.System.VirtualKeyModifiers.Menu">
            <summary>
            The Menu (Alt) virtual key.
            </summary>
        </member>
        <member name="F:Windows.System.VirtualKeyModifiers.Shift">
            <summary>
            The Shift virtual key.
            </summary>
        </member>
        <member name="T:Windows.UI.Core.WindowSizeChangedEventArgs">
            <summary>
            Contains the argument returned by a window size change event.
            </summary>
        </member>
        <member name="P:Windows.UI.Core.WindowSizeChangedEventArgs.Handled">
            <summary>
            Gets or sets whether the window size event was handled.
            </summary>
        </member>
        <member name="P:Windows.UI.Core.WindowSizeChangedEventArgs.Size">
            <summary>
            Gets the new size of the window.
            </summary>
        </member>
        <member name="T:Windows.UI.Text.FontWeights">
            <summary>
            Provides a set of predefined font weights as static property values.
            </summary>
        </member>
        <member name="P:Windows.UI.Text.FontWeights.Black">
            <summary>
            Specifies a "Black" font weight.
            </summary>
        </member>
        <member name="P:Windows.UI.Text.FontWeights.Bold">
            <summary>
            Specifies a "Bold" font weight.
            </summary>
        </member>
        <member name="P:Windows.UI.Text.FontWeights.DemiBold">
            <summary>
            Specifies a "Demi-bold" font weight.
            </summary>
        </member>
        <member name="P:Windows.UI.Text.FontWeights.ExtraBlack">
            <summary>
            Specifies an "ExtraBlack" font weight.
            </summary>
        </member>
        <member name="P:Windows.UI.Text.FontWeights.ExtraBold">
            <summary>
            Specifies an "ExtraBold" font weight.
            </summary>
        </member>
        <member name="P:Windows.UI.Text.FontWeights.ExtraLight">
            <summary>
            Specifies an "ExtraLight" font weight.
            </summary>
        </member>
        <member name="P:Windows.UI.Text.FontWeights.Heavy">
            <summary>
            Specifies a "Heavy" font weight.
            </summary>
        </member>
        <member name="P:Windows.UI.Text.FontWeights.Light">
            <summary>
            Specifies a "Light" font weight.
            </summary>
        </member>
        <member name="P:Windows.UI.Text.FontWeights.Medium">
            <summary>
            Specifies a "Medium" font weight.
            </summary>
        </member>
        <member name="P:Windows.UI.Text.FontWeights.Normal">
            <summary>
            Specifies a "Normal" font weight.
            </summary>
        </member>
        <member name="P:Windows.UI.Text.FontWeights.Regular">
            <summary>
            Specifies a "Regular" font weight.
            </summary>
        </member>
        <member name="P:Windows.UI.Text.FontWeights.SemiBold">
            <summary>
            Specifies a "SemiBold" font weight.
            </summary>
        </member>
        <member name="P:Windows.UI.Text.FontWeights.SemiLight">
            <summary>
            Specifies a "SemiLight" font weight.
            </summary>
        </member>
        <member name="P:Windows.UI.Text.FontWeights.Thin">
            <summary>
            Specifies a "Thin" font weight.
            </summary>
        </member>
        <member name="P:Windows.UI.Text.FontWeights.UltraBlack">
            <summary>
            Specifies an "Ultra-black" font weight.
            </summary>
        </member>
        <member name="P:Windows.UI.Text.FontWeights.UltraBold">
            <summary>
            Specifies an "Ultra-bold" font weight.
            </summary>
        </member>
        <member name="P:Windows.UI.Text.FontWeights.UltraLight">
            <summary>
            Specifies an "Ultra-light" font weight.
            </summary>
        </member>
        <member name="T:Windows.UI.Text.TextDecorations">
            <summary>
            Provides a set of predefined text decorations.
            </summary>
        </member>
        <member name="F:Windows.UI.Text.TextDecorations.None">
            <summary>
            Defines a line above the text
            </summary>
        </member>
        <member name="F:Windows.UI.Text.TextDecorations.OverLine">
            <summary>
            Defines a line above the text
            </summary>
        </member>
        <member name="F:Windows.UI.Text.TextDecorations.Strikethrough">
            <summary>
            Defines a line through the text
            </summary>
        </member>
        <member name="F:Windows.UI.Text.TextDecorations.Underline">
            <summary>
            Defines a line below the text
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Primitives.ToggleButton">
            <summary>
            Base class for controls that can switch states, such as CheckBox and RadioButton.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty">
            <summary>
            Identifies the IsChecked dependency property
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Primitives.ToggleButton.IsThreeStateProperty">
            <summary>
            Identifies the ToggleButton.IsThreeState dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.ToggleButton.SubscribeToClickEventForChildContainerDiv(System.Object,System.Object)">
            <summary>
            This method is used to subscribe to the click event on the child container so that clicking on it toggles it.
            </summary>
            <param name="divWhereToPlaceChild"></param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.ToggleButton.OnChecked">
            <summary>
            Raises the Checked event.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.ToggleButton.OnIndeterminate">
            <summary>
            Raises the Indeterminate event.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Primitives.ToggleButton.OnUnchecked">
            <summary>
            Raises the Unchecked event.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.ToggleButton.IsChecked">
            <summary>
            Gets or sets whether the ToggleButton is checked.
            Returns:
            True if the ToggleButton is checked; false if the ToggleButton is unchecked;
            otherwise null. The default is false.  If you are programming using C# or
            Visual Basic, the type of this property is projected as bool? (a nullable
            Boolean).
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Primitives.ToggleButton.IsThreeState">
            <summary>
            Determines whether the control supports two or three states.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.Primitives.ToggleButton.Checked">
            <summary>
            Occurs when a ToggleButton is checked.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.Primitives.ToggleButton.Indeterminate">
            <summary>
            Occurs when the state of a ToggleButton is switched to the indeterminate state.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.Primitives.ToggleButton.Unchecked">
            <summary>
            Occurs when a ToggleButton is unchecked.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ContentPresenter">
            <summary>
            Displays the content of a ContentControl.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ControlTemplate">
            <summary>
            Defines the element tree that is applied as the control template for a control.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.FrameworkTemplate">
            <summary>
            Creates an element tree of elements.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.FrameworkTemplate.INTERNAL_InstantiateFrameworkTemplate">
            <summary>
            Creates an instance of the Template. Intented to be called for templates that have no owner, such as DataTemplates (not ControlTemplates).
            </summary>
            <returns>The instantiated template.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.FrameworkTemplate.INTERNAL_InstantiateAndAttachControlTemplate(Windows.UI.Xaml.Controls.Control)">
            <summary>
            Creates an instance of the Template, attaches it to the Visual Tree, and calls "OnApplyTemplate". This method is intented to be called for ControlTemplates only (not DataTemplates).
            </summary>
            <param name="templateOwner">The owner of the template is the control to which the template is applied.</param>
            <returns>The instantiated control template.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.FrameworkTemplate.SetMethodToInstantiateFrameworkTemplate(System.Func{Windows.UI.Xaml.FrameworkElement,Windows.UI.Xaml.TemplateInstance})">
            <summary>
            Sets the method that will create the tree of elements.
            </summary>
            <param name="methodToInstantiateFrameworkTemplate">The method that will create the tree of elements.</param>
        </member>
        <member name="F:Windows.UI.Xaml.FrameworkTemplate.ContentPropertyUsefulOnlyDuringTheCompilationProperty">
            <exclude/>
        </member>
        <member name="P:Windows.UI.Xaml.FrameworkTemplate.ContentPropertyUsefulOnlyDuringTheCompilation">
            <exclude/>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ControlTemplate.#ctor">
            <summary>
            Initializes a new instance of the ControlTemplate class.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ControlTemplate.TargetType">
            <summary>
            Gets or sets the type to which the ControlTemplate is applied.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ComboBox">
             <summary>
             Represents a selection control that combines a non-editable text box and
             a drop-down list box that allows users to select an item from a list.
             </summary>
             <example>
             <code lang="XAML" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
             <ComboBox x:Name="ComboBox1" DisplayMemberPath="Name" SelectedValuePath="ImagePath" VerticalAlignment="Top"/>
             </code>
             <code lang="C#">
             ComboBox1.ItemsSource = Planet.GetListOfPlanets();
             public class Planet
            {
                public string Name { get; set; }
                public string ImagePath { get; set; }
            
            
                public static ObservableCollection&lt;Planet&gt; GetListOfPlanets()
                {
                    return new ObservableCollection&lt;Planet&gt;()
                    {
                        new Planet() { Name = "Mercury", ImagePath = "ms-appx:/Planets/Mercury.png" },
                        new Planet() { Name = "Venus", ImagePath = "ms-appx:/Planets/Venus.png" },
                        new Planet() { Name = "Earth", ImagePath = "ms-appx:/Planets/Earth.png" },
                        new Planet() { Name = "Mars", ImagePath = "ms-appx:/Planets/Mars.png" },
                        new Planet() { Name = "Jupiter", ImagePath = "ms-appx:/Planets/Jupiter.png" },
                        new Planet() { Name = "Saturn", ImagePath = "ms-appx:/Planets/Saturn.png" },
                        new Planet() { Name = "Uranus", ImagePath = "ms-appx:/Planets/Uranus.png" },
                        new Planet() { Name = "Neptune", ImagePath = "ms-appx:/Planets/Neptune.png" },
                        new Planet() { Name = "Pluto", ImagePath = "ms-appx:/Planets/Pluto.png" }
                    };
                }
            }
             </code>
             </example>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ComboBox.#ctor">
            <summary>
            Initializes a new instance of the ComboBox class.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ComboBox.OnDropDownClosed(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Invoked when the DropDownClosed event is raised.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ComboBox.OnDropDownOpened(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Invoked when the DropDownOpened event is raised.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ComboBox.IsDropDownOpenProperty">
            <summary>
            Identifies the IsDropDownOpen dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ComboBox.MaxDropDownHeightProperty">
            <summary>
            Identifies the MaxDropDownHeight dependency property.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.ComboBox.DropDownClosed">
            <summary>
            Occurs when the drop-down portion of the ComboBox closes.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.ComboBox.DropDownOpened">
            <summary>
            Occurs when the drop-down portion of the ComboBox opens.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ComboBox.IsDropDownOpen">
            <summary>
            Gets or sets a value that indicates whether the drop-down portion of the
            ComboBox is currently open.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ComboBox.MaxDropDownHeight">
            <summary>
            Gets or sets the maximum height for a combo box drop-down.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.HyperlinkButton">
            <summary>
            Represents a button control that displays a hyperlink.
            </summary>
            <example>
            <code lang="XAML" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
            <StackPanel x:Name="MyStackPanel">
                <HyperlinkButton Content="here" NavigateUri="http://www.myaddress.com" Foreground="Blue"/>
            </StackPanel>
            </code>
            <code lang="C#">
            HyperlinkButton hyperlinkButton = new HyperlinkButton() { Content = "here", NavigateUri = new Uri("http://www.myaddress.com"), Foreground = new SolidColorBrush(Windows.UI.Colors.Blue) };
            MyStackPanel.Children.Add(hyperlinkButton);
            </code>
            </example>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.HyperlinkButton.#ctor">
            <summary>
            Initializes a new instance of the HyperlinkButton class.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.HyperlinkButton.NavigateUriProperty">
            <summary>
            Identifies the NavigateUri dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.HyperlinkButton.NavigateUri">
            <summary>
            Gets or sets the Uniform Resource Identifier (URI) to navigate to when the
            HyperlinkButton is clicked.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ItemCollection">
            <summary>
            Holds the list of items that represent the content of an ItemsControl.
            </summary>
            <exclude/>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ItemCollection.#ctor">
            <summary>
            Initializes a new instance of the ItemCollection class with an empty collection.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ItemCollection.#ctor(System.Collections.Generic.List{System.Object})">
            <summary>
            Initializes a new instance of the ItemCollection class containing the elements of the list entered in the parameters.
            </summary>
            <param name="list">The list containing the initial elements.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ItemCollection.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Initializes a new instance of the ItemCollection class containing the elements of the IEnumerable entered in the parameters.
            </summary>
            <param name="enumerable">The IEnumerable containing the initial elements.</param>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ItemsPanelTemplate">
            <summary>
            Specifies the panel that the ItemsPresenter creates for the layout of the
            items of an ItemsControl.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ItemsPanelTemplate.#ctor">
            <summary>
            Initializes a new instance of the ItemsPanelTemplate class.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ListBox">
             <summary>
             Contains a list of selectable items.
             </summary>
             <example>
             <code lang="XAML" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
             <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                 <ListBox x:Name="ListBox1" DisplayMemberPath="Name" SelectedValuePath="ImagePath" VerticalAlignment="Top" SelectionMode="Single" BorderThickness="1" BorderBrush="LightGray"/>
                 <Image Source="{Binding ElementName=ListBox1, Path=SelectedValue}" Width="60" Height="60" Margin="20,0,0,0" VerticalAlignment="Top"/>
             </StackPanel>
             </code>
             <code lang="C#">
             ListBox1.ItemsSource = Planet.GetListOfPlanets();
             public class Planet
             {
                public string Name { get; set; }
                public string ImagePath { get; set; }
            
            
                public static ObservableCollection&lt;Planet&gt; GetListOfPlanets()
                {
                    return new ObservableCollection&lt;Planet&gt;()
                    {
                        new Planet() { Name = "Mercury", ImagePath = "ms-appx:/Planets/Mercury.png" },
                        new Planet() { Name = "Venus", ImagePath = "ms-appx:/Planets/Venus.png" },
                        new Planet() { Name = "Earth", ImagePath = "ms-appx:/Planets/Earth.png" },
                        new Planet() { Name = "Mars", ImagePath = "ms-appx:/Planets/Mars.png" },
                        new Planet() { Name = "Jupiter", ImagePath = "ms-appx:/Planets/Jupiter.png" },
                        new Planet() { Name = "Saturn", ImagePath = "ms-appx:/Planets/Saturn.png" },
                        new Planet() { Name = "Uranus", ImagePath = "ms-appx:/Planets/Uranus.png" },
                        new Planet() { Name = "Neptune", ImagePath = "ms-appx:/Planets/Neptune.png" }
                        new Planet() { Name = "Pluto", ImagePath = "ms-appx:/Planets/Pluto.png" }
                    };
                }
            } 
             </code>
             </example>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ListBox.#ctor">
            <summary>
            Initializes a new instance of the ListBox class.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ListBox.SelectionModeProperty">
            <summary>
            Identifies the SelectionMode dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ListBox.SelectionMode">
            <summary>
            Gets or sets the selection behavior for the ListBox control.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ListBoxItem">
            <summary>
            Represents the container for an item in a ListBox control.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.MediaElement">
            <summary>
            Represents an object that contains audio, video, or both.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.MediaElement.AutoPlayProperty">
            <summary>
            Identifies the AutoPlay dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.MediaElement.IsAudioOnlyProperty">
            <summary>
            Identifies the IsAudioOnly dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.MediaElement.IsLoopingProperty">
            <summary>
            Identifies the IsLooping dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.MediaElement.IsMutedProperty">
            <summary>
            Identifies the IsMuted dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.MediaElement.SourceProperty">
            <summary>
            Identifies the Source dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.MediaElement.VolumeProperty">
            <summary>
            Identifies the Volume dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.MediaElement.CanPlayType(System.String)">
            <summary>
            Returns an enumeration value that describes the likelihood that the current
            MediaElement and its client configuration can play that media source.
            </summary>
            <param name="type">A string that describes the desired type as a string.</param>
            <returns>
            A value of the enumeration that describes the likelihood that the current
            media engine can play the source.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.MediaElement.Pause">
            <summary>
            Pauses media at the current position.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.MediaElement.Play">
            <summary>
            Plays media from the current position.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.MediaElement.CreateDomElement(System.Object,System.Object@)">
            <summary>
            Stops and resets media to be played from the beginning.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.MediaElement.AutoPlay">
            <summary>
            Gets or sets a value that indicates whether media will begin playback automatically
            when the Source property is set.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.MediaElement.IsAudioOnly">
            <summary>
            Gets a value that reports whether the current source media is an audio-only
            media file.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.MediaElement.IsLooping">
            <summary>
            Gets or sets a value that describes whether the media source currently loaded
            in the media engine should automatically set the position to the media start
            after reaching its end.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.MediaElement.IsMuted">
            <summary>
            Gets or sets a value indicating whether the audio is muted.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.MediaElement.Source">
            <summary>
            Gets or sets a media source on the MediaElement.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.MediaElement.Volume">
            <summary>
            Gets or sets the media's volume.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.RadioButton">
            <summary>
             Represents a button that allows a user to select a single option from a group
             of options.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.RadioButton.#ctor">
            <summary>
            Initializes a new instance of the RadioButton class.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.RadioButton.GroupNameProperty">
            <summary>
            Identifies the GroupName dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.RadioButton.GroupName">
            <summary>
            Gets or sets the name that specifies which RadioButton controls are mutually
            exclusive.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.SelectionChangedEventArgs">
            <summary>
            Provides data for the SelectionChanged event.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.SelectionChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the SelectionChangedEventArgs class.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.SelectionChangedEventArgs.#ctor(System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object})">
            <summary>
            Initializes a new instance of the SelectionChangedEventArgs class with the specified removed and added items.
            </summary>
            <param name="removedItems">A list of the elements that have been removed from the list.</param>
            <param name="addedItems">A list of the elements that have been added to the list.</param>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.SelectionChangedEventArgs.AddedItems">
            <summary>
            Gets a list that contains the items that were selected.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.SelectionChangedEventArgs.RemovedItems">
            <summary>
            Gets a list that contains the items that were unselected.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.SelectionChangedEventHandler">
            <summary>
            Represents the method that will handle the SelectionChanged event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.SelectionMode">
            <summary>
            Defines the selection behavior for a ListBox.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.SelectionMode.Single">
            <summary>
            The user can select only one item at a time.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.SelectionMode.Multiple">
            <summary>
            The user can select multiple items without entering a special mode.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.CheckBox">
             <summary>
             Represents a control that a user can select (check) or clear (uncheck). A
             CheckBox can also report its value as indeterminate.
             </summary>
             <example>
             <code lang="XAML">
             <CheckBox Content="Text of the CheckBox." Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked"/>
             </code>
             <code lang="C#">
             void CheckBox_Checked(object sender, RoutedEventArgs e)
             {
                 MessageBox.Show("You checked me.");
             }
            
             void CheckBox_Unchecked(object sender, RoutedEventArgs e)
             {
                 MessageBox.Show("You unchecked me.");
             }
             </code>
             </example>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.CheckBox.#ctor">
            <summary>
            Initializes a new instance of the CheckBox class.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.PasswordBox">
            <summary>
            Represents a control for entering passwords.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.PasswordBox.MaxLengthProperty">
            <summary>
            Identifies the MaxLength dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.PasswordBox.PasswordProperty">
            <summary>
            Identifies the Password dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.PasswordBox.OnPasswordChanged(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Raises the PasswordChanged event
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.PasswordBox.SelectAll">
            <summary>
            Selects all the character in the PasswordBox.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.PasswordBox.MaxLength">
            <summary>
            Gets or sets the maximum length for passwords to be handled by this PasswordBox.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.PasswordBox.Password">
            <summary>
            Gets or sets the password currently held by the PasswordBox.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.PasswordBox.PasswordChanged">
            <summary>
            Occurs when the value of the Password property changes.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Grid_InternalHelpers.RefreshAllRowsHeight_NonCSSVersion(Windows.UI.Xaml.Controls.Grid,System.Collections.Generic.List{Windows.UI.Xaml.Controls.RowDefinition})">
            <summary>
            Refreshes the height of all the rows (and their columns) of the given grid
            </summary>
            <param name="grid">the grid of which rows' heights we want to refresh</param>
            <param name="normalizedRowDefinitions">the normalized(aka. their stars add up to 100%) version of the rows' definitions, null value is allowed, it will be calculated in this method.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Grid_InternalHelpers.RefreshCellWithSpanHeight(Windows.UI.Xaml.Controls.Grid,Windows.UI.Xaml.Controls.INTERNAL_CellDefinition,System.String@)">
            <summary>
            Sets the size of the dom element of the cell ONLY IN THE CASE WHERE THE CELL HAS A ROW SPAN.
            If any involved row has a star value, it will set it to 100%,
            otherwise, if they all have an absolute size, it will set it to the sum of those sizes,
            otherwise (if there is any auto sized row), it won't do anything.
            </summary>
            <param name="grid"></param>
            <param name="cell"></param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Grid_InternalHelpers.EnsureValueIsBetweenMinAndMax(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constraints the value to be between the specified min and max/
            </summary>
            <param name="value">The value to constraint.</param>
            <param name="min">The minimum allowed.</param>
            <param name="max">The maximum allowed.</param>
            <returns>The value constrained between min and max.</returns>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ScrollBarVisibility">
            <summary>
            Specifies the visibility of a scrollbar within a ScrollViewer control.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ScrollBarVisibility.Disabled">
            <summary>
            [DOESN'T WORK YET, BEHAVES LIKE Hidden]
            A ScrollBar does not appear even when the viewport cannot display all of
            the content. The dimension of the content is set to the corresponding dimension
            of the ScrollViewer parent. For a horizontal ScrollBar, the width of the
            content is set to the ViewportWidth of the ScrollViewer. For a vertical ScrollBar,
            the height of the content is set to the ViewportHeight of the ScrollViewer.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ScrollBarVisibility.Auto">
            <summary>
            A ScrollBar appears and the dimension of the ScrollViewer is applied to the
            content when the viewport cannot display all of the content. For a horizontal
            ScrollBar, the width of the content is set to the ViewportWidth of the ScrollViewer.
            For a vertical ScrollBar, the height of the content is set to the ViewportHeight
            of the ScrollViewer.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ScrollBarVisibility.Hidden">
            <summary>
            A ScrollBar does not appear even when the viewport cannot display all of
            the content. The dimension of the ScrollViewer is not applied to the content.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ScrollBarVisibility.Visible">
            <summary>
            A ScrollBar always appears. The dimension of the ScrollViewer is applied
            to the content. For a horizontal ScrollBar, the width of the content is set
            to the ViewportWidth of the ScrollViewer. For a vertical ScrollBar, the height
            of the content is set to the ViewportHeight of the ScrollViewer.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ScrollMode">
            <summary>
            Defines constants that specify scrolling behavior for ScrollViewer and other
            parts involved in scrolling scenarios.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Windows.UI.Xaml.Controls.ScrollMode.Disabled" -->
        <member name="F:Windows.UI.Xaml.Controls.ScrollMode.Enabled">
            <summary>
            Scrolling is enabled.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ScrollMode.Auto">
            <summary>
            Scrolling is enabled but behavior uses a "rails" manipulation mode.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ScrollViewer">
            <summary>
            Represents a scrollable area that can contain other visible elements.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ScrollViewer.#ctor">
            <summary>
            Initializes a new instance of the ScrollViewer class.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty">
            <summary>
            Identifies the HorizontalScrollBarVisibility dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty">
            <summary>
            Identifies the VerticalScrollBarVisibility dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ScrollViewer.ScrollToHorizontalOffset(System.Double)">
            <summary>
            Scrolls the content that is within the ScrollViewer to the specified horizontal offset position.
            </summary>
            <param name="offset">The position that the content scrolls to.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ScrollViewer.ScrollToVerticalOffset(System.Double)">
            <summary>
            Scrolls the content that is within the ScrollViewer to the specified vertical offset position.
            </summary>
            <param name="offset">The position that the content scrolls to.</param>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ScrollViewer.HorizontalScrollBarVisibility">
            <summary>
            Gets or sets a value that indicates whether a horizontal ScrollBar should
            be displayed.
            
            Returns a ScrollBarVisibility value that indicates whether a horizontal ScrollBar
            should be displayed. The default value is Hidden.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ScrollViewer.VerticalOffset">
            <summary>
             Gets a value that indicates the vertical offset of the scrolled content.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ScrollViewer.VerticalScrollBarVisibility">
            <summary>
            Gets or sets a value that indicates whether a vertical ScrollBar should be displayed.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Image">
            <summary>
            Represents a control that displays an image. The image is specified as an image file in several possible formats, see Remarks.
            </summary>
            <example>
            <code lang="XAML" xmlns:ms-appx="aa" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
            <StackPanel x:Name="MyStackPanel">
                <Image Source="ms-appx:/MyImage.png"/>
            </StackPanel>
            </code>
            <code lang="C#">
            Image image = new Image();
            image.Source = new Windows.UI.Xaml.Media.Imaging.BitmapImage(new Uri("ms-appx:/MyImage.png"));
            MyStackPanel.Children.Add(image);
            </code>
            </example>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Image.SourceProperty">
            <summary>
            Identifies the Source dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Image.StretchProperty">
            <summary>
            Identifies the Stretch dependency property
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Image.ProcessOnImageFailed(System.Object)">
            <summary>
            Raises the ImageFailed event
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Image.OnImageFailed(Windows.UI.Xaml.ExceptionRoutedEventArgs)">
            <summary>
            Raises the ImageFailed event
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Image.ProcessOnImageOpened(System.Object)">
            <summary>
            Raises the ImageOpened event
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Image.OnImageOpened(Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Raises the ImageOpened event
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Image.Source">
            <summary>
            Gets or sets the source for the image.
            
            Returns an object that represents the image source file for the drawn image. Typically
            you set this with a BitmapSource object, constructed with the that describes
            the path to a valid image source file.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Image.Stretch">
            <summary>
            Gets or sets a value that describes how an Image should be stretched to fill the destination rectangle.
            
            Returns a value of the Stretch enumeration that specifies how the source image is applied if the Height and Width of the Image are specified and are different
            than the source image's height and width. The default value is Uniform.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.Image.ImageFailed">
            <summary>
            Occurs when there is an error associated with image retrieval or format.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Controls.Image.ImageOpened">
            <summary>
            Occurs when the image source is downloaded and decoded with no failure.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Orientation">
            <summary>
            Defines constants that specify the different orientations that a control or layout can have.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Orientation.Vertical">
            <summary>
            The control or layout should be vertically oriented.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Orientation.Horizontal">
            <summary>
            The control or layout should be horizontally oriented.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.StackPanel">
            <summary>
            Arranges child elements into a single line that can be oriented horizontally
            or vertically.
            </summary>
            <example>
            You can add a StackPanel with a Horizontal orientation in the XAML as follows:
            <code lang="XAML" xml:space="preserve">
            <StackPanel Orientation="Horizontal">
                <!--Add content elements.-->
            </StackPanel>
            </code>
            Or in C#:
            <code lang="C#">
            StackPanel stackPanel = new StackPanel();
            stackPanel.Orientation = Orientation.Horizontal;
            </code>
            </example>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.StackPanel.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.StackPanel.Orientation">
            <summary>
            Gets or sets the dimension by which child elements are stacked.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ColumnDefinition">
            <summary>
            Defines column-specific properties that apply to Grid objects.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.ColumnDefinition.Clone">
            <summary>
            Returns a copy of the current ColumnDefinition.
            </summary>
            <returns>A copy of the current ColumnDefinition.</returns>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ColumnDefinition.MaxWidthProperty">
            <summary>
            Identifies the MaxWidth dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ColumnDefinition.MinWidthProperty">
            <summary>
            Identifies the MinWidth dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.ColumnDefinition.WidthProperty">
            <summary>
            Identifies the Width dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ColumnDefinition.MaxWidth">
            <summary>
            Gets or sets a value that represents the maximum width of a ColumnDefinition. Returns a Double that represents the maximum width in pixels. The default is PositiveInfinity.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ColumnDefinition.MinWidth">
            <summary>
            Gets or sets a value that represents the minimum width of a ColumnDefinition. Returns a Double that represents the minimum width in pixels. The default is 0.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ColumnDefinition.Width">
            <summary>
            Gets the calculated width of a ColumnDefinition element, or sets the GridLength value of a row that is defined by the ColumnDefinition.
            Returns the GridLength that represents the width of the row. The default value is 1.0
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.ColumnDefinition.ActualWidth">
            <summary>
            Gets the rendered width of a FrameworkElement. The FrameworkElement must be in the visual tree,
            otherwise this property will return double.NaN.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.ColumnDefinitionCollection">
            <exclude/>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.RowDefinition">
            <summary>
            Defines row-specific properties that apply to Grid elements.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.RowDefinition.Clone">
            <summary>
            Returns a copy of this RowDefinition.
            </summary>
            <returns>A copy of this RowDefinition.</returns>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.RowDefinition.MaxHeightProperty">
            <summary>
            Identifies the MaxHeight dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.RowDefinition.MinHeightProperty">
            <summary>
            Identifies the MinHeight dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.RowDefinition.HeightProperty">
            <summary>
            Identifies the Height dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.RowDefinition.MaxHeight">
            <summary>
            Gets or sets a value that represents the maximum height of a RowDefinition. Returns a Double that represents the maximum height in pixels. The default is PositiveInfinity.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.RowDefinition.MinHeight">
            <summary>
            Gets or sets a value that represents the minimum height of a RowDefinition. Returns a Double that represents the minimum height in pixels. The default is 0.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.RowDefinition.Height">
            <summary>
            Gets the calculated height of a RowDefinition element, or sets the GridLength value of a row that is defined by the RowDefinition.
            Returns the GridLength that represents the height of the row. The default value is 1.0
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.RowDefinition.ActualHeight">
            <summary>
            Gets the rendered height of a FrameworkElement. The FrameworkElement must be in the visual tree,
            otherwise this property will return double.NaN.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.RowDefinitionCollection">
            <exclude/>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.UIElementCollection">
            <exclude/>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Canvas">
            <summary>
            Defines an area within which you can explicitly position child objects, using
            coordinates that are relative to the Canvas area.
            </summary>
            <example>
            You can add a Canvas to the XAML as follows:
            <code lang="XAML" xml:space="preserve">
            <Canvas Width="100"
                    Height="100"
                    Background="Blue"
                    HorizontalAlignment="Left">
                    <!-- Children here. -->
            </Canvas>
            </code>
            Or in C#:
            <code lang="C#">
            Canvas myCanvas = new Canvas();
            myCanvas.Width = 100;
            myCanvas.Height = 100;
            myCanvas.Background = new SolidColorBrush(Windows.UI.Colors.Blue);
            myCanvas.HorizontalAlignment=HorizontalAlignment.Left;
            </code>
            </example>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Canvas.LeftProperty">
            <summary>
            Identifies the Canvas.Left XAML attached property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Canvas.TopProperty">
            <summary>
            Identifies the Canvas.Top XAML attached property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Canvas.ZIndexProperty">
            <summary>
            Identifies the Canvas.ZIndex XAML attached property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Canvas.SetLeft(Windows.UI.Xaml.UIElement,System.Double)">
            <summary>
            Sets the value of the Canvas.Left XAML attached property for a target element.
            </summary>
            <param name="element">The object to which the property value is written.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Canvas.GetLeft(Windows.UI.Xaml.UIElement)">
            <summary>
            Gets the value of the Canvas.Left XAML attached property for the target element.
            </summary>
            <param name="element">The object from which the property value is read.</param>
            <returns>The Canvas.Left XAML attached property value of the specified object.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Canvas.SetTop(Windows.UI.Xaml.UIElement,System.Double)">
            <summary>
            Sets the value of the Canvas.Top XAML attached property for a target element.
            </summary>
            <param name="element">The object to which the property value is written.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Canvas.GetTop(Windows.UI.Xaml.UIElement)">
            <summary>
            Gets the value of the Canvas.Top XAML attached property for the target element.
            </summary>
            <param name="element">The object from which the property value is read.</param>
            <returns>The Canvas.Top XAML attached property value of the specified object.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Canvas.SetZIndex(Windows.UI.Xaml.UIElement,System.Int32)">
            <summary>
            Sets the value of the Canvas.ZIndex XAML attached property for a target element.
            </summary>
            <param name="element">The object to which the property value is written.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Canvas.GetZIndex(Windows.UI.Xaml.UIElement)">
            <summary>
            Gets the value of the Canvas.ZIndex XAML attached property for the target element.
            </summary>
            <param name="element">The object from which the property value is read.</param>
            <returns>The Canvas.ZIndex XAML attached property value of the specified object.</returns>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.TextBlock">
            <summary>
            Provides a lightweight control for displaying small amounts of text.
            </summary>
            <example>
            <code lang="XAML" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
            <TextBlock x:Name="TextBlockName" Text="Some text."/>
            </code>
            <code lang="C#">
            TextBlockName.Text = "Some text.";
            </code>
            </example>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TextBlock.TextProperty">
            <summary>
            Identifies the Text dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TextBlock.TextAlignmentProperty">
            <summary>
            Identifies the TextAlignment dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TextBlock.TextWrappingProperty">
            <summary>
            Identifies the TextWrapping dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.TextBlock.TextDecorationsProperty">
            <summary>
            Identifies the TextDecorations dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TextBlock.Text">
            <summary>
            Get or Set the Text property
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TextBlock.TextAlignment">
            <summary>
            Gets or sets how the text should be aligned in the TextBlock.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TextBlock.TextWrapping">
            <summary>
            Gets or sets how the TextBlock wraps text.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.TextBlock.TextDecorations">
            <summary>
            Gets or sets the text decorations (underline, strikethrough...).
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Border">
            <summary>
            Draws a border, background, or both, around another object.
            </summary>
            <example>
            You can add a Border to the XAML as follows:
            <code lang="XAML" xml:space="preserve">
            <Border Width="60"
                    Height="30"
                    CornerRadius="15"
                    Padding="20"
                    Background="Blue"
                    HorizontalAlignment="Left">
                <!--Child here.-->
            </Border>
            </code>
            Or in C# (assuming we have a StackPanel Named MyStackPanel):
            <code lang="C#">
            Border myBorder = new Border();
            myBorder.Width = 60;
            myBorder.Height = 30;
            myBorder.CornerRadius = new CornerRadius(15);
            myBorder.Padding = new Thickness(20);
            myBorder.Background = new SolidColorBrush(Windows.UI.Colors.Blue);
            myBorder.HorizontalAlignment=HorizontalAlignment.Left;
            MyStackPanel.Children.Add(myBorder);
            </code>
            </example>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Border.BackgroundProperty">
            <summary>
            Identifies the Background dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Border.BorderBrushProperty">
            <summary>
            Identifies the BorderBrush dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Border.BorderThicknessProperty">
            <summary>
            Identifies the BorderThickness dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Border.CornerRadiusProperty">
            <summary>
            Identifies the CornerRadius dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.Border.PaddingProperty">
            <summary>
            Identifies the Padding dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Border.Child">
            <summary>
            Gets or sets the child element to draw the border around.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Border.Background">
            <summary>
            Gets or sets the Brush that fills the background of the border.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Border.BorderBrush">
            <summary>
            Gets or sets a brush that describes the border background of a control.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Border.BorderThickness">
            <summary>
            Gets or sets the thickness of the border.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Border.CornerRadius">
            <summary>
            Gets or sets the radius for the corners of the border.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.Border.Padding">
            <summary>
            Gets or sets the distance between the border and its child object.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.Page">
            <summary>
            Encapsulates a page of content that can be navigated to.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Controls.UserControl">
            <summary>
            Provides the base class for defining a new control that encapsulates related
            existing controls and provides its own logic.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Controls.UserControl.ContentProperty">
            <summary>
            Identifies the Content dependency property
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.UserControl.FindName(System.String)">
            <summary>
            Finds the UIElement with the specified name.
            </summary>
            <param name="name">The name to look for.</param>
            <returns>The object with the specified name if any; otherwise null.</returns>
        </member>
        <member name="P:Windows.UI.Xaml.Controls.UserControl.Content">
            <summary>
            Gets or sets the content that is contained within a user control.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Controls.Page.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
            <summary>
            Invoked when the Page is loaded and becomes the current source of a parent
            Frame.
            </summary>
            <param name="e">
            Event data that can be examined by overriding code. The event data is representative
            of the pending navigation that will load the current Page. Usually the most
            relevant property to examine is Parameter.
            </param>
        </member>
        <member name="T:Windows.UI.Xaml.Data.Binding">
            <summary>
            Defines a binding that connects the properties of binding targets and data sources.
            </summary>
            <example>
            You can add a Binding using XAML as follows:
            <code lang="XAML" xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
            <TextBlock x:Name="MyTextBlock"
                       Text="{Binding Size}"
                       HorizontalAlignment="Left"/>
            </code>
            <code lang="C#">
            MyTextBlock.DataContext = myPlanet;
            </code>
            Note: you can create the Binding directly using C#:
            <code lang="C#">
            Binding myBinding = new Binding(&quot;Size&quot;);
            MyTextBlock.SetBinding(TextBlock.TextProperty, myBinding);
            MyTextBlock.DataContext = myPlanet;
            </code>
            Here is another example using the TwoWay mode, and also using a Converter:
            <code lang="C#">
            MyTextBox.DataContext = myPlanet;
            </code>
            <code lang="XAML" xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="using:MyAssembly.MyApp">
            <Border>
            <!-- We define the Converter: -->
                <Border.Resources>
                    <local:KilometersToMilesConverter x:Key="KilometersToMilesConverter"/>
                </Border.Resources>
                <TextBox x:Name="MyTextBox"
                         Text="{Binding Length, Mode=TwoWay, Converter={StaticResource KilometersToMilesConverter}}"
                         HorizontalAlignment="Left"/>
            </Border>
            </code>
            Using C#:
            <code lang="C#">
            Binding myBinding = new Binding(&quot;Size&quot;);
            
            //we set the binding in TwoWay mode:
            myBinding.Mode = BindingMode.TwoWay;
            
            //We create the converter:
            myBinding.Converter = new KilometersToMilesConverter();
            
            MyTextBox.SetBinding(TextBox.TextProperty, myBinding);
            MyTextBox.DataContext = myPlanet;
            </code>
            </example>
        </member>
        <member name="T:Windows.UI.Xaml.Data.BindingBase">
            <summary>
            Provides an abstract base class for the Binding class.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Data.BindingBase.#ctor">
            <summary>
            Initializes a new instance of the BindingBase class.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Data.BindingBase.ProvideValue(System.IServiceProvider)">
            <exclude/>
        </member>
        <member name="P:Windows.UI.Xaml.Data.BindingBase.FallbackValue">
            <summary>
            Gets or sets the value to use when the binding is unable to return a value.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Data.BindingBase.TargetNullValue">
            <summary>
            Gets or sets the value that is used in the target when the value of the source
            is null.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Data.Binding.#ctor">
            <summary>
            Initializes a new instance of the Binding class.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Data.Binding.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Binding class with the given path.
            </summary>
            <param name="path">The path to the source of the binding.</param>
        </member>
        <member name="P:Windows.UI.Xaml.Data.Binding.Converter">
            <summary>
            Gets or sets the converter object that is called by the binding engine to
            modify the data as it is passed between the source and target, or vice versa.
            Returns the IValueConverter object that modifies the data.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Data.Binding.ConverterLanguage">
            <summary>
            Gets or sets a value that names the language to pass to any converter specified
            by the Converter property.
            Returns a string that names a language. Interpretation of this value is ultimately up to the converter logic.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Data.Binding.ConverterParameter">
            <summary>
            Gets or sets a parameter that can be used in the Converter logic.
            Returns a parameter to be passed to the Converter. This can be used in the conversion logic. The default is null.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Data.Binding.ElementName">
            <summary>
            Gets or sets the name of the element to use as the binding source for the Binding.
            Returns the value of the Name property or x:Name attribute for the element to bind to. The default is null.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Data.Binding.Mode">
            <summary>
            Gets or sets a value that indicates the direction of the data flow in the binding.
            Returns one of the BindingMode values.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Data.Binding.Path">
            <summary>
            Gets or sets the path to the binding source property.
            Returns the property path for the source of the binding.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Data.Binding.RelativeSource">
            <summary>
            Gets or sets the binding source by specifying its location relative to the position of the binding target.
            Returns the relative location of the binding source to use. The default is null.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Data.Binding.Source">
            <summary>
            Gets or sets the data source for the binding.
            Returns the source object that contains the data for the binding.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Data.Binding.UpdateSourceTrigger">
            <summary>
            Update type
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Data.Binding.TemplateOwner">
            <summary>
            Do not use this property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Windows.UI.Xaml.Data.Binding.ValidatesOnExceptions">
            <summary>
            Gets or sets a value that indicates whether the binding engine will report
            exception validation errors.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Data.Binding.NotifyOnValidationError">
            <summary>
            Gets or sets a value that indicates whether the System.Windows.FrameworkElement.BindingValidationError
            event is raised on validation errors.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Data.BindingExpression">
            <summary>
            Contains information about a single instance of a System.Windows.Data.Binding.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Data.Expression">
            <summary>
            Represents the base class for Expressions such as BindingExpression.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Data.BindingExpression.Property">
            <summary>
            The binding target property of this binding expression.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Data.BindingExpression.ParentBinding">
            <summary>
            The System.Windows.Data.Binding object of the current System.Windows.Data.BindingExpression.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Data.BindingExpression.Target">
            <summary>
            The element that is the binding target object of this binding expression.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Data.BindingExpression.UpdateSource">
            <summary>
            Sends the current binding target value to the binding source property in
            System.Windows.Data.BindingMode.TwoWay or System.Windows.Data.BindingMode.OneWayToSource
            bindings.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Data.BindingExpression.DataItem">
            <summary>
            Gets the binding source object that this System.Windows.Data.BindingExpression
            uses.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Data.BindingMode">
            <summary>
            Describes how the data propagates in a binding.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Data.BindingMode.OneWay">
            <summary>
            Updates the target property when the binding is created. Changes to the source object can also propagate to the target.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Data.BindingMode.OneTime">
            <summary>
            Updates the target property when the binding is created.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Data.BindingMode.TwoWay">
            <summary>
            Updates either the target or the source object when either changes. When the binding is created, the target property is updated from the source.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Data.UpdateSourceTrigger">
            <summary>
            This enum describes when updates (target-to-source data flow)
            happen in a given Binding.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Data.UpdateSourceTrigger.Default">
            <summary>
            Obtain trigger from target property default
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Data.UpdateSourceTrigger.PropertyChanged">
            <summary>
            Update whenever the target property changes
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Data.UpdateSourceTrigger.Explicit">
            <summary>
            Update only by explicit call to BindingExpression.UpdateSource()
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Data.IValueConverter">
            <summary>
            Exposes methods that allow the data to be modified as it passes through the binding engine.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The type of the target property, as a type reference.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion</param>
            <returns>The value to be passed to the target dependency property.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Modifies the target data before passing it to the source object. This method is called only in TwoWay bindings.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The type of the target property, as a type reference.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="language">The language of the conversion</param>
            <returns>The value to be passed to the source object.</returns>
        </member>
        <member name="T:Windows.UI.Xaml.Data.RelativeSource">
            <summary>
            Implements a markup extension that describes the location of the binding source relative to the position of the binding target.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Data.RelativeSource.#ctor">
            <summary>
            Initializes a new instance of the RelativeSource class by using default relative source mode.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Data.RelativeSource.#ctor(Windows.UI.Xaml.Data.RelativeSourceMode)">
            <summary>
            Initializes a new instance of the RelativeSource class by using provided relative source mode.
            </summary>
            <param name="relativeSourceMode">The relative source mode</param>
        </member>
        <member name="P:Windows.UI.Xaml.Data.RelativeSource.Mode">
            <summary>
            Gets or sets a value that describes the location of the binding source relative to the position of the binding target.
            Returns a value of the enumeration.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Data.RelativeSource.AncestorLevel">
            <summary>
            Gets or sets the level of ancestor to look for, in System.Windows.Data.RelativeSourceMode.FindAncestor
            mode. Use 1 to indicate the one nearest to the binding target element.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Data.RelativeSource.AncestorType">
            <summary>
            Gets or sets the type of ancestor to look for.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Data.RelativeSourceMode">
            <summary>
            Defines constants that describe the location of the binding source relative to the position of the binding target.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Data.RelativeSourceMode.None">
            <summary>
            Don't use this value of RelativeSourceMode; always use either Self or TemplatedParent.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Data.RelativeSourceMode.TemplatedParent">
            <summary>
            Refers to the element to which the template (in which the data-bound element
            exists) is applied. This is similar to setting a TemplateBinding Markup Extension
            and is only applicable if the Binding is within a template.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Data.RelativeSourceMode.Self">
            <summary>
            Refers to the element on which you are setting the binding and allows you
            to bind one property of that element to another property on the same element.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Data.RelativeSourceMode.FindAncestor">
            <summary>
            Refers to the ancestor in the parent chain of the data-bound element. You
            can use this to bind to an ancestor of a specific type or its subclasses.
            This is the mode you use if you want to specify System.Windows.Data.RelativeSource.AncestorType
            and/or System.Windows.Data.RelativeSource.AncestorLevel.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Data.StandardPropertyPathNode.#ctor">
            <summary>
            This constructor is called only when there is no path, which means that the binding's source is directly the value we are looking for.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs">
            <summary>
            Provides event data for the RightTapped event.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Input.RightTappedEventHandler">
            <summary>
            Represents the method that will handle a RightTapped routed event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs">
            <summary>
            Provides data for the KeyUp and KeyDown routed events, as well as related
            attached and Preview events.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Input.KeyRoutedEventArgs.Handled">
            <summary>
            Gets or sets a value that marks the routed event as handled. A true value
            for Handled prevents most handlers along the event route from handling the
            same event again.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Input.KeyRoutedEventArgs.Key">
            <summary>
            Gets the keyboard key associated with the event.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Input.KeyRoutedEventArgs.PlatformKeyCode">
            <summary>
            Gets an integer value that represents the key that is pressed or released
            (depending on which event is raised). This value is browser-specific.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Input.KeyRoutedEventArgs.KeyModifiers">
            <summary>
            Gets a value that indicates which key modifiers were active at the time that
            the pointer event was initiated.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Input.KeyEventHandler">
            <summary>
            Represents the method that handles the KeyUp and KeyDown events.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Windows.UI.Xaml.Input.Pointer">
            <summary>
            Represents a pointer device.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Input.Pointer.IsInContact">
            <summary>
            Gets a value that determines whether the pointer device was in contact with
            a sensor or digitizer at the time that the event was reported.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Input.Pointer.IsInRange">
            <summary>
            Gets a value that determines whether the pointer device was in detection
            range of a sensor or digitizer at the time that the event was reported.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Input.Pointer.PointerDeviceType">
            <summary>
            Gets the PointerDeviceType for the pointer device.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Input.Pointer.PointerId">
            <summary>
            Gets the system-generated identifier for this pointer reference.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Input.PointerEventHandler">
            <summary>
            Represents the method that will handle pointer message events such as PointerPressed.
            </summary>
            <param name="sender">The object that fired the event</param>
            <param name="e">The infos on the event</param>
        </member>
        <member name="T:Windows.UI.Input.PointerPoint">
            <summary>
            Provides basic properties for the input pointer associated with a single
            mouse, pen/stylus, or touch contact.
            </summary>
        </member>
        <member name="P:Windows.UI.Input.PointerPoint.Position">
            <summary>
            Gets the location of the pointer input in client coordinates.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Input.TappedEventHandler">
            <summary>
            Represents the method that will handle the Tapped event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs">
            <summary>
            Provides event data for the Tapped event.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.CircleEase">
            <summary>
            Represents an easing function that creates an animation that accelerates
            and/or decelerates using a circular function.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.EasingFunctionBase">
            <summary>
            Provides the base class for all the easing functions.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.EasingFunctionBase.EasingModeProperty">
            <summary>
            Identifies the EasingMode dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Animation.EasingFunctionBase.GetAdditionalOptionsForVelocityCall">
            <summary>
            Returns a Dictionary of the values to add in the options section of the Velocity Call. Implemented in inheriting classes that define their own easing function (see ExponentialEase)
            </summary>
            <returns></returns>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Animation.EasingFunctionBase.EasingMode">
            <summary>
            Gets or sets a value that specifies how the animation interpolates.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.ColorAnimation">
            <summary>
            Animates the value of a Color property between two target values using linear
            interpolation over a specified Duration.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.Timeline">
            <summary>
            Defines a segment of time.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Animation.Timeline.#ctor">
            <summary>
            Provides base class initialization behavior for Timeline-derived classes.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.Timeline.DurationProperty">
            <summary>
            Identifies the Duration dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.Timeline.RepeatBehaviorProperty">
            <summary>
            Identifies the RepeatBehavior dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.Timeline.BeginTimeProperty">
            <summary>
            Identifies the BeginTime dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Animation.Timeline.UnApply(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Removes the value set for the VisualState on the specified frameworkElement.
            </summary>
            <param name="frameworkElement"></param>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.Timeline.animationInstanceSpecificName">
            
        </member>
        <member name="M:Windows.UI.Xaml.Media.Animation.Timeline.StartFirstIteration(Windows.UI.Xaml.Media.Animation.IterationParameters,System.Boolean,System.Nullable{System.TimeSpan})">
            <summary>
            Starts the first iteration of this timeline, while managing the BeginTime property.
            </summary>
            <param name="parameters">the parameters required for the iteration</param>
            <param name="isLastLoop">A boolean that says if it is the last loop</param>
            <param name="parentDelay">The Delay due to the BeginTime of the parent Timeline</param>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Animation.Timeline.Duration">
            <summary>
            Gets or sets the length of time for which this timeline plays, not counting
            repetitions.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Animation.Timeline.RepeatBehavior">
            <summary>
            Gets or sets the repeating behavior of this timeline.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Animation.Timeline.BeginTime">
            <summary>
            Gets or sets the time at which this System.Windows.Media.Animation.Timeline
            should begin.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Media.Animation.Timeline.Completed">
            <summary>
            Occurs when this timeline has completely finished playing: it will no longer
            enter its active period.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.ColorAnimation.EasingFunctionProperty">
            <summary>
            Identifies the EasingFunction dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.ColorAnimation.FromProperty">
            <summary>
            Identifies the From dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.ColorAnimation.ToProperty">
            <summary>
            Identifies the To dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Animation.ColorAnimation.EasingFunction">
            <summary>
            Gets or sets the easing function applied to this animation.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Animation.ColorAnimation.From">
            <summary>
            Gets or sets the animation's starting value.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Animation.ColorAnimation.To">
            <summary>
            Gets or sets the animation's ending value.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.CubicEase">
            <summary>
            Represents an easing function that creates an animation that accelerates
            and/or decelerates using the formula f(t) = t3.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.DiscreteObjectKeyFrame">
            <summary>
            Animates from the Object value of the previous key frame to its own Value
            using discrete values.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.ObjectKeyFrame">
            <summary>
            Defines an animation segment with its own target value and interpolation
            method for an ObjectAnimationUsingKeyFrames.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.ObjectKeyFrame.KeyTimeProperty">
            <summary>
            Identifies the KeyTime dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.ObjectKeyFrame.ValueProperty">
            <summary>
            Identifies the Value dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Animation.ObjectKeyFrame.KeyTime">
            <summary>
            Gets or sets the time at which the key frame's target Value should be reached.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Animation.ObjectKeyFrame.Value">
            <summary>
            Gets or sets the key frame's target value.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.DoubleAnimation">
            <summary>
            Animates the value of a Double property between two target values using linear
            interpolation over a specified Duration.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.DoubleAnimation.EasingFunctionProperty">
            <summary>
            Identifies the EasingFunction dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.DoubleAnimation.FromProperty">
            <summary>
            Identifies the From dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.DoubleAnimation.ToProperty">
            <summary>
            Identifies the To dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Animation.DoubleAnimation.EasingFunction">
            <summary>
            Gets or sets the easing function applied to this animation.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Animation.DoubleAnimation.From">
            <summary>
            Gets or sets the animation's starting value.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Animation.DoubleAnimation.To">
            <summary>
            Gets or sets the animation's ending value.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.EasingMode">
            <summary>
            Specifies how the animation associated with an easing function interpolates.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.EasingMode.EaseOut">
            <summary>
            Interpolation follows 100% interpolation minus the output of the formula
            associated with the easing function.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.EasingMode.EaseIn">
            <summary>
            Interpolation follows the mathematical formula associated with the easing
            function.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.EasingMode.EaseInOut">
            <summary>
            Interpolation uses EaseIn for the first half of the animation and EaseOut
            for the second half.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.ExponentialEase">
            <summary>
            Represents an easing function that creates an animation that accelerates
            and/or decelerates using an exponential formula.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.ExponentialEase.ExponentProperty">
            <summary>
            Identifies the Exponent dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Animation.ExponentialEase.Exponent">
            <summary>
            Gets or sets the exponent used to determine the interpolation of the animation.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.KeyTime">
            <summary>
            Specifies when a particular key frame should take place during an animation.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Animation.KeyTime.TimeSpan">
            <summary>
            Gets the time when the key frame ends, expressed as a time relative to the
            beginning of the animation.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames">
            <summary>
            Animates the value of an Object property along a set of KeyFrames over a
            specified Duration.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames.KeyFrames">
            <summary>
            Gets the collection of ObjectKeyFrame objects that define the animation.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection">
            <summary>
            Represents a collection of ObjectKeyFrame objects that can be individually
            accessed by index.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.QuadraticEase">
            <summary>
            Represents an easing function that creates an animation that accelerates
            and/or decelerates using the formula f(t) = t^2
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.QuarticEase">
            <summary>
            Represents an easing function that creates an animation that accelerates
            and/or decelerates using the formula f(t) = t4.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.QuinticEase">
            <summary>
            Represents an easing function that creates an animation that accelerates
            and/or decelerates using the formula f(t) = t5.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.RepeatBehavior">
            <summary>
            Describes how a Windows.UI.Xaml.Media.Animation.Timeline repeats its simple
            duration.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Animation.RepeatBehavior.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the Windows.UI.Xaml.Media.Animation.RepeatBehavior
            structure with the specified iteration count.
            </summary>
            <param name="count">
            A number greater than or equal to 0 that specifies the number of iterations
            for an animation.
            </param>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Animation.RepeatBehavior.op_Inequality(Windows.UI.Xaml.Media.Animation.RepeatBehavior,Windows.UI.Xaml.Media.Animation.RepeatBehavior)">
            <summary>
            Indicates whether the two Windows.UI.Xaml.Media.Animation.RepeatBehavior
            values are not equal.
            </summary>
            <param name="repeatBehavior1">The first value to compare.</param>
            <param name="repeatBehavior2">The second value to compare.</param>
            <returns>
            true if repeatBehavior1 and repeatBehavior2 are different types or the repeat
            behavior properties are not equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Animation.RepeatBehavior.op_Equality(Windows.UI.Xaml.Media.Animation.RepeatBehavior,Windows.UI.Xaml.Media.Animation.RepeatBehavior)">
            <summary>
            Indicates whether the two specified Windows.UI.Xaml.Media.Animation.RepeatBehavior
            values are equal.
            </summary>
            <param name="repeatBehavior1">The first value to compare.</param>
            <param name="repeatBehavior2">The second value to compare.</param>
            <returns>
            true if both the type and repeat behavior of repeatBehavior1 are equal to
            that of repeatBehavior2; otherwise, false.
            </returns>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.RepeatBehavior._type">
            
        </member>
        <member name="M:Windows.UI.Xaml.Media.Animation.RepeatBehavior.Equals(System.Object)">
            <summary>
            Indicates whether the specified object is equal to this Windows.UI.Xaml.Media.Animation.RepeatBehavior.
            </summary>
            <param name="value">The object to compare with this Windows.UI.Xaml.Media.Animation.RepeatBehavior.</param>
            <returns>
            true if value is a Windows.UI.Xaml.Media.Animation.RepeatBehavior that represents
            the same repeat behavior as this Windows.UI.Xaml.Media.Animation.RepeatBehavior;
            otherwise, false.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Animation.RepeatBehavior.Equals(Windows.UI.Xaml.Media.Animation.RepeatBehavior)">
            <summary>
            Returns a value that indicates whether the specified Windows.UI.Xaml.Media.Animation.RepeatBehavior
            is equal to this Windows.UI.Xaml.Media.Animation.RepeatBehavior.
            </summary>
            <param name="repeatBehavior">The value to compare to this Windows.UI.Xaml.Media.Animation.RepeatBehavior.</param>
            <returns>
            true if both the type and repeat behavior of repeatBehavior are equal to
            this Windows.UI.Xaml.Media.Animation.RepeatBehavior; otherwise, false.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Animation.RepeatBehavior.Equals(Windows.UI.Xaml.Media.Animation.RepeatBehavior,Windows.UI.Xaml.Media.Animation.RepeatBehavior)">
            <summary>
            Indicates whether the two specified Windows.UI.Xaml.Media.Animation.RepeatBehavior
            values are equal.
            </summary>
            <param name="repeatBehavior1">The first value to compare.</param>
            <param name="repeatBehavior2">The second value to compare.</param>
            <returns>
            true if both the type and repeat behavior of repeatBehavior1 are equal to
            that of repeatBehavior2; otherwise, false.
            </returns>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Animation.RepeatBehavior.Count">
            <summary>
            Gets the number of times a Windows.UI.Xaml.Media.Animation.Timeline should
            repeat.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Animation.RepeatBehavior.Forever">
            <summary>
            Gets a Windows.UI.Xaml.Media.Animation.RepeatBehavior that specifies an infinite
            number of repetitions.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Animation.RepeatBehavior.HasCount">
            <summary>
            Gets a value that indicates whether the repeat behavior has a specified iteration
            count.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Animation.RepeatBehavior.Type">
            <summary>
            Gets or sets one of the Windows.UI.Xaml.Media.Animation.RepeatBehaviorType
            values that describes the way behavior repeats.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.SineEase">
            <summary>
            Represents an easing function that creates an animation that accelerates
            and/or decelerates using a sine formula.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.Storyboard">
            <summary>
            Controls animations with a timeline, and provides object and property targeting
            information for its child animations.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Animation.Storyboard.GetTargetName(Windows.UI.Xaml.Media.Animation.Timeline)">
            <summary>
            Gets the value of the Storyboard.TargetName XAML attached property from a
            target element.
            </summary>
            <param name="element">The target element from which to get the value.</param>
            <returns>The Storyboard.TargetName value of the target element.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Animation.Storyboard.SetTargetName(Windows.UI.Xaml.Media.Animation.Timeline,System.String)">
            <summary>
            Sets the value of the Storyboard.TargetName XAML attached property for a
            target element.
            </summary>
            <param name="element">The target element to set the value for.</param>
            <param name="name">
            The Storyboard.TargetName value of the target element to set. This should
            correspond to an existing Name or x:Name value on the element that the animation
            targets.
            </param>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.Storyboard.TargetNameProperty">
            <summary>
            Identifies the Storyboard.TargetName XAML attached property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Animation.Storyboard.GetTargetProperty(Windows.UI.Xaml.Media.Animation.Timeline)">
            <summary>
            Gets the value of the Storyboard.TargetProperty XAML attached property from
            a target element.
            </summary>
            <param name="element">The target element from which to get the value.</param>
            <returns>The Storyboard.TargetProperty value of the target element.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Animation.Storyboard.SetTargetProperty(Windows.UI.Xaml.Media.Animation.Timeline,Windows.UI.Xaml.PropertyPath)">
            <summary>
            Sets the value of the Storyboard.TargetProperty XAML attached property for
            a target element.
            </summary>
            <param name="element">The target element for which to set the value.</param>
            <param name="value"></param>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.Storyboard.TargetPropertyProperty">
            <summary>
            Identifies the Storyboard.TargetProperty XAML attached property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Animation.Storyboard.Begin">
            <summary>
            Initiates the set of animations associated with the storyboard.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Animation.Storyboard.GetTarget(Windows.UI.Xaml.Media.Animation.Timeline)">
            <summary>
            Gets the value of the Storyboard.Target XAML attached property from a
            target element.
            </summary>
            <param name="element">The target element from which to get the value.</param>
            <returns>The Storyboard.Target value of the target element.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Animation.Storyboard.SetTarget(Windows.UI.Xaml.Media.Animation.Timeline,Windows.UI.Xaml.DependencyObject)">
            <summary>
            Causes the specified Timeline to target the specified object.
            </summary>
            <param name="timeline">The timeline that targets the specified dependency object.</param>
            <param name="target">The actual instance of the object to target.</param>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.Storyboard.TargetProperty">
            <summary>
            Identifies the Storyboard.TargetName XAML attached property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Animation.Storyboard.Stop(Windows.UI.Xaml.FrameworkElement,System.String)">
            <summary>
            Stops the storyboard.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Animation.Storyboard.Stop(Windows.UI.Xaml.FrameworkElement)">
            <summary>
            Stops the storyboard.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Animation.Storyboard._guidToIterationParametersDict">
            
        </member>
        <member name="P:Windows.UI.Xaml.Media.Animation.Storyboard.Children">
            <summary>
            Gets the collection of child Timeline objects.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.IterationParameters">
            <summary>
            this class has been added to make passing the parameters through the iterations easier.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.TimelineCollection">
            <summary>
            Represents a collection of Timeline objects.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.Transition">
            <summary>
            Represents a visual behavior that occurs when a control is affected by a
            predefined action or state change. These may be applied to individual elements
            using the Transitions property, or applied to the children of a Panel using
            the ChildrenTransitions property.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Animation.TransitionCollection">
            <summary>
            Represents a collection of Transition objects.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Imaging.BitmapImage">
            <summary>
            Provides the practical object source type for the Source and ImageSource properties.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Imaging.BitmapSource">
            <summary>
            Provides a source object for properties that use a bitmap.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.ImageSource">
            <summary>
            Provides an object source type for Source and ImageSource.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Imaging.BitmapSource.#ctor">
            <summary>
            Provides base class initialization behavior for BitmapSource-derived classes.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Imaging.BitmapSource.SetSource(System.IO.Stream)">
            <summary>
            Sets the source image for a BitmapSource by accessing a stream.
            </summary>
            <param name="streamSource">The stream source that sets the image source value.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Imaging.BitmapSource.SetSource(System.String)">
            <summary>
            Sets the source image for a BitmapSource by passing a "data URL".
            </summary>
            <param name="dataUrl">The image encoded in "data URL" format.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Imaging.BitmapImage.#ctor">
            <summary>
            Initializes a new instance of the BitmapImage class.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Imaging.BitmapImage.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the BitmapImage class with the specified path to the source.
            </summary>
            <param name="uriSource">The path to the source of the image.</param>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Imaging.BitmapImage.UriSourceProperty">
            <summary>
            Identifies the UriSource dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Imaging.BitmapImage.UriSource">
            <summary>
            Gets or sets the Uniform Resource Identifier (URI) of the graphics source
            file that generated this BitmapImage.
            
            Returns an object describing the of the graphics source file that generated this BitmapImage.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Media.Imaging.BitmapImage.ImageFailed">
            <summary>
            Occurs when there is an error associated with image retrieval or format.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Media.Imaging.BitmapImage.ImageOpened">
            <summary>
            Occurs when the image source is downloaded and decoded with no failure. You can use this event to determine the size of an image before rendering it.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Media.Imaging.BitmapImage.UriSourceChanged">
            <summary>
            Occurs when the UriSource is changed
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.ArcSegment">
            <summary>
            Represents an elliptical arc between two points.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.PathSegment">
            <summary>
            Represents a segment of a PathFigure object.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.PathSegment.DefineInCanvas(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Object,Windows.Foundation.Point)">
            <summary>
            Defines the segment in the canvas, then returns the position of the last point of the segment.
            </summary>
            <param name="xOffsetToApplyBeforeMultiplication"></param>
            <param name="yOffsetToApplyBeforeMultiplication"></param>
            <param name="xOffsetToApplyAfterMultiplication"></param>
            <param name="yOffsetToApplyAfterMultiplication"></param>
            <param name="horizontalMultiplicator"></param>
            <param name="verticalMultiplicator"></param>
            <param name="canvasDomElement"></param>
            <param name="previousLastPOint"></param>
            <returns>The position of the last point of the segment (that will be the starting position for the next segment).</returns>
        </member>
        <member name="F:Windows.UI.Xaml.Media.ArcSegment.IsLargeArcProperty">
            <summary>
            Identifies the IsLargeArc dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.ArcSegment.PointProperty">
            <summary>
            Identifies the Point dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.ArcSegment.RotationAngleProperty">
            <summary>
            Identifies the RotationAngle dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.ArcSegment.SizeProperty">
            <summary>
            Identifies the Size dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.ArcSegment.SweepDirectionProperty">
            <summary>
            Identifies the SweepDirection dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.ArcSegment.IsLargeArc">
            <summary>
            Gets or sets a value that indicates whether the arc should be greater than
            180 degrees.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.ArcSegment.Point">
            <summary>
            Gets or sets the endpoint of the elliptical arc.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.ArcSegment.RotationAngle">
            <summary>
            Gets or sets the amount (in degrees) by which the ellipse is rotated about
            the x-axis.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.ArcSegment.Size">
            <summary>
            Gets or sets the x-radius and y-radius of the arc as a Size structure.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.ArcSegment.SweepDirection">
            <summary>
            Gets or sets a value that specifies whether the arc is drawn in the Clockwise
            or Counterclockwise direction.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.BezierSegment">
            <summary>
            Represents a cubic Bezier curve drawn between two points.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.BezierSegment.Point1Property">
            <summary>
            Identifies the Point1 dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.BezierSegment.Point2Property">
            <summary>
            Identifies the Point2 dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.BezierSegment.Point3Property">
            <summary>
            Identifies the Point3 dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.BezierSegment.Point1">
            <summary>
            Gets or sets the first control point of the curve.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.BezierSegment.Point2">
            <summary>
            Gets or sets the second control point of the curve.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.BezierSegment.Point3">
            <summary>
            Gets or sets the end point of the curve.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.CompositeTransform">
            <summary>
            Applies multiple transform operations to an object.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Transform">
            <summary>
            Defines functionality that enables transformations in a two-dimensional plane.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.GeneralTransform">
            <summary>
            Provides generalized transformation support for objects, such as points and
            rectangles.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.GeneralTransform.#ctor">
            <summary>
            Provides base class initialization behavior for GeneralTransform-derived
            classes.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.GeneralTransform.TransformPoint(Windows.Foundation.Point)">
            <summary>
            Transforms the specified point and returns the result.
            </summary>
            <param name="point">The point to transform.</param>
            <returns>The result of transforming point.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Media.GeneralTransform.Transform(Windows.Foundation.Point)">
            <summary>
            Transforms the specified point and returns the result.
            </summary>
            <param name="point">The point to transform.</param>
            <returns>The result of transforming point.</returns>
        </member>
        <member name="F:Windows.UI.Xaml.Media.CompositeTransform.ScaleXProperty">
            <summary>
            Identifies the ScaleX dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.CompositeTransform.ScaleYProperty">
            <summary>
            Identifies the ScaleY dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.CompositeTransform.SkewXProperty">
            <summary>
            Identifies the SkewX dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.CompositeTransform.SkewYProperty">
            <summary>
            Identifies the SkewY dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.CompositeTransform.RotationProperty">
            <summary>
            Identifies the Rotation dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.CompositeTransform.TranslateXProperty">
            <summary>
            Identifies the TranslateX dependency property. The default is 0.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.CompositeTransform.TranslateYProperty">
            <summary>
            Identifies the TranslateY dependency property
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.CompositeTransform.ScaleX">
            <summary>
            Gets or sets the x-axis scale factor. You can use this property to stretch
            or shrink an object horizontally. The default is 1.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.CompositeTransform.ScaleY">
            <summary>
            Gets or sets the y-axis scale factor. You can use this property to stretch
            or shrink an object vertically. The default is 1.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.CompositeTransform.SkewX">
            <summary>
            Gets or sets the x-axis skew angle, which is measured in degrees counterclockwise
            from the y-axis. A skew transform can be useful for creating the illusion
            of three-dimensional depth in a two-dimensional object. The default is 0.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.CompositeTransform.SkewY">
            <summary>
            Gets or sets the y-axis skew angle, which is measured in degrees counterclockwise
            from the x-axis. A skew transform can be useful for creating the illusion
            of three-dimensional depth in a two-dimensional object. The default is 0.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.CompositeTransform.Rotation">
            <summary>
            Gets or sets the angle, in degrees, of clockwise rotation. The default is 0.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.CompositeTransform.TranslateX">
            <summary>
            Gets or sets the distance to translate along the x-axis.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.CompositeTransform.TranslateY">
            <summary>
            Gets or sets the distance to translate (move) an object along the y-axis. The default is 0.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Matrix">
            <summary>
            Represents a 3x3 affine transformation matrix used for transformations in
            two-dimensional space.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a Matrix structure.
            </summary>
            <param name="m11">The Matrix structure's Matrix.M11 coefficient.</param>
            <param name="m12">The Matrix structure's Matrix.M12 coefficient.</param>
            <param name="m21">The Matrix structure's Matrix.M21 coefficient.</param>
            <param name="m22">The Matrix structure's Matrix.M22 coefficient.</param>
            <param name="offsetX">The Matrix structure's Matrix.OffsetX coefficient.</param>
            <param name="offsetY">The Matrix structure's Matrix.OffsetY coefficient.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Matrix.op_Inequality(Windows.UI.Xaml.Media.Matrix,Windows.UI.Xaml.Media.Matrix)">
            <summary>
            Determines whether the two specified Matrix structures are not identical.
            </summary>
            <param name="matrix1">The first Matrix structure to compare.</param>
            <param name="matrix2">The second Matrix structure to compare.</param>
            <returns>true if matrix1 and matrix2 are not identical; otherwise, false.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Matrix.op_Equality(Windows.UI.Xaml.Media.Matrix,Windows.UI.Xaml.Media.Matrix)">
            <summary>
            Determines whether the two specified Matrix structures are identical.
            </summary>
            <param name="matrix1">The first Matrix structure to compare.</param>
            <param name="matrix2">The second Matrix structure to compare.</param>
            <returns>true if matrix1 and matrix2 are identical; otherwise, false.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Matrix.Equals(Windows.UI.Xaml.Media.Matrix)">
            <summary>
            Determines whether the specified Matrix structure is identical to this instance.
            </summary>
            <param name="value">The instance of Matrix to compare to this instance.</param>
            <returns>true if instances are equal; otherwise, false.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Matrix.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is a Matrix structure that is identical to this Matrix.
            </summary>
            <param name="o">The System.Object to compare.</param>
            <returns>true if o is a Matrix structure that is identical to this Matrix structure; otherwise, false.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Matrix.GetHashCode">
            <summary>
            Returns the hash code for this Matrix structure.
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Windows.UI.Xaml.Media.Matrix.ToString" -->
        <member name="P:Windows.UI.Xaml.Media.Matrix.Identity">
            <summary>
            Gets an identity Matrix.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Matrix.IsIdentity">
            <summary>
            Gets a value that indicates whether this Matrix structure is an identity matrix.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Matrix.M11">
            <summary>
            Gets or sets the value of the first row and first column of this Matrix structure. The default value is 1.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Matrix.M12">
            <summary>
            Gets or sets the value of the first row and second column of this Matrix structure. The default value is 0.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Matrix.M21">
            <summary>
            Gets or sets the value of the second row and first column of this Matrix structure. The default value is 0.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Matrix.M22">
            <summary>
            Gets or sets the value of the second row and second column of this Matrix structure. The default value is 1.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Matrix.OffsetX">
            <summary>
            Gets or sets the value of the third row and first column of this Matrix structure. The default value is 0.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.Matrix.OffsetY">
            <summary>
            Gets or sets the value of the third row and second column of this Matrix structure. The default value is 0.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.MatrixTransform">
            <summary>
            Creates an arbitrary affine matrix transformation that is used to manipulate objects or coordinate systems in a two-dimensional plane.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.MatrixTransform.MatrixProperty">
            <summary>
            Identifies the Matrix dependency property.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Windows.UI.Xaml.Media.MatrixTransform.Matrix" -->
        <member name="T:Windows.UI.Xaml.Media.DoubleCollection">
            <summary>
            Represents an ordered collection of Double values.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.GradientStop">
            <summary>
            Describes the location and color of a transition point in a gradient.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.GradientStop.ColorProperty">
            <summary>
            Identifies the Color dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.GradientStop.OffsetProperty">
            <summary>
            Identifies the Offset dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.GradientStop.Color">
            <summary>
            Gets or sets the color of the gradient stop.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.GradientStop.Offset">
            <summary>
            Gets the location of the gradient stop within the gradient vector.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.GradientStopCollection">
            <summary>
            Represents a collection of GradientStop objects that can be individually
            accessed by index.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.LinearGradientBrush">
            <summary>
            Paints an area with a linear gradient.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.LinearGradientBrush.#ctor(Windows.UI.Xaml.Media.GradientStopCollection,System.Double)">
            <summary>
            Initializes a new instance of the LinearGradientBrush class that has the
            specified GradientStopCollection and angle.
            </summary>
            <param name="gradientStopCollection">The GradientStops to set on this brush.</param>
            <param name="angle">
            A System.Double that represents the angle, in degrees, of the gradient. A
            value of 0 creates a horizontal gradient, and a value of 90 creates a vertical
            gradient. Negative values are permitted, as are values over 360 (which are
            treated as mod 360).
            </param>
        </member>
        <member name="F:Windows.UI.Xaml.Media.LinearGradientBrush.EndPointProperty">
            <summary>
            Identifies the EndPoint dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.LinearGradientBrush.StartPointProperty">
            <summary>
            Identifies the StartPoint dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.LinearGradientBrush.EndPoint">
            <summary>
            Gets or sets the ending two-dimensional coordinates of the linear gradient.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.LinearGradientBrush.StartPoint">
            <summary>
            Gets or sets the starting two-dimensional coordinates of the linear gradient.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.PenLineJoin">
            <summary>
            Describes the shape that joins two lines or segments.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.PenLineJoin.Miter">
            <summary>
            Line joins use regular angular vertices.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.PenLineJoin.Bevel">
            <summary>
            Line joins use beveled vertices.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.PenLineJoin.Round">
            <summary>
            Line joins use rounded vertices.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.PenLineCap">
            <summary>
            Describes the shape at the end of a line or segment.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.PenLineCap.Flat">
            <summary>
            A cap that does not extend past the last point of the line. Comparable to
            no line cap.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.PenLineCap.Square">
            <summary>
            A rectangle that has a height equal to the line thickness and a length equal
            to half the line thickness.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.PenLineCap.Round">
            <summary>
            A semicircle that has a diameter equal to the line thickness.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.ScaleTransform">
            <summary>
            Scales an object in the two-dimensional x-y coordinate system.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.ScaleTransform.ScaleXProperty">
            <summary>
            Identifies the ScaleX dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.ScaleTransform.ScaleYProperty">
            <summary>
            Identifies the ScaleY dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.ScaleTransform.ScaleX">
            <summary>
            Gets or sets the x-axis scale factor.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.ScaleTransform.ScaleY">
            <summary>
            Gets or sets the y-axis scale factor.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.EllipseGeometry">
            <summary>
            Represents the geometry of a circle or ellipse.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Geometry">
            <summary>
            Provides a base class for objects that define geometric shapes. Geometry
            objects can be used for clipping regions and as geometry definitions for
            rendering two-dimensional graphical data as a Path.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.Geometry.DefineInCanvas(Windows.UI.Xaml.Shapes.Path,System.Object,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Windows.Foundation.Size)">
            <summary>
            Draws the Geometry on the canvas.
            </summary>
            <param name="canvasDomElement"></param>
        </member>
        <member name="F:Windows.UI.Xaml.Media.EllipseGeometry.CenterProperty">
            <summary>
            Identifies the Center dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.EllipseGeometry.RadiusXProperty">
            <summary>
            Identifies the RadiusX dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.EllipseGeometry.RadiusYProperty">
            <summary>
            Identifies the RadiusY dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.EllipseGeometry.Center">
            <summary>
            Gets or sets the center point of the EllipseGeometry.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.EllipseGeometry.RadiusX">
            <summary>
            Gets or sets the x-radius value of the EllipseGeometry.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.EllipseGeometry.RadiusY">
            <summary>
            Gets or sets the y-radius value of the EllipseGeometry.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.FillRule">
            <summary>
            Specifies how the intersecting areas of PathFigure objects contained in a
            Geometry are combined to form the area of the Geometry.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.FillRule.EvenOdd">
            <summary>
            Rule that determines whether a point is in the fill region by drawing a ray
            from that point to infinity in any direction and counting the number of path
            segments within the given shape that the ray crosses. If this number is odd,
            the point is inside; if even, the point is outside.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.FillRule.Nonzero">
            <summary>
            Rule that determines whether a point is in the fill region of the path by
            drawing a ray from that point to infinity in any direction and then examining
            the places where a segment of the shape crosses the ray. Starting with a
            count of zero, add one each time a segment crosses the ray from left to right
            and subtract one each time a path segment crosses the ray from right to left.
            After counting the crossings, if the result is zero then the point is outside
            the path. Otherwise, it is inside.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.FontFamily">
            <summary>
            Represents a family of related fonts.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.FontFamily.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FontFamily class from the specified font
            family string.
            </summary>
            <param name="familyName">The family name of the font to represent. This can include a hashed suffix.</param>
        </member>
        <member name="P:Windows.UI.Xaml.Media.FontFamily.Source">
            <summary>
            Gets the font family name that is used to construct the FontFamily object.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.LineGeometry">
            <summary>
            Represents the geometry of a line.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.LineGeometry.EndPointProperty">
            <summary>
            Identifies the EndPoint dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.LineGeometry.StartPointProperty">
            <summary>
            Identifies the StartPoint dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.LineGeometry.EndPoint">
            <summary>
            Gets or sets the end point of a line.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.LineGeometry.StartPoint">
            <summary>
            Gets or sets the start point of the line.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.LineSegment">
            <summary>
            Represents a line drawn between two points, which can be part of a PathFigure
            within Path data.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.LineSegment.PointProperty">
            <summary>
            Identifies the Point dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.LineSegment.Point">
            <summary>
            Gets or sets the end point of the line segment.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.MediaCanPlayResponse">
            <summary>
            Describes the likelihood that the media engine can play a media source based
            on its file type and characteristics.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.MediaCanPlayResponse.NotSupported">
            <summary>
            Media engine cannot support the media source.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.MediaCanPlayResponse.Maybe">
            <summary>
            Media engine might support the media source.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.MediaCanPlayResponse.Probably">
            <summary>
            Media engine can probably support the media source.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.PathFigure">
            <summary>
            Represents a subsection of a geometry, a single connected series of two-dimensional
            geometric segments.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.PathFigure.IsClosedProperty">
            <summary>
            Identifies the IsClosed dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.PathFigure.IsFilledProperty">
            <summary>
            Identifies the IsFilled dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.PathFigure.SegmentsProperty">
            <summary>
            Identifies the Segments dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.PathFigure.StartPointProperty">
            <summary>
            Identifies the StartPoint dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.PathFigure.IsClosed">
            <summary>
            Gets or sets a value that indicates whether this figure's first and last
            segments are connected.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.PathFigure.IsFilled">
            <summary>
            Gets or sets a value that indicates whether the contained area of this PathFigure
            is to be used for hit-testing, rendering, and clipping.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.PathFigure.Segments">
            <summary>
            Gets or sets the collection of segments that define the shape of this PathFigure
            object.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.PathFigure.StartPoint">
            <summary>
            Gets or sets the Point where the PathFigure begins.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.PathFigureCollection">
            <summary>
            Represents a collection of PathFigure objects that collectively make up the
            geometry of a PathGeometry.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.PathGeometry">
            <summary>
            Represents a complex shape that may be composed of arcs, curves, ellipses,
            lines, and rectangles.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.PathGeometry.FiguresProperty">
            <summary>
            Identifies the Figures dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.PathGeometry.FillRuleProperty">
            <summary>
            Identifies the FillRule dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.PathGeometry.GetNextNumber(System.String,System.Int32,System.Int32@)">
            <summary>
            reads and returns the next number in the given string, starting at the given index.
            </summary>
            <param name="stringContainingNumber">The string in which to read the number.</param>
            <param name="startIndex">The index at which we start reading the number (note: the number MUST be the first thing after given index, white spaces are handled)</param>
            <param name="stopIndex">The index of the character right after the end of the number.</param>
            <returns>The number in the string at the given index as a double.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Media.PathGeometry.GetPoint(System.String,System.Int32,System.Int32@)">
            <summary>
            Reads the next point's coordinates, starting reading at the given index in the string.
            </summary>
            <param name="stringContainingPoint">The string in which to read the point's coordinates.</param>
            <param name="startIndex">The index at which the point's coordinates start being given.</param>
            <param name="stopIndex">The index at which we are in the string after reading the point.</param>
            <returns></returns>
        </member>
        <member name="M:Windows.UI.Xaml.Media.PathGeometry.DefineInCanvas(Windows.UI.Xaml.Shapes.Path,System.Object,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Windows.Foundation.Size)">
            <summary>
            Applies FillStyle, StrokeStyle + Adds the figures to the canvas' context, then calls the Fill method.
            </summary>
            <param name="path"></param>
            <param name="canvasDomElement"></param>
        </member>
        <member name="P:Windows.UI.Xaml.Media.PathGeometry.Figures">
            <summary>
            Gets or sets the collection of PathFigure objects that describe the contents
            of a path.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.PathGeometry.FillRule">
            <summary>
            Gets or sets a value that determines how the intersecting areas contained
            in the PathGeometry are combined.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.PathSegmentCollection">
            <summary>
            Represents a collection of PathSegment objects that can be individually accessed
            by index.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.PointCollection">
            <summary>
            Represents a collection of Point values that can be individually accessed
            by index.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.PolyBezierSegment">
            <summary>
            Represents one or more cubic Bezier curves.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.PolyBezierSegment.PointsProperty">
            <summary>
            Identifies the Points dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.PolyBezierSegment.Points">
            <summary>
            Gets or sets the Point collection that defines this PolyBezierSegment object.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.PolyLineSegment">
            <summary>
            Represents a set of line segments defined by a Point collection with each
            Point specifying the end point of a line segment.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.PolyLineSegment.PointsProperty">
            <summary>
            Identifies the Points dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.PolyLineSegment.Points">
            <summary>
            Gets or sets the collection of Point values that defines this PolyLineSegment
            object.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.PolyQuadraticBezierSegment.PointsProperty">
            <summary>
            Identifies the Points dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.PolyQuadraticBezierSegment.Points">
            <summary>
            Gets or sets the Point collection that defines this PolyQuadraticBezierSegment
            object.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.QuadraticBezierSegment">
            <summary>
            Creates a quadratic Bezier curve between two points in a PathFigure.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.QuadraticBezierSegment.Point1Property">
            <summary>
            Identifies the Point1 dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.QuadraticBezierSegment.Point2Property">
            <summary>
            Identifies the Point2 dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.QuadraticBezierSegment.Point1">
            <summary>
            Gets or sets the control point of the curve.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.QuadraticBezierSegment.Point2">
            <summary>
            Gets or sets the end Point of this QuadraticBezierSegment.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.SkewTransform">
            <summary>
            Represents a two-dimensional skew.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.SkewTransform.AngleXProperty">
            <summary>
            Identifies the AngleX dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.SkewTransform.AngleYProperty">
            <summary>
            Identifies the AngleY dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.SkewTransform.AngleX">
            <summary>
            Gets or sets the x-axis skew angle, which is measured in degrees counterclockwise
            from the y-axis.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.SkewTransform.AngleY">
            <summary>
            Gets or sets the y-axis skew angle, which is measured in degrees counterclockwise
            from the x-axis.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.SweepDirection">
            <summary>
            Specifies the direction in which an elliptical arc is drawn.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.SweepDirection.Counterclockwise">
            <summary>
            Arcs are drawn in a counterclockwise (negative-angle) direction.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.SweepDirection.Clockwise">
            <summary>
            Arcs are drawn in a clockwise (positive-angle) direction.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.VisualTreeHelper">
            <summary>
            Provides utility methods that can used to traverse object relationships (along
            child object or parent object axes) in the visual tree.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.VisualTreeHelper.GetParent(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Returns an object's parent object in the visual tree.
            </summary>
            <param name="reference">The object for which to get the parent object.</param>
            <returns>The parent object of the reference object in the visual tree.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Media.VisualTreeHelper.GetChildrenCount(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Returns the number of children that exist in an object's child collection in the visual tree.
            </summary>
            <param name="reference">The source visual.</param>
            <returns>The number of visual children for the provided source visual.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Media.VisualTreeHelper.GetChild(Windows.UI.Xaml.DependencyObject,System.Int32)">
            <summary>
            Using the provided index, obtains a specific child object of the provided object by examining the visual tree. Please note that the current implementation does not guarantee that the index corresponds to the visual order of the controls.
            </summary>
            <param name="reference">The object that holds the child collection.</param>
            <param name="childIndex">The index of the requested child object in the reference child collection. Please note that the current implementation does not guarantee that the index corresponds to the visual order of the controls.</param>
            <returns>The child object as referenced by childIndex.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Media.VisualTreeHelper.FindElementInHostCoordinates(Windows.Foundation.Point)">
            <summary>
            Retrieves an object that is located within a specified point of an object's coordinate space.
            </summary>
            <param name="intersectingPoint">The point to use as the determination point.</param>
            <returns>The UIElement object that is determined to be located
            in the visual tree composition at the specified point.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Media.VisualTreeHelper.FindElementsInHostCoordinates(Windows.Foundation.Point,Windows.UI.Xaml.UIElement)">
            <summary>
            Retrieves a set of objects that are located within a specified point of an object's coordinate space. Note: the current implementation only returns the top-most element.
            </summary>
            <param name="intersectingPoint">The point to use as the determination point.</param>
            <param name="subtree">The object to search within.</param>
            <returns>An enumerable set of UIElement objects that are determined to be located
            in the visual tree composition at the specified point and within the specified
            subtree.  Note: the current implementation only returns the top-most element.</returns>
        </member>
        <member name="T:Windows.UI.Xaml.Media.RotateTransform">
            <summary>
            Rotates an object clockwise about a specified point in a two-dimensional
            x-y coordinate system.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.RotateTransform.AngleProperty">
            <summary>
            Identifies the Angle dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.RotateTransform.Angle">
            <summary>
            Gets or sets the angle, in degrees, of clockwise rotation.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.TranslateTransform">
            <summary>
            Translates (moves) an object in the two-dimensional x-y coordinate system.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.TranslateTransform.XProperty">
            <summary>
            Identifies the X dependency property
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.TranslateTransform.YProperty">
            <summary>
            Identifies the Y dependency property
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.TranslateTransform.X">
            <summary>
            Gets or sets the distance to translate along the x-axis.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.TranslateTransform.Y">
            <summary>
            Gets or sets the distance to translate (move) an object along the y-axis.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.Stretch">
            <summary>
            Describes how content is resized to fill its allocated space.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Stretch.None">
            <summary>
            The content preserves its original size.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Stretch.Fill">
            <summary>
            The content is resized to fill the destination dimensions. The aspect ratio is not preserved.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Stretch.Uniform">
            <summary>
            The content is resized to fit in the destination dimensions while it preserves its native aspect ratio.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Media.Stretch.UniformToFill">
            <summary>
            The content is resized to fill the destination dimensions while it preserves
            its native aspect ratio. If the aspect ratio of the destination rectangle
            differs from the source, the source content is clipped to fit in the destination
            dimensions.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Media.SolidColorBrush">
            <summary>
            Paints an area with a solid color.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.ICloneOnAnimation.Clone">
            <summary>
            Returns a clone of this object. Note: make sure to add a boolean to say that the clone is already a clone (for its future uses).
            </summary>
            <returns>A clone of this object.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Media.SolidColorBrush.#ctor">
            <summary>
            Initializes a new instance of the SolidColorBrush class with no color.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Media.SolidColorBrush.#ctor(Windows.UI.Color)">
            <summary>
            Initializes a new instance of the SolidColorBrush class with the specified
            Color.
            </summary>
            <param name="color">The color to apply to the brush.</param>
        </member>
        <member name="F:Windows.UI.Xaml.Media.SolidColorBrush.ColorProperty">
            <summary>
            Identifies the Color dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Media.SolidColorBrush.Color">
            <summary>
            Gets or sets the color of this SolidColorBrush.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Shapes.Ellipse">
            <summary>
            Draws an ellipse.
            </summary>
            <exclude/>
        </member>
        <member name="T:Windows.UI.Xaml.Shapes.Shape">
            <summary>
            Provides a base class for shape elements, such as Ellipse, Polygon, and Rectangle.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Shapes.Shape.#ctor">
            <summary>
            Provides base class initialization behavior for Shape derived classes.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Shapes.Shape.FillProperty">
            <summary>
            Identifies the Fill dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Shapes.Shape.StretchProperty">
            <summary>
            Identifies the Stretch dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Shapes.Shape.StrokeProperty">
            <summary>
            Identifies the Stroke dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Shapes.Shape.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Shapes.Shape.ScheduleRedraw">
            <summary>
            This is used to redraw only once instead of on every property change.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Shapes.Shape.StrokeStartLineCapProperty">
            <summary>
            Identifies the StrokeStartLineCap dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Shapes.Shape.StrokeEndLineCapProperty">
            <summary>
            Identifies the StrokeEndLineCap dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Shapes.Shape.StrokeLineJoinProperty">
            <summary>
            Identifies the StrokeLineJoin dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Shapes.Shape.StrokeMiterLimitProperty">
            <summary>
            Identifies the StrokeMiterLimit dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Shapes.Shape.DrawFillAndStroke(Windows.UI.Xaml.Shapes.Shape,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Windows.Foundation.Size)">
            <summary>
            This method calls the fill and stroke methods while isolating the possible transformations that the GetHtmlBrush does.
            </summary>
            <param name="shape"></param>
            <param name="fillRule"></param>
            <param name="minX"></param>
            <param name="minY"></param>
            <param name="maxX"></param>
            <param name="maxY"></param>
            <param name="horizontalMultiplicator"></param>
            <param name="verticalMultiplicator"></param>
            <param name="xOffsetToApplyBeforeMultiplication"></param>
            <param name="yOffsetToApplyBeforeMultiplication"></param>
        </member>
        <member name="F:Windows.UI.Xaml.Shapes.Shape.StrokeDashArrayProperty">
            <summary>
            Identifies the StrokeDashArray dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Shapes.Shape.StrokeDashOffsetProperty">
            <summary>
            Identifies the StrokeDashOffset dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Shapes.Shape.Fill">
            <summary>
            Gets or sets the Brush that specifies how to paint the interior of the shape.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Shapes.Shape.Stretch">
            <summary>
            Gets or sets a Stretch enumeration value that describes how the shape fills
            its allocated space.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Shapes.Shape.Stroke">
            <summary>
            Gets or sets the Brush that specifies how the Shape outline is painted.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Shapes.Shape.StrokeThickness">
            <summary>
            Gets or sets the width of the Shape stroke outline.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Shapes.Shape.StrokeStartLineCap">
            <summary>
            Gets or sets a PenLineCap enumeration value that describes the Shape at the
            start of a Stroke. The default is Flat.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Shapes.Shape.StrokeEndLineCap">
            <summary>
            Gets or sets a PenLineCap enumeration value that describes the Shape at the
            end of a line. The default is Flat.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Shapes.Shape.StrokeLineJoin">
            <summary>
            Gets or sets a PenLineJoin enumeration value that specifies the type of join
            that is used at the vertices of a Shape. The default value is Miter.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Shapes.Shape.StrokeMiterLimit">
            <summary>
            Gets or sets a limit on the ratio of the miter length to half the StrokeThickness
            of a Shape element. This value is always a positive number that is greater than
            or equal to 1.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Shapes.Shape.StrokeDashArray">
            <summary>
            Gets or sets a collection of Double values that indicates the pattern of
            dashes and gaps that is used to outline shapes.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Shapes.Shape.StrokeDashOffset">
            <summary>
            Gets or sets a value that specifies the distance within the dash pattern
            where a dash begins.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Shapes.Line">
            <summary>
            Draws a straight line between two points.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Shapes.Line.X1Property">
            <summary>
            Identifies the X1 dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Shapes.Line.X2Property">
            <summary>
            Identifies the X2 dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Shapes.Line.Y1Property">
            <summary>
            Identifies the Y1 dependency property.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Shapes.Line.Y2Property">
            <summary>
            Identifies the Y2 dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Shapes.Line.X1">
            <summary>
            Gets or sets the x-coordinate of the Line start point.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Shapes.Line.X2">
            <summary>
            Gets or sets the x-coordinate of the Line end point.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Shapes.Line.Y1">
            <summary>
            Gets or sets the y-coordinate of the Line start point.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Shapes.Line.Y2">
            <summary>
            Gets or sets the y-coordinate of the Line end point.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Shapes.Path">
            <summary>
            Draws a series of connected lines and curves. The line and curve dimensions
            are declared through the Data property, and can be specified either with
            a path-specific mini-language, or with an object model.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Shapes.Path.DataProperty">
            <summary>
            Identifies the Data dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Shapes.Path.Data">
            <summary>
            Gets or sets a Geometry that specifies the shape to be drawn.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Shapes.Rectangle">
            <summary>
            Draws a rectangle shape, which can have a stroke and a fill.
            </summary>
            <example>
            <code lang="XAML" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
            <StackPanel x:Name="MyStackPanel">
                <Rectangle Width="120" Height="40" Fill="#FFB9E58D" HorizontalAlignment="Left"/>
            </StackPanel>
            </code>
            <code lang="C#">
            Rectangle rect = new Rectangle() { Width = 60, Height = 30, Fill = new SolidColorBrush(Windows.UI.Colors.Blue) };
            MyStackPanel.Children.Add(rect);
            </code>
            </example>
        </member>
        <member name="T:Windows.UI.Xaml.CoerceValueCallback">
            <summary>
            Property value coercion callback.
            </summary>
            <param name="d">The DependencyObject on which the value changed.</param>
            <param name="baseValue">The value before coercion.</param>
            <returns>The value after coercion.</returns>
        </member>
        <member name="F:Windows.UI.Xaml.CSSEquivalent.OnlyUseVelocity">
            <summary>
            true means that all we will always use Velocity to apply the value to the dom Element, even when there is no animation. This is useful when the name used in Velocity is different than the name we would normally use and when Velocity ignores changes that happen outside of Velocity. See ScaleTransform.ScaleX
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Duration">
            <summary>
            Represents the duration of time that a Windows.UI.Xaml.Media.Animation.Timeline
            is active.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Duration.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the Windows.UI.Xaml.Duration structure with
            the supplied System.TimeSpan value.
            </summary>
            <param name="timeSpan">Represents the initial time interval of this duration.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Duration.op_Subtraction(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)">
            <summary>
            Subtracts the value of one Windows.UI.Xaml.Duration from another.
            </summary>
            <param name="t1">The first Windows.UI.Xaml.Duration.</param>
            <param name="t2">The Windows.UI.Xaml.Duration to subtract.</param>
            <returns></returns>
        </member>
        <member name="M:Windows.UI.Xaml.Duration.op_Inequality(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)">
            <summary>
            Determines if two Windows.UI.Xaml.Duration cases are not equal.
            </summary>
            <param name="t1">The first Windows.UI.Xaml.Duration to compare.</param>
            <param name="t2">The second Windows.UI.Xaml.Duration to compare.</param>
            <returns>
            true if exactly one of t1 or t2 represent a value, or if they both represent
            values that are not equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.Duration.op_UnaryPlus(Windows.UI.Xaml.Duration)">
            <summary>
            Returns the specified Windows.UI.Xaml.Duration.
            </summary>
            <param name="duration">The Windows.UI.Xaml.Duration to get.</param>
            <returns>The Windows.UI.Xaml.Duration operation result.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Duration.op_Equality(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)">
            <summary>
            Determines whether two Windows.UI.Xaml.Duration cases are equal.
            </summary>
            <param name="t1">The first Windows.UI.Xaml.Duration to compare.</param>
            <param name="t2">The second Windows.UI.Xaml.Duration to compare.</param>
            <returns>
            true if both Windows.UI.Xaml.Duration values have equal property values,
            or if all Windows.UI.Xaml.Duration values are null. Otherwise, this method
            returns false.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.Duration.Equals(Windows.UI.Xaml.Duration)">
            <summary>
            Determines whether a specified Windows.UI.Xaml.Duration is equal to this
            Windows.UI.Xaml.Duration.
            </summary>
            <param name="duration">The Windows.UI.Xaml.Duration to check for equality.</param>
            <returns>true if duration is equal to this Windows.UI.Xaml.Duration; otherwise, false.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Duration.Equals(System.Object)">
            <summary>
            Determines whether a specified object is equal to a Windows.UI.Xaml.Duration.
            </summary>
            <param name="value">Object to check for equality.</param>
            <returns>true if value is equal to this Windows.UI.Xaml.Duration; otherwise, false.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Duration.Equals(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)">
            <summary>
            Determines whether two Windows.UI.Xaml.Duration values are equal.
            </summary>
            <param name="t1">First Windows.UI.Xaml.Duration to compare.</param>
            <param name="t2">Second Windows.UI.Xaml.Duration to compare.</param>
            <returns>true if t1 is equal to t2; otherwise, false.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Duration.GetHashCode">
            <summary>
            Gets a hash code for this object.
            </summary>
            <returns>The hash code identifier.</returns>
        </member>
        <member name="P:Windows.UI.Xaml.Duration.Automatic">
            <summary>
            Gets a Windows.UI.Xaml.Duration value that is automatically determined.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Duration.Forever">
            <summary>
            Gets a Windows.UI.Xaml.Duration value that represents an infinite interval.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Duration.HasTimeSpan">
            <summary>
            Gets a value that indicates if this Windows.UI.Xaml.Duration represents a
            System.TimeSpan value.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Duration.TimeSpan">
            <summary>
            Gets the System.TimeSpan value that this Windows.UI.Xaml.Duration represents.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.RoutedEvent.ToString">
            <summary>
            Returns the string representation of the routed event.
            </summary>
            <returns>The name of the routed event.</returns>
        </member>
        <member name="T:Windows.UI.Xaml.SizeChangedEventArgs">
            <summary>
            Provides data related to the SizeChanged event.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.SizeChangedEventArgs.NewSize">
            <summary>
            Gets the new size of the object reporting the size change.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.SizeChangedEventHandler">
            <summary>
            Represents the method that will handle the SizeChanged event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">Provides data related to the SizeChanged event.</param>
        </member>
        <member name="T:Windows.UI.Xaml.StartupEventArgs">
            <summary>
            Contains the event data for the Application.Startup event.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.StartupEventHandler">
            <summary>
            Represents the method that will handle the Application.Startup event.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Windows.UI.Xaml.TemplateInstance">
            <summary>
            Defines a generated instance of a FrameworkTemplate.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.TemplateInstance.TemplateOwner">
            <summary>
            Gets or sets the element that contains the FrameworkTemplate. Do not use this Property.
            </summary>
            <exclude/>
        </member>
        <member name="P:Windows.UI.Xaml.TemplateInstance.TemplateContent">
            <summary>
            Gets or sets the visual subtree that has been generated for the FrameworkTemplate.
            Note: this should only be used inside the methods put as parameter in FrameworkTemplate.SetMethodToInstantiateFrameworkTemplate, to define the root of the Template's generated subtree.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.TemplatePartAttribute">
            <summary>
            Style authors should be able to identify the part type used for styling the specific class.
            The part is usually required in the style and should have a specific predefined name.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.TemplatePartAttribute.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.TemplatePartAttribute.Name">
            <summary>
            Part name used by the class to indentify required element in the style
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.TemplatePartAttribute.Type">
            <summary>
            Type of the element that should be used as a part with name specified in TemplatePartAttribute.Name
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.TemplateVisualStateAttribute">
            <summary>
            Define an expected VisualState in the contract between a Control and its
            ControlTemplate for use with the VisualStateManager.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.TemplateVisualStateAttribute.Name">
            <summary>
            Name of the VisualState.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.TemplateVisualStateAttribute.GroupName">
            <summary>
            Name of the VisualStateGroup containing this state.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.VisualState">
            <summary>
            Represents the visual appearance of the control when it is in a specific
            state.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.VisualState.Name">
            <summary>
            Gets the name of the VisualState.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.VisualState.Storyboard">
            <summary>
            Gets or sets a Storyboard that defines the appearance of the control when
            it is the state that is represented by the VisualState.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.VisualStateGroup">
            <summary>
            Contains mutually exclusive VisualState objects and VisualTransition objects
            that are used to go from one state to another.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.VisualStateGroup.CurrentState">
            <summary>
            Gets the most recently set VisualState from a successful call to the GoToState
            method.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.VisualStateGroup.Name">
            <summary>
            Gets the name of the VisualStateGroup.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.VisualStateGroup.States">
            <summary>
            Gets the collection of mutually exclusive VisualState objects.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.INTERNAL_VisualStateGroupCollection">
            <summary>
            Do not use this class
            </summary>
            <exclude/>
        </member>
        <member name="T:Windows.UI.Xaml.VisualStateManager">
            <summary>
            Manages states and the logic for transitioning between states for controls.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.VisualStateManager.GetVisualStateGroups(Windows.UI.Xaml.DependencyObject)">
            <summary>
            Gets the value of the VisualStateManager.VisualStateGroups attached property.
            </summary>
            <param name="obj">The object to get the value from.</param>
            <returns>
            The collection of VisualStateGroup objects that is associated with the specified
            object.
            </returns>
        </member>
        <member name="F:Windows.UI.Xaml.VisualStateManager.VisualStateGroupsProperty">
            <summary>
            Identifies the VisualStateManager.VisualStateGroup XAML attached property
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.VisualStateManager.SetVisualStateGroups(Windows.UI.Xaml.DependencyObject,System.Collections.IList)">
            <summary>
            Sets the value of the Grid.Column XAML attached property on the specified FrameworkElement.
            </summary>
            <param name="element">The target element on which to set the Grid.Row XAML attached property.</param>
            <param name="value">The property value to set.</param>
        </member>
        <member name="M:Windows.UI.Xaml.VisualStateManager.GoToState(Windows.UI.Xaml.Controls.Control,System.String,System.Boolean)">
            <summary>
            Transitions the control between two states.
            </summary>
            <param name="control">The control to transition between states.</param>
            <param name="stateName">The state to transition to.</param>
            <param name="useTransitions">
            True to use a VisualTransition to transition between states; otherwise,
            false.
            </param>
            <returns>
            True if the control successfully transitioned to the new state; otherwise,
            false.
            </returns>
        </member>
        <member name="T:Windows.UI.Xaml.ResourceDictionary">
            <summary>
            Defines a dictionary that contains resources used by components of the app.
            This dictionary is oriented toward defining the resources in XAML, and then
            retrieving them through XAML references via the StaticResource markup extension.
            Alternatively you can access resources by traversing the dictionary at run
            time.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.ResourceDictionary.#ctor">
            <summary>
            Initializes a new instance of the ResourceDictionary class.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.ResourceDictionary.Add(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
            <summary>
            Adds the specified key and value to the ResourceDictionary.
            </summary>
            <param name="item">A KeyValuePair that contains the key and the value of the element to add.</param>
        </member>
        <member name="M:Windows.UI.Xaml.ResourceDictionary.Add(System.Object,System.Object)">
            <summary>
            Adds the specified key and value to the ResourceDictionary.
            </summary>
            <param name="key">The key of the element to add.</param>
            <param name="value">The value of the element to add. The value can be null for reference types.</param>
        </member>
        <member name="M:Windows.UI.Xaml.ResourceDictionary.Clear">
            <summary>
            Removes all items from this ResourceDictionary.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.ResourceDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
            <summary>
            Determines whether the ResourceDictionary contains a specified KeyValuePair using the default equality comparer.
            </summary>
            <param name="item">The KeyValuePair of which presence is checked whithin the ResourceDictionary.</param>
            <returns>true if the KeyValuePair was found, false otherwise.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.ResourceDictionary.ContainsKey(System.Object)">
            <summary>
            Determines whether the ResourceDictionary contains the specified key.
            </summary>
            <param name="key">The key to locate in the ResourceDictionary.</param>
            <returns>
            true if the ResourceDictionary contains an
            element with the specified key; otherwise, false.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.ResourceDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Object,System.Object}[],System.Int32)">
            <summary>
            Copies the ResourceDictionary.KeyCollection
            elements to an existing one-dimensional System.Array, starting at the specified
            array index.
            </summary>
            <param name="array">
            The one-dimensional System.Array that is the destination of the elements
            copied from ResourceDictionary.KeyCollection.
            The System.Array must have zero-based indexing.
            </param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Windows.UI.Xaml.ResourceDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
            <summary>
            Removes the specified KeyValuePair from the ResourceDictionary.
            </summary>
            <param name="item">The KeyValuePair to remove.</param>
            <returns>
            true if the element is successfully found and removed; otherwise, false.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.ResourceDictionary.Remove(System.Object)">
            <summary>
            Removes the value with the specified key from the ResourceDictionary.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns>
            true if the element is successfully found and removed; otherwise, false.
            This method returns false if key is not found in the ResourceDictionary.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.ResourceDictionary.TryGetValue(System.Object,System.Object@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key of the value to get.</param>
            <param name="value">
            When this method returns, contains the value associated with the specified
            key, if the key is found; otherwise, the default value for the type of the
            value parameter. This parameter is passed uninitialized.
            </param>
            <returns>
            true if the ResourceDictionary contains an
            element with the specified key; otherwise, false.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.ResourceDictionary.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the ResourceDictionary.
            </summary>
            <returns>
            A System.Collections.Generic.Dictionary{object,object}.Enumerator structure for the ResourceDictionary.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Windows.UI.Xaml.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator" -->
        <member name="M:Windows.UI.Xaml.ResourceDictionary.System#Collections#Generic#IDictionary{System#Object@System#Object}#Add(System.Object,System.Object)">
            <summary>
            Adds the specified key and value to the IDictionary.
            </summary>
            <param name="key">The key of the element to add.</param>
            <param name="value">The value of the element to add. The value can be null for reference types.</param>
        </member>
        <member name="M:Windows.UI.Xaml.ResourceDictionary.System#Collections#Generic#IDictionary{System#Object@System#Object}#ContainsKey(System.Object)">
            <summary>
            Determines whether the IDictionary contains the specified key.
            </summary>
            <param name="key">The key to locate in the IDictionary.</param>
            <returns>
            true if the IDictionary contains an element with the specified key; otherwise, false.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.ResourceDictionary.Contains(System.Object)">
            <summary>
            Determines whether the System.Collections.IDictionary object contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the System.Collections.IDictionary object.</param>
            <returns>true if the System.Collections.IDictionary contains an element with the key; otherwise, false.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.ResourceDictionary.System#Collections#IDictionary#GetEnumerator">
            <summary>
            Returns an System.Collections.IDictionaryEnumerator object for the System.Collections.IDictionary object.
            </summary>
            <returns>
            An System.Collections.IDictionaryEnumerator object for the System.Collections.IDictionary object.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.ResourceDictionary.System#Collections#IDictionary#Remove(System.Object)">
            <summary>
            Removes the element with the specified key from the System.Collections.IDictionary object.
            </summary>
            <param name="key">The key of the element to remove.</param>
        </member>
        <member name="M:Windows.UI.Xaml.ResourceDictionary.FindName(System.String)">
            <summary>
            Finds the UIElement with the specified name.
            </summary>
            <param name="name">The name to look for.</param>
            <returns>The object with the specified name if any; otherwise null.</returns>
        </member>
        <member name="P:Windows.UI.Xaml.ResourceDictionary.Count">
            <summary>
            Gets the amount of elements in the ResourceDictionary
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.ResourceDictionary.Keys">
            <summary>
            Returns a list of the keys in the ResourceDictionary
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.ResourceDictionary.MergedDictionaries">
            <summary>
             Gets a collection of the ResourceDictionary dictionaries that constitute
             the various resource dictionaries in the merged dictionaries.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.ResourceDictionary.Source">
            <summary>
            Gets or sets a Uniform Resource Identifier (URI) that provides the source
            location of a merged resource dictionary.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.ResourceDictionary.Values">
            <summary>
            Gets an ICollection containing a List of the values in this ResourceDictionary.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.ResourceDictionary.Item(System.Object)">
            <summary>
            Gets or sets the value associated with the given key.
            </summary>
            <param name="key">The desired key to get or set.</param>
            <returns>Value of the key.</returns>
        </member>
        <member name="P:Windows.UI.Xaml.ResourceDictionary.IsReadOnly">
            <summary>
            Gets a value indicating whether the ResourceDictionary can be changed or not.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.ResourceDictionary.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the System.Collections.ICollection is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.ResourceDictionary.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the System.Collections.ICollection.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.ResourceDictionary.IsFixedSize">
            <summary>
            Gets a value indicating whether the System.Collections.IDictionary object has a fixed size.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.ResourceDictionary.System#Collections#IDictionary#Keys">
            <summary>
            Gets an System.Collections.ICollection object containing the keys of the System.Collections.IDictionary object.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.ResourceDictionary.System#Collections#IDictionary#Values">
            <summary>
            Gets an System.Collections.ICollection object containing the values in the System.Collections.IDictionary object.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Setter">
            <summary>
            Applies a value to a property in a Style.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.SetterBase">
            <summary>
            Represents the base class for value setters.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.SetterBase.IsSealedProperty">
            <summary>
            Identifies the IsSealed dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.SetterBase.IsSealed">
            <summary>
            Gets a value that indicates whether this object is in an immutable state.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Setter.#ctor">
            <summary>
            Initializes a new instance of the Setter class with no initial Property or
            Value.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Setter.#ctor(Windows.UI.Xaml.DependencyProperty,System.Object)">
            <summary>
            Initializes a new instance of the Setter class with initial Property and
            Value information.
            </summary>
            <param name="targetProperty">The dependency property identifier for the property that is being styled.</param>
            <param name="value">The value to assign to the value when the Setter applies.</param>
        </member>
        <member name="P:Windows.UI.Xaml.Setter.Property">
            <summary>
            Gets or sets the property to apply the Value to. The default is null.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Setter.Value">
            <summary>
            Gets or sets the value to apply to the property that is specified by the
            Setter.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.DataTemplate">
            <summary>
            Describes the visual structure of a data object.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.DataTemplate.#ctor">
            <summary>
            Initializes a new instance of the DataTemplate class.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.DispatcherTimer">
            <summary>
            Provides a timer that is integrated into the Dispatcher queue, which is processed
            at a specified interval of time and at a specified priority.  One scenario
            for this is to run code on the UI thread.
            </summary>
            <example>
            Here is how you can create and use a DispatcherTimer:
            <code lang="C#">
            DispatcherTimer _dispatcherTimer;
            </code>
            <code lang="C#">
            //We create a new instance of DispatcherTimer:
            _dispatcherTimer = new Dispatchertimer();
            //we set the time between each tick of the DispatcherTimer to 100 milliseconds:
            timer.Interval = new TimeSpan(0, 0, 0, 0, 100);
            _dispatcherTimer.Tick += DispatcherTimer_Tick;
            _dispatcherTimer.Start();
            </code>
            <code lang="C#">
            void DispatcherTimer_Tick(object sender, object e)
            {
                //Some code to execute at each Tick of the DispatcherTimer.
            }
            </code>
            When you want to stop the DispatcherTimer, you can use the following code:
            <code lang="C#">
                _dispatcherTimer.Stop();
            </code>
            </example>
        </member>
        <member name="M:Windows.UI.Xaml.DispatcherTimer.#ctor">
            <summary>
            Initializes a new instance of the DispatcherTimer class.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.DispatcherTimer.OnTick">
            <summary>
            Raises the Tick event.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.DispatcherTimer.Start">
            <summary>
            Starts the DispatcherTimer.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.DispatcherTimer.Stop">
            <summary>
            Stops the DispatcherTimer.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.DispatcherTimer.Interval">
            <summary>
            Gets or sets the amount of time between timer ticks.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.DispatcherTimer.IsEnabled">
            <summary>
            Gets a value that indicates whether the timer is running.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.DispatcherTimer.Tick">
            <summary>
            Occurs when the timer interval has elapsed.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.GridUnitType">
            <summary>
            Describes the kind of value that a Windows.UI.Xaml.GridLength
            object is holding.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.GridUnitType.Auto">
            <summary>
            [SECURITY CRITICAL] The size is determined by the size properties of the
            content object.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.GridUnitType.Pixel">
            <summary>
            [SECURITY CRITICAL] The value is expressed in pixels.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.GridUnitType.Star">
            <summary>
            [SECURITY CRITICAL] The value is expressed as a weighted proportion of available
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.CornerRadius">
            <summary>
            [SECURITY CRITICAL] Describes the characteristics of a rounded corner, such
            as can be applied to a Windows.UI.Xaml.Controls.Border.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.CornerRadius.#ctor(System.Double)">
            <summary>
            [SECURITY CRITICAL] Initializes a new Windows.UI.Xaml.CornerRadius structure,
            applying the same uniform radius to all its corners.
            </summary>
            <param name="uniformRadius">
            A uniform radius applied to all four Windows.UI.Xaml.CornerRadius properties
            (Windows.UI.Xaml.CornerRadius.TopLeft, Windows.UI.Xaml.CornerRadius.TopRight,
            Windows.UI.Xaml.CornerRadius.BottomRight, Windows.UI.Xaml.CornerRadius.BottomLeft).
            </param>
        </member>
        <member name="M:Windows.UI.Xaml.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            [SECURITY CRITICAL] Initializes a new instance of the Windows.UI.Xaml.CornerRadius
            structure, applying specific radius values to its corners.
            </summary>
            <param name="topLeft">Sets the initial Windows.UI.Xaml.CornerRadius.TopLeft.</param>
            <param name="topRight">Sets the initial Windows.UI.Xaml.CornerRadius.TopRight.</param>
            <param name="bottomRight">Sets the initial Windows.UI.Xaml.CornerRadius.BottomLeft.</param>
            <param name="bottomLeft">Sets the initial Windows.UI.Xaml.CornerRadius.BottomRight.</param>
        </member>
        <member name="M:Windows.UI.Xaml.CornerRadius.op_Inequality(Windows.UI.Xaml.CornerRadius,Windows.UI.Xaml.CornerRadius)">
            <summary>
            [SECURITY CRITICAL] Compares two Windows.UI.Xaml.CornerRadius structures
            for inequality.
            </summary>
            <param name="cr1">The first structure to compare.</param>
            <param name="cr2">The other structure to compare.</param>
            <returns>true if the two instances of Windows.UI.Xaml.CornerRadius are not equal; otherwise, false.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.CornerRadius.op_Equality(Windows.UI.Xaml.CornerRadius,Windows.UI.Xaml.CornerRadius)">
            <summary>
            [SECURITY CRITICAL] Compares the value of two Windows.UI.Xaml.CornerRadius
            structures for equality.
            </summary>
            <param name="cr1">The first structure to compare.</param>
            <param name="cr2">The other structure to compare.</param>
            <returns>
            true if the two instances of Windows.UI.Xaml.CornerRadius are equal; otherwise,
            false.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.CornerRadius.Equals(Windows.UI.Xaml.CornerRadius)">
            <summary>
            [SECURITY CRITICAL] Compares this Windows.UI.Xaml.CornerRadius structure
            to another Windows.UI.Xaml.CornerRadius structure for equality.
            </summary>
            <param name="cornerRadius">An instance of Windows.UI.Xaml.CornerRadius to compare for equality.</param>
            <returns>
            true if the two instances of Windows.UI.Xaml.CornerRadius are equal; otherwise,
            false.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.CornerRadius.Equals(System.Object)">
            <summary>
            [SECURITY CRITICAL] Compares this Windows.UI.Xaml.CornerRadius structure
            to another object for equality.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>true if the two objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.CornerRadius.GetHashCode">
            <summary>
            [SECURITY CRITICAL] Returns the hash code of the structure.
            </summary>
            <returns>A hash code for this Windows.UI.Xaml.CornerRadius.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.CornerRadius.ToString">
            <summary>
            [SECURITY CRITICAL] Returns the string representation of the Windows.UI.Xaml.CornerRadius
            structure.
            </summary>
            <returns>A System.String that represents the Windows.UI.Xaml.CornerRadius value.</returns>
        </member>
        <member name="P:Windows.UI.Xaml.CornerRadius.BottomLeft">
            <summary>
            [SECURITY CRITICAL] Gets or sets the radius of rounding, in pixels, of the
            bottom left corner of the object where a Windows.UI.Xaml.CornerRadius is
            applied.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.CornerRadius.BottomRight">
            <summary>
            [SECURITY CRITICAL] Gets or sets the radius of rounding, in pixels, of the
            bottom right corner of the object where a Windows.UI.Xaml.CornerRadius is
            applied.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.CornerRadius.TopLeft">
            <summary>
            [SECURITY CRITICAL] Gets or sets the radius of rounding, in pixels, of the
            top left corner of the object where a Windows.UI.Xaml.CornerRadius is applied.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.CornerRadius.TopRight">
            <summary>
            [SECURITY CRITICAL] Gets or sets the radius of rounding, in pixels, of the
            top right corner of the object where a Windows.UI.Xaml.CornerRadius is applied.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Thickness">
            <summary>
            [SECURITY CRITICAL] Describes the thickness of a frame around a rectangle.
            Four System.Double values describe the Windows.UI.Xaml.Thickness.Left, Windows.UI.Xaml.Thickness.Top,
            Windows.UI.Xaml.Thickness.Right, and Windows.UI.Xaml.Thickness.Bottom sides
            of the rectangle, respectively.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Thickness.#ctor(System.Double)">
            <summary>
            [SECURITY CRITICAL] Initializes a Windows.UI.Xaml.Thickness structure that
            has the specified uniform length on each side.
            </summary>
            <param name="uniformLength">The uniform length applied to all four sides of the bounding rectangle.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            [SECURITY CRITICAL] Initializes a Windows.UI.Xaml.Thickness structure that
            has specific lengths (supplied as a System.Double) applied to each side of
            the rectangle.
            </summary>
            <param name="left">The thickness for the left side of the rectangle.</param>
            <param name="top">The thickness for the upper side of the rectangle.</param>
            <param name="right">The thickness for the right side of the rectangle</param>
            <param name="bottom">The thickness for the lower side of the rectangle.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Thickness.op_Inequality(Windows.UI.Xaml.Thickness,Windows.UI.Xaml.Thickness)">
            <summary>
            [SECURITY CRITICAL] Compares two Windows.UI.Xaml.Thickness structures for
            inequality.
            </summary>
            <param name="t1">The first structure to compare.</param>
            <param name="t2">The other structure to compare.</param>
            <returns>
            true if the two instances of Windows.UI.Xaml.Thickness are not equal; otherwise,
            false.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.Thickness.op_Equality(Windows.UI.Xaml.Thickness,Windows.UI.Xaml.Thickness)">
            <summary>
            [SECURITY CRITICAL] Compares the value of two Windows.UI.Xaml.Thickness structures
            for equality.</summary>
            <param name="t1">The first structure to compare.</param>
            <param name="t2">The other structure to compare.</param>
            <returns>
            true if the two instances of Windows.UI.Xaml.Thickness are equal; otherwise,
            false.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.Thickness.Equals(System.Object)">
            <summary>
            [SECURITY CRITICAL] Compares this Windows.UI.Xaml.Thickness structure to
            another System.Object for equality.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>true if the two objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Thickness.Equals(Windows.UI.Xaml.Thickness)">
            <summary>
            [SECURITY CRITICAL] Compares this Windows.UI.Xaml.Thickness structure to
            another Windows.UI.Xaml.Thickness structure for equality.
            </summary>
            <param name="thickness">An instance of Windows.UI.Xaml.Thickness to compare for equality.</param>
            <returns>
            true if the two instances of Windows.UI.Xaml.Thickness are equal; otherwise,
            false.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.Thickness.GetHashCode">
            <summary>
            [SECURITY CRITICAL] Returns the hash code of the structure.
            </summary>
            <returns>A hash code for this instance of Windows.UI.Xaml.Thickness.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Thickness.ToString">
            <summary>
            [SECURITY CRITICAL] Returns the string representation of the Windows.UI.Xaml.Thickness
            structure.
            </summary>
            <returns>A System.String that represents the Windows.UI.Xaml.Thickness value.</returns>
        </member>
        <member name="P:Windows.UI.Xaml.Thickness.Bottom">
            <summary>
            [SECURITY CRITICAL] Gets or sets the width, in pixels, of the lower side
            of the bounding rectangle.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Thickness.Left">
            <summary>
            [SECURITY CRITICAL] Gets or sets the width, in pixels, of the left side of
            the bounding rectangle.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Thickness.Right">
            <summary>
            [SECURITY CRITICAL] Gets or sets the width, in pixels, of the right side
            of the bounding rectangle.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Thickness.Top">
            <summary>
            [SECURITY CRITICAL] Gets or sets the width, in pixels, of the upper side
            of the bounding rectangle.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.ExceptionRoutedEventArgs">
            <summary>
            Provides event data for exceptions that are raised as events by asynchronous operations, such as MediaFailed or ImageFailed.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.ExceptionRoutedEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of Windows.UI.Xaml.ExceptionRoutedEventArgs with the specified error message.
            </summary>
            <param name="errorMessage">The error message.</param>
        </member>
        <member name="M:Windows.UI.Xaml.ExceptionRoutedEventArgs.#ctor">
            <summary>
            Initializes a new instance of Windows.UI.Xaml.ExceptionRoutedEventArgs.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.ExceptionRoutedEventArgs.ErrorMessage">
            <summary>
            Gets the message component of the exception, as a string.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.ExceptionRoutedEventHandler">
            <summary>
            Represents the method that will handle certain events that report exceptions.
            These exceptions generally come from asynchronous operations.</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Windows.UI.Xaml.PropertyPath">
            <summary>
            Implements a data structure for describing a property as a path below another
            property, or below an owning type. Property paths are used in data binding to objects.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.PropertyPath.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PropertyPath class based on a path string.
            </summary>
            <param name="path">The path string to construct with.</param>
        </member>
        <member name="M:Windows.UI.Xaml.PropertyPath.#ctor(System.String,System.String,System.Func{Windows.UI.Xaml.DependencyObject,System.Collections.Generic.IEnumerable{System.Tuple{Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyProperty}}},System.Action{Windows.UI.Xaml.DependencyObject,System.Object},System.Action{Windows.UI.Xaml.DependencyObject,System.Object},System.Func{Windows.UI.Xaml.DependencyObject,System.Object})">
            <summary>
            Initializes a new Instance of the PropertyPath class based on methods to access the property from a DependencyObject.
            </summary>
            <param name="dependencyPropertyName">The name of the property (consists only of the last part of the path we would put in the XAML).</param>
            <param name="accessPropertyContainer">The function that will access the object on which the property is from the DependencyObject put in its parameters(corresponds to the path in XAML without the last property).</param>
            <param name="propertySetVisualState">The function that sets the VisualState value on the given element.</param>
            <param name="propertySetLocalValue">The function that sets the Local value on the given element.</param>
            <param name="propertyGetVisualState">The function that gets the VisualState value on the given element.</param>
            <ignore/>
        </member>
        <member name="F:Windows.UI.Xaml.PropertyPath.INTERNAL_AccessPropertyContainer">
            <summary>
            When set, defines a method designed to access the element that contains the property whose Value will be accessed.
            </summary>
            <ignore/>
        </member>
        <member name="F:Windows.UI.Xaml.PropertyPath.INTERNAL_PropertySetVisualState">
            <summary>
            Sets the VisualState value (value is second parameter) of the previously defined property on the DependencyObject (first parameter).
            </summary>
            <ignore/>
        </member>
        <member name="F:Windows.UI.Xaml.PropertyPath.INTERNAL_PropertySetLocalValue">
            <summary>
            Sets the Local value (value is second parameter) of the previously defined property on the DependencyObject (first parameter).
            </summary>
            <ignore/>
        </member>
        <member name="F:Windows.UI.Xaml.PropertyPath.INTERNAL_PropertyGetVisualState">
            <summary>
            Gets the VisualState value of the previously defined property on the DependencyObject set as parameter.
            </summary>
            <ignore/>
        </member>
        <member name="P:Windows.UI.Xaml.PropertyPath.Path">
            <summary>
            Gets the path value held by this PropertyPath. Returns the path value held by this PropertyPath.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.GridLength">
            <summary>
            Represents the length of elements that explicitly support Windows.UI.Xaml.GridUnitType.Star
            unit types.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.GridLength.Clone">
            <summary>
            Returns a new instance of Gridlength with the same properties values.
            </summary>
            <returns>A new instance of Gridlength with the same properties values.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.GridLength.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the Windows.UI.Xaml.GridLength
            structure using the specified absolute value in pixels.
            </summary>
            <param name="pixels">The absolute count of pixels to establish as the value.</param>
        </member>
        <member name="M:Windows.UI.Xaml.GridLength.#ctor(System.Double,Windows.UI.Xaml.GridUnitType)">
            <summary>
            Initializes a new instance of the Windows.UI.Xaml.GridLength
            structure and specifies what kind of value it holds.
            </summary>
            <param name="value">The initial value of this instance of Windows.UI.Xaml.GridLength.</param>
            <param name="type">The Windows.UI.Xaml.GridUnitType held by this instance of Windows.UI.Xaml.GridLength.</param>
        </member>
        <member name="M:Windows.UI.Xaml.GridLength.op_Inequality(Windows.UI.Xaml.GridLength,Windows.UI.Xaml.GridLength)">
            <summary>
            Compares two Windows.UI.Xaml.GridLength structures to
            determine if they are not equal.
            </summary>
            <param name="gl1">The first instance of Windows.UI.Xaml.GridLength to compare.</param>
            <param name="gl2">The second instance of Windows.UI.Xaml.GridLength to compare.</param>
            <returns>
            true if the two instances of Windows.UI.Xaml.GridLength do not have the same
            value and Windows.UI.Xaml.GridUnitType; otherwise, false.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.GridLength.op_Equality(Windows.UI.Xaml.GridLength,Windows.UI.Xaml.GridLength)">
            <summary>
            Compares two Windows.UI.Xaml.GridLength structures for
            equality.
            </summary>
            <param name="gl1">The first instance of Windows.UI.Xaml.GridLength to compare.</param>
            <param name="gl2">The second instance of Windows.UI.Xaml.GridLength to compare.</param>
            <returns>
            true if the two instances of Windows.UI.Xaml.GridLength have the same value
            and Windows.UI.Xaml.GridUnitType; otherwise, false.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.GridLength.Equals(Windows.UI.Xaml.GridLength)">
            <summary>
            Determines whether the specified Windows.UI.Xaml.GridLength
            is equal to the current Windows.UI.Xaml.GridLength.
            </summary>
            <param name="gridLength">The Windows.UI.Xaml.GridLength structure to compare with the current instance.</param>
            <returns>
            true if the specified Windows.UI.Xaml.GridLength has the same value and Windows.UI.Xaml.GridLength.GridUnitType
            as the current instance; otherwise, false.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.GridLength.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the
            current Windows.UI.Xaml.GridLength instance.
            </summary>
            <param name="oCompare">The object to compare with the current instance.</param>
            <returns>
            true if the specified object has the same value and Windows.UI.Xaml.GridUnitType
            as the current instance; otherwise, false.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.GridLength.GetHashCode">
            <summary>
            Gets a hash code for the Windows.UI.Xaml.GridLength.
            </summary>
            <returns>A hash code for the Windows.UI.Xaml.GridLength.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.GridLength.ToString">
            <summary>
            Returns a System.String representation of the Windows.UI.Xaml.GridLength.
            </summary>
            <returns>
            A System.String representation of the current Windows.UI.Xaml.GridLength
            structure.
            </returns>
        </member>
        <member name="P:Windows.UI.Xaml.GridLength.Auto">
            <summary>
            Gets an instance of Windows.UI.Xaml.GridLength that holds
            a value whose size is determined by the size properties of the content object.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.GridLength.GridUnitType">
            <summary>
            Gets the associated Windows.UI.Xaml.GridUnitType for
            the Windows.UI.Xaml.GridLength.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.GridLength.IsAbsolute">
            <summary>
            Gets a value that indicates whether the Windows.UI.Xaml.GridLength
            holds a value that is expressed in pixels.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.GridLength.IsAuto">
            <summary>
            Gets a value that indicates whether the Windows.UI.Xaml.GridLength
            holds a value whose size is determined by the size properties of the content
            object.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.GridLength.IsStar">
            <summary>
            Gets a value that indicates whether the Windows.UI.Xaml.GridLength
            holds a value that is expressed as a weighted proportion of available space.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.GridLength.Value">
            <summary>
            Gets a System.Double that represents the value of the
            Windows.UI.Xaml.GridLength.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.SetterBaseCollection">
            <exclude/>
        </member>
        <member name="T:Windows.UI.Xaml.Style">
            <summary>
            Contains property setters that can be shared between instances of a type.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Style.#ctor">
            <summary>
            Initializes a new instance of the Style class, with no initial TargetType and an empty Setters collection.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Style.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the Style class, with an initial TargetType and an empty Setters collection.
            </summary>
            <param name="targetType">The type on which the Style will be used.</param>
        </member>
        <member name="F:Windows.UI.Xaml.Style.IsSealedProperty">
            <summary>
            Identifies the IsSealed dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Style.Seal">
            <summary>
            Locks the style so that the TargetType property or any Setter in the Setters collection cannot be changed.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Style.BasedOn">
            <summary>
            Gets or sets a defined style that is the basis of the current style.
            Returns a defined style that is the basis of the current style. The default value is null.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Style.IsSealed">
            <summary>
            Gets a value that indicates whether the style is read-only and cannot be changed.
            Returns true if the style is read-only; otherwise, false.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Style.Setters">
            <summary>
            Gets a collection of Setter objects.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Style.SetterValueChanged">
            <summary>
            This event is used to notify all Items using the style that a setter has been changed
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Style.TargetType">
            <summary>
            Gets or sets the type for which the style is intended.
            Returns the type of object to which the style is applied.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.TextChangedEventArgs">
            <summary>
            Provides data for the TextChanged event.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.TextChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the TextChangedEventArgs class.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.TextChangedEventHandler">
            <summary>
            Represents the method that will handle the TextChanged event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Windows.UI.Xaml.Visibility">
            <summary>
            Specifies the display state of an element.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Visibility.Visible">
            <summary>
            Display the element.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.Visibility.Collapsed">
            <summary>
            Do not display the element, and do not reserve space for it in layout.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.TextWrapping">
            <summary>
            Specifies whether text wraps when it reaches the edge of its container.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.TextWrapping.NoWrap">
            <summary>
            No line wrapping is performed.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.TextWrapping.Wrap">
            <summary>
            Line breaking occurs if a line of text overflows beyond the available width
            of its container. Line breaking occurs even if the standard line-breaking
            algorithm cannot determine any line break opportunity, such as when a line
            of text includes a long word that is constrained by a fixed-width container
            without scrolling.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.TextAlignment">
            <summary>
            Specifies whether text is centered, left-aligned, or right-aligned.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.TextAlignment.Center">
            <summary>
            Text is centered within the container.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.TextAlignment.Left">
            <summary>
            Text is aligned to the left edge of the container.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.TextAlignment.Right">
            <summary>
            Text is aligned to the right edge of the container.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.TextAlignment.Justify">
            <summary>
            Text is justified within the container.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.HorizontalAlignment">
            <summary>
            Describes how a child element is vertically positioned or stretched within
            a parent's layout slot.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.HorizontalAlignment.Left">
            <summary>
            The element is aligned to the top of the parent's layout slot.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.HorizontalAlignment.Center">
            <summary>
            The element is aligned to the center of the parent's layout slot.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.HorizontalAlignment.Right">
            <summary>
            The element is aligned to the right of the parent's layout slot.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.HorizontalAlignment.Stretch">
            <summary>
            The element is stretched to fill the entire layout slot of the parent element.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.RoutedEventHandler">
            <summary>
            Represents the method that will handle routed events.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Windows.UI.Xaml.VerticalAlignment">
            <summary>
            Describes how a child element is vertically positioned or stretched within
            a parent's layout slot.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.VerticalAlignment.Top">
            <summary>
            The element is aligned to the top of the parent's layout slot.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.VerticalAlignment.Center">
            <summary>
            The element is aligned to the center of the parent's layout slot.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.VerticalAlignment.Bottom">
            <summary>
            The element is aligned to the bottom of the parent's layout slot.
            </summary>
        </member>
        <member name="F:Windows.UI.Xaml.VerticalAlignment.Stretch">
            <summary>
            The element is stretched to fill the entire layout slot of the parent element.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">
            <summary>
            Provides data for a PropertyChangedCallback implementation.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.DependencyPropertyChangedEventArgs.OldValue">
            <summary>
            Gets the value of the property before the change.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.DependencyPropertyChangedEventArgs.NewValue">
            <summary>
            Gets the value of the property after the change.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.DependencyPropertyChangedEventArgs.Property">
            <summary>
            Gets the identifier for the dependency property where the value change occurred.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.PropertyChangedCallback">
            <summary>
            Represents the callback that is invoked when the effective property value
            of a dependency property changes.
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="T:Windows.UI.Xaml.PropertyMetadata">
            <summary>
            Defines behavior aspects of a dependency property, including conditions it
            was registered with.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.PropertyMetadata.#ctor">
            <summary>
            Initializes a new instance of Windows.UI.Xaml.PropertyMetadata.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.PropertyMetadata.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the PropertyMetadata class, using a property
            default value.
            </summary>
            <param name="defaultValue">A default value for the property where this PropertyMetadata is applied.</param>
        </member>
        <member name="M:Windows.UI.Xaml.PropertyMetadata.#ctor(Windows.UI.Xaml.PropertyChangedCallback)">
            <summary>
            Initializes a new instance of the PropertyMetadata class, using a callback reference.
            </summary>
            <param name="propertyChangedCallback">A reference to the callback to call for property changed behavior.</param>
        </member>
        <member name="M:Windows.UI.Xaml.PropertyMetadata.#ctor(System.Object,Windows.UI.Xaml.PropertyChangedCallback)">
            <summary>
            Initializes a new instance of the PropertyMetadata class, using a property
            default value and callback reference.
            </summary>
            <param name="defaultValue">A default value for the property where this PropertyMetadata is applied.</param>
            <param name="propertyChangedCallback">A reference to the callback to call for property changed behavior.</param>
        </member>
        <member name="P:Windows.UI.Xaml.PropertyMetadata.DefaultValue">
            <summary>
            Gets the default value for the dependency property.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.PropertyMetadata.PropertyChangedCallback">
            <summary>
            Gets the method that is called when the property value changes.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.PropertyMetadata.MethodToUpdateDom">
            <summary>
            Gets the method that is called when the object is added to the visual tree, and when the property value changes while the object is already in the visual tree.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.PropertyMetadata.CoerceValueCallback">
            <summary>
            Gets the method that will be called on update of value.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.PropertyMetadata.Inherits">
            <summary>
            Determines if the property's value can be inherited from a parent element to a child element.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.PropertyMetadata.CallPropertyChangedWhenLoadedIntoVisualTree">
            <summary>
            Determines if the callback method should be called when the element is added to the visual tree.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.DependencyProperty">
            <summary>
            Represents a dependency property that is registered with the dependency property
            system. Dependency properties provide support for value expressions, data
            binding, animation, and property change notification.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.DependencyProperty.Register(System.String,System.Type,System.Type,Windows.UI.Xaml.PropertyMetadata)">
            <summary>
            Registers a dependency property with the specified property name, property type, owner type, and property metadata.
            </summary>
            <param name="name">The property name.</param>
            <param name="propertyType">The type of the property.</param>
            <param name="ownerType">The type of the property's owner.</param>
            <param name="typeMetadata">The property metadata.</param>
            <returns>The DependencyProperty.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.DependencyProperty.ToString">
            <summary>
            Returns the DependencyProperty as a string.
            </summary>
            <returns>The DependencyProperty as a string.</returns>
        </member>
        <member name="T:Windows.UI.Xaml.Window">
            <summary>
            Represents an application window.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Window.AttachToDomElement(System.Object)">
            <summary>
            Set the DOM element that will host the window. This can be set only to new windows. The MainWindow looks for a DIV that has the ID "cshtml5-root".
            </summary>
            <param name="rootDomElement">The DOM element that will host the window</param>
        </member>
        <member name="F:Windows.UI.Xaml.Window.ContentProperty">
            <summary>
            Identifies the Content dependency property.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Window.FindName(System.String)">
            <summary>
            Finds the UIElement with the specified name.
            </summary>
            <param name="name">The name to look for.</param>
            <returns>The object with the specified name if any; otherwise null.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.Window.Activate">
            <summary>
            Attempts to activate the application window by bringing it to the foreground
            and setting the input focus to it.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Window.ProcessOnClosing(System.Object)">
            <summary>
            Raises the Closing event
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Window.OnClosing(System.ComponentModel.ClosingEventArgs)">
            <summary>
            Raises the Closing event
            </summary>
            <param name="eventArgs">The arguments for the event.</param>
        </member>
        <member name="P:Windows.UI.Xaml.Window.Current">
            <summary>
            Gets the currently activated window for an application.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Window.SizeChanged">
            <summary>
            Occurs when the window has rendered or changed its rendering size.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Window.Bounds">
            <summary>
            Gets the height and width of the application window, as a Rect value.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Window.Content">
            <summary>
            Gets or sets the content of the Window.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Window.Closing">
            <summary>
            Occurs when the window is about to close.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.Application">
            <summary>
            Encapsulates the app and its available services.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Application.InjectDataContractSerializerIntoXmlSerializer">
            <summary>
            Injects the "DataContractSerializer" into the "XmlSerializer" (read note in the "XmlSerializer" implementation to understand why).
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Application.OnLaunched(Windows.ApplicationModel.Activation.LaunchActivatedEventArgs)">
            <summary>
            Invoked when the application is launched. Override this method to perform
            application initialization and to display initial content in the associated
            Window.
            </summary>
            <param name="args">Event data for the event.</param>
        </member>
        <member name="M:Windows.UI.Xaml.Application.GetWindow">
            <summary>
            Occurs just before an application shuts down and cannot be canceled.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Application.GetResourceString(System.Uri)">
            <summary>
            Returns a string that contains the content of the file that is located at the
            specified System.Uri.
            </summary>
            <param name="uriResource">The System.Uri that maps to an embedded resource.</param>
            <returns>
            A string that contains the content of the file that is located at the specified System.Uri.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.Application.GetResourceStream(System.Uri)">
            <summary>
            Returns a resource stream for a resource data file that is located at the
            specified System.Uri (see WPF Application Resource, Content, and Data Files).
            </summary>
            <param name="uriResource">The System.Uri that maps to an embedded resource.</param>
            <returns>
            A System.Windows.Resources.StreamResourceInfo that contains a resource stream
            for resource data file that is located at the specified System.Uri.
            </returns>
        </member>
        <member name="M:Windows.UI.Xaml.Application.ProcessOnExit(System.Object)">
            <summary>
            Raises the Exit event
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.Application.OnExit(System.EventArgs)">
            <summary>
            Raises the Exit event
            </summary>
            <param name="eventArgs">The arguments for the event.</param>
        </member>
        <member name="P:Windows.UI.Xaml.Application.Current">
            <summary>
            Gets the Application object for the current application.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Application.Resources">
            <summary>
            Gets a collection of application-scoped resources, such as styles, templates,
            and brushes.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Application.Startup">
            <summary>
            Occurs when an application is started.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Application.RootVisual">
            <summary>
            Gets or sets the main application UI. This is an alias for: Window.Current.Content
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Application.MainWindow">
            <summary>
            Gets the application main window.
            </summary>
        </member>
        <member name="E:Windows.UI.Xaml.Application.Exit">
            <summary>
            Occurs when an otherwise unhandled Tap interaction occurs over the hit test
            area of this element.
            </summary>
        </member>
        <member name="P:Windows.UI.Xaml.Application.Host">
            <summary>
            Gets various details about the application's host.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.MessageBox">
            <summary>
            Displays a message box.
            </summary>
        </member>
        <member name="M:Windows.UI.Xaml.MessageBox.Show(System.String)">
            <summary>
            Displays a message box that contains the specified text and an OK button.
            </summary>
            <param name="msg">A System.String that specifies the text to display.</param>
            <returns>System.Windows.MessageBoxResult.OK in all cases.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.MessageBox.Show(System.String,Windows.UI.Xaml.MessageBoxButton)">
            <summary>
            Displays a message box that contains the specified text, title bar caption, and response buttons.
            </summary>
            <param name="messageBoxText">The message to display.</param>
            <param name="button">A value that indicates the button or buttons to display.</param>
            <returns>A value that indicates the user's response to the message.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.MessageBox.Show(System.String,System.String)">
            <summary>
            Displays a message box that contains the specified text, title bar caption, and response buttons.
            </summary>
            <param name="messageBoxText">The message to display.</param>
            <param name="caption">The title of the message box.</param>
            <returns>System.Windows.MessageBoxResult.OK in all cases.</returns>
        </member>
        <member name="M:Windows.UI.Xaml.MessageBox.Show(System.String,System.String,Windows.UI.Xaml.MessageBoxButton)">
            <summary>
            Displays a message box that contains the specified text, title bar caption, and response buttons.
            </summary>
            <param name="messageBoxText">The message to display.</param>
            <param name="caption">The title of the message box.</param>
            <param name="button">A value that indicates the button or buttons to display.</param>
            <returns>A value that indicates the user's response to the message.</returns>
        </member>
        <member name="P:Windows.UI.Xaml.MessageBox.INTERNAL_CodeToShowTheMessageBoxWithTitleAndButtons">
            <summary>
            Intended to be called by the Simulator to inject the code to display a MessageBox with a title and button.
            </summary>
        </member>
        <member name="T:Windows.UI.Colors">
            <summary>
            Implements a set of predefined colors. See Color for usage information.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.AliceBlue">
            <summary>
            Gets the color value that represents the AliceBlue named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.AntiqueWhite">
            <summary>
            Gets the color value that represents the AntiqueWhite named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Aqua">
            <summary>
            Gets the color value that represents the Aqua named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Aquamarine">
            <summary>
            Gets the color value that represents the Aquamarine named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Azure">
            <summary>
            Gets the color value that represents the Azure named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Beige">
            <summary>
            Gets the color value that represents the Beige named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Bisque">
            <summary>
            Gets the color value that represents the Bisque named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Black">
            <summary>
            Gets the color value that represents the Black named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.BlanchedAlmond">
            <summary>
            Gets the color value that represents the BlanchedAlmond named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Blue">
            <summary>
            Gets the color value that represents the Blue named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.BlueViolet">
            <summary>
            Gets the color value that represents the BlueViolet named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Brown">
            <summary>
            Gets the color value that represents the Brown named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.BurlyWood">
            <summary>
            Gets the color value that represents the BurlyWood named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.CadetBlue">
            <summary>
            Gets the color value that represents the CadetBlue named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Chartreuse">
            <summary>
            Gets the color value that represents the Chartreuse named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Chocolate">
            <summary>
            Gets the color value that represents the Chocolate named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Coral">
            <summary>
            Gets the color value that represents the Coral named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.CornflowerBlue">
            <summary>
            Gets the color value that represents the CornflowerBlue named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Cornsilk">
            <summary>
            Gets the color value that represents the Cornsilk named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Crimson">
            <summary>
            Gets the color value that represents the Crimson named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Cyan">
            <summary>
            Gets the color value that represents the Cyan named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.DarkBlue">
            <summary>
            Gets the color value that represents the DarkBlue named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.DarkCyan">
            <summary>
            Gets the color value that represents the DarkCyan named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.DarkGoldenrod">
            <summary>
            Gets the color value that represents the DarkGoldenrod named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.DarkGray">
            <summary>
            Gets the color value that represents the DarkGray named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.DarkGreen">
            <summary>
            Gets the color value that represents the DarkGreen named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.DarkKhaki">
            <summary>
            Gets the color value that represents the DarkKhaki named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.DarkMagenta">
            <summary>
            Gets the color value that represents the DarkMagenta named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.DarkOliveGreen">
            <summary>
            Gets the color value that represents the DarkOliveGreen named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.DarkOrange">
            <summary>
            Gets the color value that represents the DarkOrange named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.DarkOrchid">
            <summary>
            Gets the color value that represents the DarkOrchid named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.DarkRed">
            <summary>
            Gets the color value that represents the DarkRed named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.DarkSalmon">
            <summary>
            Gets the color value that represents the DarkSalmon named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.DarkSeaGreen">
            <summary>
            Gets the color value that represents the DarkSeaGreen named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.DarkSlateBlue">
            <summary>
            Gets the color value that represents the DarkSlateBlue named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.DarkSlateGray">
            <summary>
            Gets the color value that represents the DarkSlateGray named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.DarkTurquoise">
            <summary>
            Gets the color value that represents the DarkTurquoise named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.DarkViolet">
            <summary>
            Gets the color value that represents the DarkViolet named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.DeepPink">
            <summary>
            Gets the color value that represents the DeepPink named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.DeepSkyBlue">
            <summary>
            Gets the color value that represents the DeepSkyBlue named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.DimGray">
            <summary>
            Gets the color value that represents the DimGray named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.DodgerBlue">
            <summary>
            Gets the color value that represents the DodgerBlue named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Firebrick">
            <summary>
            Gets the color value that represents the Firebrick named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.FloralWhite">
            <summary>
            Gets the color value that represents the FloralWhite named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.ForestGreen">
            <summary>
            Gets the color value that represents the ForestGreen named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Fuchsia">
            <summary>
            Gets the color value that represents the Fuchsia named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Gainsboro">
            <summary>
            Gets the color value that represents the Gainsboro named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.GhostWhite">
            <summary>
            Gets the color value that represents the GhostWhite named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Gold">
            <summary>
            Gets the color value that represents the Gold named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Goldenrod">
            <summary>
            Gets the color value that represents the Goldenrod named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Gray">
            <summary>
            Gets the color value that represents the Gray named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Green">
            <summary>
            Gets the color value that represents the Green named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.GreenYellow">
            <summary>
            Gets the color value that represents the GreenYellow named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Honeydew">
            <summary>
            Gets the color value that represents the Honeydew named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.HotPink">
            <summary>
            Gets the color value that represents the HotPink named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.IndianRed">
            <summary>
            Gets the color value that represents the IndianRed named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Indigo">
            <summary>
            Gets the color value that represents the Indigo named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Ivory">
            <summary>
            Gets the color value that represents the Ivory named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Khaki">
            <summary>
            Gets the color value that represents the Khaki named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Lavender">
            <summary>
            Gets the color value that represents the Lavender named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.LavenderBlush">
            <summary>
            Gets the color value that represents the LavenderBlush named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.LawnGreen">
            <summary>
            Gets the color value that represents the LawnGreen named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.LemonChiffon">
            <summary>
            Gets the color value that represents the LemonChiffon named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.LightBlue">
            <summary>
            Gets the color value that represents the LightBlue named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.LightCoral">
            <summary>
            Gets the color value that represents the LightCoral named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.LightCyan">
            <summary>
            Gets the color value that represents the LightCyan named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.LightGoldenrodYellow">
            <summary>
            Gets the color value that represents the LightGoldenrodYellow named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.LightGray">
            <summary>
            Gets the color value that represents the LightGray named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.LightGreen">
            <summary>
            Gets the color value that represents the LightGreen named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.LightPink">
            <summary>
            Gets the color value that represents the LightPink named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.LightSalmon">
            <summary>
            Gets the color value that represents the LightSalmon named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.LightSeaGreen">
            <summary>
            Gets the color value that represents the LightSeaGreen named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.LightSkyBlue">
            <summary>
            Gets the color value that represents the LightSkyBlue named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.LightSlateGray">
            <summary>
            Gets the color value that represents the LightSlateGray named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.LightSteelBlue">
            <summary>
            Gets the color value that represents the LightSteelBlue named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.LightYellow">
            <summary>
            Gets the color value that represents the LightYellow named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Lime">
            <summary>
            Gets the color value that represents the Lime named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.LimeGreen">
            <summary>
            Gets the color value that represents the LimeGreen named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Linen">
            <summary>
            Gets the color value that represents the Linen named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Magenta">
            <summary>
            Gets the color value that represents the Magenta named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Maroon">
            <summary>
            Gets the color value that represents the Maroon named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.MediumAquamarine">
            <summary>
            Gets the color value that represents the MediumAquamarine named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.MediumBlue">
            <summary>
            Gets the color value that represents the MediumBlue named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.MediumOrchid">
            <summary>
            Gets the color value that represents the MediumOrchid named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.MediumPurple">
            <summary>
            Gets the color value that represents the MediumPurple named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.MediumSeaGreen">
            <summary>
            Gets the color value that represents the MediumSeaGreen named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.MediumSlateBlue">
            <summary>
            Gets the color value that represents the MediumSlateBlue named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.MediumSpringGreen">
            <summary>
            Gets the color value that represents the MediumSpringGreen named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.MediumTurquoise">
            <summary>
            Gets the color value that represents the MediumTurquoise named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.MediumVioletRed">
            <summary>
            Gets the color value that represents the MediumVioletRed named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.MidnightBlue">
            <summary>
            Gets the color value that represents the MidnightBlue named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.MintCream">
            <summary>
            Gets the color value that represents the MintCream named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.MistyRose">
            <summary>
            Gets the color value that represents the MistyRose named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Moccasin">
            <summary>
            Gets the color value that represents the Moccasin named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.NavajoWhite">
            <summary>
            Gets the color value that represents the NavajoWhite named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Navy">
            <summary>
            Gets the color value that represents the Navy named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.OldLace">
            <summary>
            Gets the color value that represents the OldLace named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Olive">
            <summary>
            Gets the color value that represents the Olive named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.OliveDrab">
            <summary>
            Gets the color value that represents the OliveDrab named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Orange">
            <summary>
            Gets the color value that represents the Orange named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.OrangeRed">
            <summary>
            Gets the color value that represents the OrangeRed named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Orchid">
            <summary>
            Gets the color value that represents the Orchid named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.PaleGoldenrod">
            <summary>
            Gets the color value that represents the PaleGoldenrod named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.PaleGreen">
            <summary>
            Gets the color value that represents the PaleGreen named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.PaleTurquoise">
            <summary>
            Gets the color value that represents the PaleTurquoise named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.PaleVioletRed">
            <summary>
            Gets the color value that represents the PaleVioletRed named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.PapayaWhip">
            <summary>
            Gets the color value that represents the PapayaWhip named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.PeachPuff">
            <summary>
            Gets the color value that represents the PeachPuff named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Peru">
            <summary>
            Gets the color value that represents the Peru named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Pink">
            <summary>
            Gets the color value that represents the Pink named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Plum">
            <summary>
            Gets the color value that represents the Plum named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.PowderBlue">
            <summary>
            Gets the color value that represents the PowderBlue named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Purple">
            <summary>
            Gets the color value that represents the Purple named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Red">
            <summary>
            Gets the color value that represents the Red named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.RosyBrown">
            <summary>
            Gets the color value that represents the RosyBrown named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.RoyalBlue">
            <summary>
            Gets the color value that represents the RoyalBlue named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.SaddleBrown">
            <summary>
            Gets the color value that represents the SaddleBrown named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Salmon">
            <summary>
            Gets the color value that represents the Salmon named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.SandyBrown">
            <summary>
            Gets the color value that represents the SandyBrown named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.SeaGreen">
            <summary>
            Gets the color value that represents the SeaGreen named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.SeaShell">
            <summary>
            Gets the color value that represents the SeaShell named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Sienna">
            <summary>
            Gets the color value that represents the Sienna named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Silver">
            <summary>
            Gets the color value that represents the Silver named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.SkyBlue">
            <summary>
            Gets the color value that represents the SkyBlue named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.SlateBlue">
            <summary>
            Gets the color value that represents the SlateBlue named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.SlateGray">
            <summary>
            Gets the color value that represents the SlateGray named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Snow">
            <summary>
            Gets the color value that represents the Snow named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.SpringGreen">
            <summary>
            Gets the color value that represents the SpringGreen named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.SteelBlue">
            <summary>
            Gets the color value that represents the SteelBlue named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Tan">
            <summary>
            Gets the color value that represents the Tan named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Teal">
            <summary>
            Gets the color value that represents the Teal named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Thistle">
            <summary>
            Gets the color value that represents the Thistle named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Tomato">
            <summary>
            Gets the color value that represents the Tomato named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Transparent">
            <summary>
            Gets the color value that represents the Transparent named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Turquoise">
            <summary>
            Gets the color value that represents the Turquoise named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Violet">
            <summary>
            Gets the color value that represents the Violet named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Wheat">
            <summary>
            Gets the color value that represents the Wheat named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.White">
            <summary>
            Gets the color value that represents the White named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.WhiteSmoke">
            <summary>
            Gets the color value that represents the WhiteSmoke named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.Yellow">
            <summary>
            Gets the color value that represents the Yellow named color.
            </summary>
        </member>
        <member name="P:Windows.UI.Colors.YellowGreen">
            <summary>
            Gets the color value that represents the YellowGreen named color.
            </summary>
        </member>
        <member name="T:Windows.UI.Color">
            <summary>
            Describes a color in terms of alpha, red, green, and blue channels.
            </summary>
        </member>
        <member name="M:Windows.UI.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a new Windows.UI.Color structure by using the specified sRGB alpha
            channel and color channel values.
            </summary>
            <param name="a">
            The alpha channel, Windows.UI.Color.A, of the new color. The value must be
            between 0 and 255.
            </param>
            <param name="r">
            The red channel, Windows.UI.Color.R, of the new color. The value must be
            between 0 and 255.
            </param>
            <param name="g">
            The green channel, Windows.UI.Color.G, of the new color. The value must be
            between 0 and 255.
            </param>
            <param name="b">
            The blue channel, Windows.UI.Color.B, of the new color. The value must be
            between 0 and 255.
            </param>
            <returns>A Windows.UI.Color structure with the specified values.</returns>
        </member>
        <member name="P:Windows.UI.Color.A">
            <summary>
            Gets or sets the sRGB alpha channel value of the color.
            </summary>
        </member>
        <member name="P:Windows.UI.Color.B">
            <summary>
            Gets or sets the sRGB blue channel value of the color.
            </summary>
        </member>
        <member name="P:Windows.UI.Color.G">
            <summary>
            Gets or sets the sRGB green channel value of the color.
            </summary>
        </member>
        <member name="P:Windows.UI.Color.R">
            <summary>
            Gets or sets the sRGB red channel value of the color.
            </summary>
        </member>
        <member name="T:Windows.UI.Xaml.WindowSizeChangedEventHandler">
            <summary>
            Represents the method that will handle the Window.SizeChanged event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
    </members>
</doc>
